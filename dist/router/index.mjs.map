{
  "version": 3,
  "sources": ["../../lib/router/index.ts"],
  "sourcesContent": ["/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\nimport {\n  Component,\n  POJOComponent,\n  VnodeComponentInterface,\n  VnodeWithDom,\n  directive,\n  isComponent,\n  isNodeJs,\n  isVnodeComponent,\n  mount,\n  setAttribute,\n  v\n} from \"valyrian.js\";\n\ninterface Request {\n  params: Record<string, any>;\n  query: Record<string, any>;\n  url: string;\n  path: string;\n  matches: string[];\n  // eslint-disable-next-line no-unused-vars\n  redirect: (path: string) => Promise<string | void>;\n}\n\ninterface Middleware {\n  // eslint-disable-next-line no-unused-vars\n  (req: Request, err?: any):\n    | Promise<any | Component | POJOComponent | VnodeComponentInterface>\n    | any\n    | Component\n    | POJOComponent\n    | VnodeComponentInterface;\n}\n\ninterface Middlewares extends Array<Middleware> {}\n\ninterface RedirectFunction {\n  // eslint-disable-next-line no-unused-vars\n  (\n    path: string,\n    parentComponent?: Component | POJOComponent | VnodeComponentInterface,\n    preventPushState?: boolean\n  ): Promise<string | void>;\n}\n\nfunction flat(array: any) {\n  return Array.isArray(array) ? array.flat(Infinity) : [array];\n}\n\nfunction getPathWithoutPrefix(path: string, prefix: string) {\n  return getPathWithoutLastSlash(path.replace(new RegExp(`^${prefix}`), \"\"));\n}\n\nfunction getPathWithoutLastSlash(path: string) {\n  let pathWithoutLastSlash = path.replace(/\\/$/, \"\");\n  if (pathWithoutLastSlash === \"\") {\n    pathWithoutLastSlash = \"/\";\n  }\n  return pathWithoutLastSlash;\n}\n\n// Parse a query string into an object\nfunction parseQuery(queryParts?: string): Record<string, any> {\n  const parts = queryParts ? queryParts.split(\"&\") : [];\n  const query: Record<string, any> = {};\n\n  for (const nameValue of parts) {\n    const [name, value] = nameValue.split(\"=\", 2);\n    query[name] =\n      isNaN(Number(value)) === false ? Number(value) : value === \"true\" ? true : value === \"false\" ? false : value;\n  }\n\n  return query;\n}\n\ninterface RouteNode {\n  segment: string;\n  children: Map<string, RouteNode>;\n  middlewares?: Middlewares;\n  paramKey?: string;\n  isDynamic: boolean;\n}\n\nclass RouteTree {\n  root: RouteNode = { segment: \"\", children: new Map(), isDynamic: false };\n\n  addRoute(path: string, middlewares: Middlewares) {\n    const segments = path === \"/\" ? [path] : path.split(\"/\").filter(Boolean); // Divide el path en segmentos\n    let currentNode = this.root;\n\n    for (const segment of segments) {\n      const isDynamic = segment.startsWith(\":\");\n      const key = isDynamic ? \":\" : segment; // Usa ':' como clave para los nodos din\u00E1micos\n\n      if (!currentNode.children.has(key)) {\n        currentNode.children.set(key, {\n          segment: segment,\n          children: new Map(),\n          isDynamic: isDynamic,\n          paramKey: isDynamic ? segment.slice(1) : undefined\n        });\n      }\n\n      currentNode = currentNode.children.get(key)!;\n    }\n\n    currentNode.middlewares = flat(middlewares); // Asigna los middlewares a la ruta completa\n  }\n\n  // Buscar una ruta en el \u00E1rbol y extraer los par\u00E1metros si es necesario\n  // Buscar una ruta en el \u00E1rbol y extraer los par\u00E1metros si es necesario\n  findRoute(path: string): { middlewares?: Middlewares; params: Record<string, string> } | null {\n    const pathWithoutLastSlash = getPathWithoutLastSlash(path);\n    const segments =\n      pathWithoutLastSlash === \"/\" ? [pathWithoutLastSlash] : pathWithoutLastSlash.split(\"/\").filter(Boolean);\n    let currentNode: RouteNode | null = this.root;\n    const params: Record<string, string> = {};\n\n    const wildcardMiddlewares: Middlewares = []; // Cambiar para almacenar middlewares comod\u00EDn\n    const segmentsLength = segments.length;\n\n    for (let i = 0; i < segmentsLength; i++) {\n      if (!currentNode) {\n        break;\n      }\n\n      const segment = segments[i];\n\n      let found = false;\n\n      for (const [key, child] of currentNode.children) {\n        if (key === segment) {\n          currentNode = child;\n          found = true;\n          break;\n        }\n\n        if (segment !== \".*\" && key === \":\") {\n          currentNode = child;\n          params[child.paramKey!] = segment;\n          found = true;\n          break;\n        }\n\n        if (key === \".*\" && !found) {\n          wildcardMiddlewares.push(...(child.middlewares || []));\n        }\n      }\n\n      if (!found) {\n        if (currentNode.children.has(\".*\")) {\n          return { middlewares: wildcardMiddlewares, params };\n        }\n        return null;\n      }\n    }\n\n    // A\u00F1adimos los middlewares comod\u00EDn a los middlewares espec\u00EDficos de la ruta\n    const allMiddlewares = [...wildcardMiddlewares, ...(currentNode.middlewares || [])];\n\n    if (allMiddlewares.length === 0) {\n      return null;\n    }\n\n    return { middlewares: allMiddlewares, params };\n  }\n}\n\ninterface RouterInterface {\n  add(path: string, ...middlewares: Middlewares): Router;\n  use(...args: (string | Middleware)[]): Router;\n  use(subrouter: Router): Router;\n  use(path: string, subrouter: Router): Router;\n  routes(): string[];\n  go(path: string, parentComponent?: Component | POJOComponent | VnodeComponentInterface): Promise<string | void>;\n  getOnClickHandler(url: string): (e: MouseEvent) => void;\n}\n\nexport class Router {\n  private routeTree = new RouteTree();\n  container: Element | string | null = null;\n  query: Record<string, string | number> = {};\n  options: Record<string, any> = {};\n  url: string = \"\";\n  path: string = \"\";\n  params: Record<string, string | number | any> = {};\n  matches: string[] = [];\n  pathPrefix: string = \"\";\n\n  constructor(pathPrefix: string = \"\") {\n    this.pathPrefix = pathPrefix;\n  }\n\n  add(path: string, ...middlewares: Middlewares): Router {\n    const pathWithoutLastSlash = getPathWithoutLastSlash(`${this.pathPrefix}${path}`);\n    this.routeTree.addRoute(pathWithoutLastSlash, middlewares);\n    return this;\n  }\n\n  // Ajuste del m\u00E9todo use para aceptar m\u00FAltiples middlewares y subrouters\n  use(...args: (string | Middleware | Router)[]): Router {\n    let path = \"/.*\";\n    let start = 0;\n\n    // Verificamos si el primer argumento es una ruta (string)\n    if (typeof args[0] === \"string\") {\n      path = getPathWithoutLastSlash(`${this.pathPrefix}${args[0]}`);\n      start = 1;\n    }\n\n    // Procesamos todos los argumentos restantes\n    for (let i = start; i < args.length; i++) {\n      const item = args[i];\n\n      // Si es un subrouter, agregamos todas sus rutas como subrutas bajo el path\n      if (item instanceof Router) {\n        const subrouter = item as Router;\n        for (const subroute of subrouter.routes()) {\n          const subroutePath = `${path}${subroute}`;\n          this.routeTree.addRoute(subroutePath, subrouter.routeTree.findRoute(subroute)!.middlewares || []);\n        }\n        // Si es un middleware, lo a\u00F1adimos a la ruta correspondiente o como global\n      } else if (typeof item === \"function\") {\n        this.routeTree.addRoute(path, [item as Middleware]);\n      }\n    }\n\n    return this;\n  }\n\n  routes(): string[] {\n    return this.getAllRoutes(this.routeTree.root, \"\");\n  }\n\n  async go(\n    path: string,\n    parentComponent?: Component | POJOComponent | VnodeComponentInterface\n  ): Promise<string | void> {\n    if (!path) {\n      return this.handleError(new Error(\"The URL is empty.\"), parentComponent);\n    }\n\n    // Validaci\u00F3n de URL malformada\n    if (/%[^0-9A-Fa-f]{2}/.test(path)) {\n      return this.handleError(new Error(`The URL ${path} is malformed.`));\n    }\n\n    const constructedPath = getPathWithoutLastSlash(`${this.pathPrefix}${path}`);\n    const parts = constructedPath.split(\"?\", 2);\n    this.url = constructedPath;\n    this.query = parseQuery(parts[1]);\n\n    const finalPath = parts[0].replace(/(.+)\\/$/, \"$1\").split(\"#\")[0];\n    this.path = path;\n\n    const route = this.routeTree.findRoute(finalPath);\n\n    if (!route || !route.middlewares) {\n      return this.handleError(\n        new Error(`The URL ${constructedPath} was not found in the router's registered paths.`),\n        parentComponent\n      );\n    }\n\n    const { middlewares, params } = route;\n    this.params = params;\n\n    let component = await this.searchComponent(middlewares, parentComponent);\n\n    if (component === false) {\n      return;\n    }\n\n    if (!component) {\n      return this.handleError(\n        new Error(`The URL ${constructedPath} did not return a valid component.`),\n        parentComponent\n      );\n    }\n\n    if (isComponent(parentComponent) || isVnodeComponent(parentComponent)) {\n      const childComponent = isVnodeComponent(component) ? component : v(component as Component, {});\n      if (isVnodeComponent(parentComponent)) {\n        parentComponent.children.push(childComponent);\n        component = parentComponent;\n      } else {\n        component = v(parentComponent, {}, childComponent) as VnodeComponentInterface;\n      }\n    }\n\n    if (!isNodeJs && window.location.pathname + window.location.search !== constructedPath) {\n      window.history.pushState(null, \"\", constructedPath);\n    }\n\n    if (this.container) {\n      return mount(this.container, component);\n    }\n  }\n\n  getOnClickHandler(url: string) {\n    return (e: MouseEvent) => {\n      if (e.button !== 0 || e.ctrlKey || e.metaKey || e.shiftKey || e.altKey || e.defaultPrevented) {\n        return;\n      }\n\n      if (typeof url === \"string\" && url.length > 0) {\n        this.go(url);\n      }\n      e.preventDefault();\n    };\n  }\n\n  private getAllRoutes(node: RouteNode, prefix: string): string[] {\n    const routes: string[] = [];\n\n    for (const [key, child] of node.children) {\n      // eslint-disable-next-line sonarjs/no-nested-template-literals\n      const newPrefix = `${prefix}/${child.isDynamic ? `:${child.paramKey}` : key}`.replace(/\\/$/, \"\");\n      if (child.middlewares) {\n        routes.push(newPrefix);\n      }\n      routes.push(...this.getAllRoutes(child, newPrefix));\n    }\n\n    return routes;\n  }\n\n  private createRequest(): Request {\n    return {\n      params: this.params,\n      query: this.query,\n      url: this.url,\n      path: this.path,\n      matches: this.matches,\n      redirect: (path: string) => this.go(path)\n    };\n  }\n\n  private async handleError(error: any, parentComponent?: Component | POJOComponent | VnodeComponentInterface) {\n    // Buscar el middleware de error en la ruta \"/.*\"\n    const errorRoute = this.routeTree.findRoute(\"/.*\");\n\n    let component = null;\n\n    if (errorRoute && errorRoute.middlewares) {\n      // Recorrer los middlewares de error y ejecutar cada uno\n      for (const errorMiddleware of errorRoute.middlewares) {\n        try {\n          // Llamamos al middleware pas\u00E1ndole el error\n          const response = await errorMiddleware(this.createRequest(), error);\n\n          // Si el middleware retorna un componente v\u00E1lido, lo devolvemos\n          if (response !== undefined && (isComponent(response) || isVnodeComponent(response))) {\n            component = response;\n            break;\n          }\n        } catch (err) {\n          // Si hay un error en el middleware de error, lanzamos el error original\n          throw error;\n        }\n      }\n    }\n\n    if (component) {\n      // Si hay un middleware de error que devuelve un componente, lo devolvemos\n      if (isComponent(parentComponent) || isVnodeComponent(parentComponent)) {\n        const childComponent = isVnodeComponent(component) ? component : v(component as Component, {});\n        if (isVnodeComponent(parentComponent)) {\n          parentComponent.children.push(childComponent);\n          component = parentComponent;\n        } else {\n          component = v(parentComponent, {}, childComponent) as VnodeComponentInterface;\n        }\n      }\n\n      if (!isNodeJs && window.location.pathname + window.location.search !== this.url) {\n        window.history.pushState(null, \"\", this.url);\n      }\n\n      if (this.container) {\n        return mount(this.container, component);\n      }\n    }\n\n    // Si no hay un middleware de error o ninguno devuelve un componente, lanzamos el error original\n    throw error;\n  }\n\n  private async searchComponent(\n    middlewares: Middlewares,\n    parentComponent?: Component | POJOComponent | VnodeComponentInterface\n  ) {\n    const request: Request = this.createRequest();\n\n    let response;\n\n    for (const middleware of middlewares) {\n      try {\n        response = await middleware(request, response);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.error(`Error in middleware: ${(error as any).message}`);\n\n        return this.handleError(error, parentComponent);\n      }\n\n      // Si la respuesta es un componente o vnode, lo devolvemos para renderizado\n      if (response !== undefined && (isComponent(response) || isVnodeComponent(response))) {\n        return response;\n      }\n\n      // Si la respuesta es false, detenemos la cadena de middlewares\n      if (response === false) {\n        return false;\n      }\n    }\n\n    return response;\n  }\n}\n\nlet localRedirect: RedirectFunction;\n\nexport async function redirect(\n  url: string,\n  parentComponent?: Component | POJOComponent | VnodeComponentInterface,\n  preventPushState = false\n): Promise<string | void> {\n  if (!localRedirect) {\n    // eslint-disable-next-line no-console\n    console.warn(\"Redirect function is not initialized. Please mount the router first.\");\n    return;\n  }\n  return localRedirect(url, parentComponent, preventPushState);\n}\n\nexport function mountRouter(elementContainer: string | any, router: Router): void {\n  router.container = elementContainer;\n  localRedirect = router.go.bind(router);\n\n  if (!isNodeJs) {\n    function onPopStateGoToRoute(): void {\n      const pathWithoutPrefix = getPathWithoutPrefix(document.location.pathname, router.pathPrefix);\n      (router as unknown as Router).go(pathWithoutPrefix);\n    }\n    window.addEventListener(\"popstate\", onPopStateGoToRoute, false);\n    onPopStateGoToRoute();\n  }\n\n  directive(\"route\", (vnode: VnodeWithDom): void => {\n    const url = vnode.props[\"v-route\"];\n    setAttribute(\"href\", url, vnode);\n    setAttribute(\"onclick\", router.getOnClickHandler(url), vnode);\n  });\n}\n"],
  "mappings": "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",
  "names": ["onPopStateGoToRoute"]
}
