{
  "version": 3,
  "sources": ["../../lib/router/index.ts"],
  "sourcesContent": ["/* eslint-disable no-use-before-define */\nimport {\n  Component,\n  POJOComponent,\n  VnodeComponentInterface,\n  VnodeWithDom,\n  directive,\n  isComponent,\n  isNodeJs,\n  isVnodeComponent,\n  mount,\n  setAttribute,\n  v\n} from \"valyrian.js\";\n\ninterface Request {\n  params: Record<string, any>;\n  query: Record<string, any>;\n  url: string;\n  path: string;\n  matches: string[];\n  // eslint-disable-next-line no-unused-vars\n  redirect: (path: string, parentComponent?: Component | POJOComponent | VnodeComponentInterface) => false;\n}\n\ninterface Middleware {\n  // eslint-disable-next-line no-unused-vars\n  (req: Request, res?: any):\n    | Promise<any | Component | POJOComponent | VnodeComponentInterface>\n    | any\n    | Component\n    | POJOComponent\n    | VnodeComponentInterface;\n}\n\ninterface Middlewares extends Array<Middleware> {}\n\ninterface Path {\n  method: string;\n  path: string;\n  middlewares: Middlewares;\n  params: string[];\n  regexp: RegExp;\n}\n\ninterface RouterInterface {\n  paths: Path[];\n  container: Element | string | null;\n  query: Record<string, string | number>;\n  options: Record<string, any>;\n  url: string;\n  path: string;\n  params: Record<string, string | number | any>;\n  matches: string[];\n  pathPrefix: string;\n  // eslint-disable-next-line no-unused-vars\n  add(method: string, ...args: Middlewares): Router;\n  // eslint-disable-next-line no-unused-vars\n  use(...args: (string | Middleware | Router)[]): Router;\n\n  routes(): string[];\n  // eslint-disable-next-line no-unused-vars\n  go(path: string, parentComponent?: Component | POJOComponent | VnodeComponentInterface): Promise<string | void>;\n}\n\ninterface RedirectFunction {\n  // eslint-disable-next-line no-unused-vars\n  (url: string, parentComponent?: Component, preventPushState?: boolean): string | void;\n}\n\nfunction flat(array: any) {\n  return Array.isArray(array) ? array.flat(Infinity) : [array];\n}\n\nfunction getPathWithoutPrefix(path: string, prefix: string) {\n  return getPathWithoutLastSlash(path.replace(new RegExp(`^${prefix}`), \"\"));\n}\n\nfunction getPathWithoutLastSlash(path: string) {\n  let pathWithoutLastSlash = path.replace(/\\/$/, \"\");\n  if (pathWithoutLastSlash === \"\") {\n    pathWithoutLastSlash = \"/\";\n  }\n  return pathWithoutLastSlash;\n}\n\nconst addPath = ({\n  router,\n  method,\n  path,\n  middlewares\n}: {\n  router: Router;\n  method: string;\n  path: string;\n  middlewares: Middleware[];\n}): void => {\n  if (!method || !path || !Array.isArray(middlewares) || middlewares.length === 0) {\n    throw new Error(`Invalid route input: ${method} ${path} ${middlewares}`);\n  }\n\n  // Trim trailing slashes from the path\n  let realpath = path.replace(/(\\S)(\\/+)$/, \"$1\");\n\n  // Find the express-like params in the path\n  let params = (realpath.match(/:(\\w+)?/gi) || [])\n    // Set the names of the params found\n    .map((param) => param.slice(1));\n\n  // Generate a regular expression to match the path\n  let regexpPath = \"^\" + realpath.replace(/:(\\w+)/gi, \"([^\\\\/\\\\s]+)\") + \"$\";\n\n  router.paths.push({\n    method,\n    path: realpath,\n    middlewares: flat(middlewares),\n    params,\n    regexp: new RegExp(regexpPath, \"i\")\n  });\n};\n\n// Parse a query string into an object\nfunction parseQuery(queryParts?: string): Record<string, string> {\n  // Split the query string into an array of name-value pairs\n  let parts = queryParts ? queryParts.split(\"&\") : [];\n  let query: Record<string, string> = {};\n\n  // Iterate over the name-value pairs and add them to the query object\n  for (let nameValue of parts) {\n    let [name, value] = nameValue.split(\"=\", 2);\n    query[name] = value || \"\";\n  }\n\n  return query;\n}\n\n// Search for middlewares that match a given path\nfunction searchMiddlewares(router: RouterInterface, path: string): Middlewares {\n  let middlewares: Middlewares = [];\n  let params: Record<string, any> = {};\n  let matches = [];\n\n  // Search for middlewares\n  for (let item of router.paths) {\n    let match = item.regexp.exec(path);\n\n    // If we found middlewares\n    if (Array.isArray(match)) {\n      middlewares.push(...item.middlewares);\n      match.shift();\n\n      // Parse params\n      for (let [index, key] of item.params.entries()) {\n        params[key] = match[index];\n      }\n\n      // Add remaining matches to the array\n      matches.push(...match);\n\n      if (item.method === \"add\") {\n        router.path = getPathWithoutPrefix(item.path, router.pathPrefix);\n        break;\n      }\n    }\n  }\n\n  router.params = params;\n  router.matches = matches;\n\n  return middlewares;\n}\n\nasync function searchComponent(\n  router: RouterInterface,\n  middlewares: Middlewares\n): Promise<Component | VnodeComponentInterface | false | void> {\n  // Define request object with default values\n  const request: Request = {\n    params: router.params,\n    query: router.query,\n    url: router.url,\n    path: router.path,\n    matches: router.matches,\n    redirect: (path: string, parentComponent?: Component) => {\n      router.go(path, parentComponent);\n      // Return false to stop the middleware chain\n      return false;\n    }\n  };\n\n  // Initialize response variable\n  let response;\n\n  // Iterate through middlewares\n  for (const middleware of middlewares) {\n    // Invoke middleware and update response\n    response = await middleware(request, response);\n\n    // Return response if it's a valid component\n    if (response !== undefined && (isComponent(response) || isVnodeComponent(response))) {\n      return response;\n    }\n\n    // Return false if response is explicitly false to stop the middleware chain\n    if (response === false) {\n      return false;\n    }\n  }\n}\n\nexport class Router implements RouterInterface {\n  paths: Path[] = [];\n  container: Element | string | null = null;\n  query: Record<string, string | number> = {};\n  options: Record<string, any> = {};\n  url: string = \"\";\n  path: string = \"\";\n  params: Record<string, string | number | any> = {};\n  matches: string[] = [];\n  pathPrefix: string = \"\";\n\n  constructor(pathPrefix: string = \"\") {\n    this.pathPrefix = pathPrefix;\n  }\n\n  add(path: string, ...middlewares: Middlewares): Router {\n    let pathWithoutLastSlash = getPathWithoutLastSlash(`${this.pathPrefix}${path}`);\n    addPath({ router: this, method: \"add\", path: pathWithoutLastSlash, middlewares });\n    return this;\n  }\n\n  use(...middlewares: Middlewares | Router[] | string[]): Router {\n    let path = getPathWithoutLastSlash(\n      `${this.pathPrefix}${typeof middlewares[0] === \"string\" ? middlewares.shift() : \"/\"}`\n    );\n\n    for (const item of middlewares) {\n      if (item instanceof Router) {\n        const subrouter = item as Router;\n        for (const subpath of subrouter.paths) {\n          addPath({\n            router: this,\n            method: subpath.method,\n            path: `${path}${subpath.path}`.replace(/^\\/\\//, \"/\"),\n            middlewares: subpath.middlewares\n          });\n        }\n        continue;\n      }\n\n      if (typeof item === \"function\") {\n        addPath({ router: this, method: \"use\", path: `${path}.*`, middlewares: [item as Middleware] });\n      }\n    }\n\n    return this;\n  }\n\n  routes(): string[] {\n    return this.paths.filter((path) => path.method === \"add\").map((path) => path.path);\n  }\n\n  async go(path: string, parentComponent?: Component, preventPushState = false): Promise<string | void> {\n    if (!path) {\n      throw new Error(\"router.url.required\");\n    }\n\n    let constructedPath = getPathWithoutLastSlash(`${this.pathPrefix}${path}`);\n    const parts = constructedPath.split(\"?\", 2);\n    this.url = constructedPath;\n    this.query = parseQuery(parts[1]);\n\n    const middlewares = searchMiddlewares(this as RouterInterface, parts[0].replace(/(.+)\\/$/, \"$1\").split(\"#\")[0]);\n    let component = await searchComponent(this as RouterInterface, middlewares);\n\n    if (component === false) {\n      return;\n    }\n\n    if (!component) {\n      throw new Error(`The url ${constructedPath} requested wasn't found`);\n    }\n\n    if (isComponent(parentComponent) || isVnodeComponent(parentComponent)) {\n      const childComponent = isVnodeComponent(component) ? component : v(component as Component, {});\n      if (isVnodeComponent(parentComponent)) {\n        parentComponent.children.push(childComponent);\n        component = parentComponent;\n      } else {\n        component = v(parentComponent, {}, childComponent) as VnodeComponentInterface;\n      }\n    }\n\n    if (!isNodeJs && !preventPushState) {\n      window.history.pushState(null, \"\", constructedPath);\n    }\n\n    if (this.container) {\n      return mount(this.container, component);\n    }\n  }\n\n  getOnClickHandler(url: string) {\n    return (e: MouseEvent) => {\n      if (typeof url === \"string\" && url.length > 0) {\n        this.go(url);\n      }\n      e.preventDefault();\n    };\n  }\n}\n\nlet localRedirect: RedirectFunction;\n\nexport function redirect(url: string, parentComponent?: Component, preventPushState = false): string | void {\n  if (!localRedirect) {\n    throw new Error(\"router.redirect.not.found\");\n  }\n  return localRedirect(url, parentComponent, preventPushState);\n}\n\nexport function mountRouter(elementContainer: string | any, router: Router): void {\n  router.container = elementContainer;\n  localRedirect = router.go.bind(router);\n\n  if (!isNodeJs) {\n    function onPopStateGoToRoute(): void {\n      let pathWithoutPrefix = getPathWithoutPrefix(document.location.pathname, router.pathPrefix);\n      (router as unknown as Router).go(pathWithoutPrefix, undefined, true);\n    }\n    window.addEventListener(\"popstate\", onPopStateGoToRoute, false);\n    onPopStateGoToRoute();\n  }\n\n  directive(\"route\", (url: string, vnode: VnodeWithDom, oldnode?: VnodeWithDom): void => {\n    setAttribute(\"href\", url, vnode, oldnode);\n    setAttribute(\"onclick\", router.getOnClickHandler(url), vnode, oldnode);\n  });\n}\n"],
  "mappings": "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",
  "names": []
}
