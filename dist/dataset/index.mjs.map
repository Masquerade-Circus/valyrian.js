{
  "version": 3,
  "sources": ["../../lib/dataset/index.ts"],
  "sourcesContent": ["import { VnodeWithDom, createElement, directive, patch, updateAttributes } from \"valyrian.js\";\n\ninterface DataSetInterface<T> {\n  data: T[];\n  // eslint-disable-next-line no-unused-vars\n  reset: (data: T[]) => void;\n  // eslint-disable-next-line no-unused-vars\n  add: (...data: T[]) => void;\n  // eslint-disable-next-line no-unused-vars\n  update: (index: number, data: T) => void;\n  // eslint-disable-next-line no-unused-vars\n  delete: (index: number) => void;\n}\ninterface DataSetHandler<T> {\n  // eslint-disable-next-line no-unused-vars\n  (data: T, index: number): VnodeWithDom;\n}\n\nfunction deepFreeze(obj: any) {\n  if (typeof obj === \"object\" && obj !== null && !Object.isFrozen(obj)) {\n    if (Array.isArray(obj)) {\n      for (let i = 0, l = obj.length; i < l; i++) {\n        deepFreeze(obj[i]);\n      }\n    } else {\n      const props = Reflect.ownKeys(obj);\n      for (let i = 0, l = props.length; i < l; i++) {\n        deepFreeze(obj[props[i]]);\n      }\n    }\n    Object.freeze(obj);\n  }\n\n  return obj;\n}\n\nexport class DataSet<T> implements DataSetInterface<T> {\n  #vnode: VnodeWithDom | null = null;\n  // eslint-disable-next-line no-unused-vars\n  #handler: DataSetHandler<T> | null = null;\n  #data: T[] = [];\n  #isFrozen = false;\n  #dataProxy: T[] | null = null;\n\n  get data() {\n    if (this.#dataProxy === null) {\n      throw new Error(\"DataSet is not initialized\");\n    }\n\n    return this.#dataProxy;\n  }\n\n  set data(data: T[]) {\n    throw new Error(\"You need to use the reset method to set the data\");\n  }\n\n  #setData(data: T[]) {\n    if (this.#isFrozen) {\n      this.#data = deepFreeze([...data]);\n    } else {\n      this.#data = data;\n    }\n    this.#dataProxy = new Proxy(this.#data as T[], {\n      set: () => {\n        throw new Error(\"You need to use the add, update or delete methods to change the data\");\n      },\n      get(target: any, prop: string) {\n        return target[prop];\n      },\n      deleteProperty: () => {\n        throw new Error(\"You need to use the add, update or delete methods to change the data\");\n      }\n    }) as T[];\n  }\n\n  constructor(data: T[] = [], shouldFreeze = true) {\n    this.#isFrozen = shouldFreeze;\n    this.#setData(data);\n  }\n\n  setVnodeAndHandler(vnode: VnodeWithDom, handler: DataSetHandler<T>) {\n    this.#vnode = vnode;\n    this.#handler = handler;\n    this.reset(this.#data);\n  }\n\n  reset(data: T[]) {\n    this.#setData(data);\n    if (this.#vnode === null || this.#handler === null) {\n      return;\n    }\n\n    const vnode = this.#vnode;\n    const handler = this.#handler;\n\n    if (data.length === 0) {\n      vnode.children = [];\n      vnode.dom.textContent = \"\";\n      return;\n    }\n\n    const childrenLength = vnode.children.length;\n    for (let i = 0, l = data.length; i < l; i++) {\n      const child = handler(this.data[i], i);\n\n      if (i < childrenLength) {\n        const oldChild = vnode.children[i];\n        child.isSVG = oldChild.isSVG;\n        child.dom = oldChild.dom;\n        updateAttributes(child as VnodeWithDom, null);\n        vnode.children[i] = child;\n        patch(child as VnodeWithDom);\n        continue;\n      }\n\n      child.isSVG = vnode.isSVG || child.tag === \"svg\";\n      child.dom = createElement(child.tag as string, child.isSVG);\n      vnode.dom.appendChild(child.dom);\n      updateAttributes(child as VnodeWithDom, null);\n      vnode.children.push(child);\n      patch(child as VnodeWithDom);\n    }\n\n    for (let i = data.length; i < childrenLength; i++) {\n      vnode.dom.removeChild(vnode.children[i].dom);\n    }\n    vnode.children.length = data.length;\n  }\n\n  add(...data: T[]) {\n    if (this.#data) {\n      const oldLength = this.#data.length;\n      if (this.#isFrozen) {\n        this.#setData([...this.#data, ...data]);\n      } else {\n        this.#data.push(...data);\n      }\n\n      if (this.#vnode === null || this.#handler === null) {\n        return;\n      }\n\n      const vnode = this.#vnode;\n      const handler = this.#handler;\n\n      for (let i = 0, ii = oldLength, l = data.length; i < l; i++, ii++) {\n        const child = handler(this.#data[i], ii);\n        child.isSVG = vnode.isSVG || child.tag === \"svg\";\n        child.dom = createElement(child.tag as string, child.isSVG);\n        vnode.dom.appendChild(child.dom);\n        updateAttributes(child as VnodeWithDom, null);\n        vnode.children.push(child);\n        patch(child as VnodeWithDom);\n      }\n    }\n  }\n\n  delete(index: number) {\n    if (this.#data && this.#vnode) {\n      const child = this.#vnode.children[index];\n      if (this.#isFrozen) {\n        this.#setData(this.data.filter((_, i) => i !== index));\n      } else {\n        this.#data.splice(index, 1);\n      }\n\n      this.#vnode.dom.removeChild(child.dom);\n      this.#vnode.children.splice(index, 1);\n    }\n  }\n\n  update(index: number, item: Partial<T>) {\n    if (this.#data && this.#vnode && this.#handler) {\n      const child = this.#vnode.children[index];\n      if (this.#isFrozen) {\n        this.#setData(this.#data.map((d, i) => (i === index ? { ...d, ...item } : d)));\n      } else {\n        this.#data[index] = { ...this.#data[index], ...item };\n      }\n      const newChild = this.#handler(this.#data[index], index);\n      newChild.isSVG = this.#vnode.isSVG || newChild.tag === \"svg\";\n      newChild.dom = child.dom;\n      this.#vnode.children[index] = newChild;\n      updateAttributes(newChild as VnodeWithDom, null);\n      patch(newChild as VnodeWithDom);\n    }\n  }\n}\n\ndirective(\"with-dataset\", (dataSet: DataSet<any>, vnode: VnodeWithDom) => {\n  dataSet.setVnodeAndHandler(vnode, vnode.children[0]);\n  return false;\n});\n"],
  "mappings": "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",
  "names": []
}
