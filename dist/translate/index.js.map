{
  "version": 3,
  "sources": ["../../lib/translate/index.ts"],
  "sourcesContent": ["import { directive, setPropNameReserved, update, VnodeWithDom } from \"valyrian.js\";\nimport { get } from \"valyrian.js/utils\";\n\nconst translations: Record<string, Record<string, any>> = {};\nlet lang = \"en\";\n\nexport function t(path: string, params?: Record<string, string>): string {\n  const langDef = translations[lang];\n  const translation = get(langDef, path);\n\n  if (typeof translation !== \"string\") {\n    // eslint-disable-next-line no-console\n    console.warn(`Translation not found for ${path}`);\n    return path;\n  }\n\n  if (!params) {\n    return translation;\n  }\n\n  return translation.replace(/{(\\w+)}/g, (_, key) => {\n    if (key in params) {\n      return params[key];\n    }\n    return `{${key}}`;\n  });\n}\n\nexport function setTranslations(\n  defaultTranslation: Record<string, any>,\n  newTranslations: Record<string, Record<string, any>> = {}\n) {\n  for (const lang in translations) {\n    Reflect.deleteProperty(translations, lang);\n  }\n\n  translations.en = { ...defaultTranslation };\n\n  for (const lang in newTranslations) {\n    translations[lang] = {\n      ...defaultTranslation,\n      ...newTranslations[lang]\n    };\n  }\n  update();\n}\n\nexport function getTranslations(): Record<string, Record<string, any>> {\n  return translations;\n}\n\nexport function setLang(newLang: string): void {\n  if (typeof newLang !== \"string\") {\n    throw new Error(`Language ${newLang} not found`);\n  }\n\n  const parsedLang = newLang.toLowerCase().split(\"-\").shift()?.split(\"_\").shift();\n\n  if (typeof parsedLang !== \"string\") {\n    throw new Error(`Language ${newLang} not found`);\n  }\n\n  if (!translations[parsedLang]) {\n    throw new Error(`Language ${newLang} not found`);\n  }\n\n  lang = parsedLang;\n  update();\n}\n\nexport function getLang(): string {\n  return lang;\n}\n\nexport class NumberFormatter {\n  #value: number = 0;\n\n  get value(): number {\n    return this.#value;\n  }\n\n  private constructor() {}\n\n  public set(newValue: number | string, shiftDecimal = false) {\n    this.#value = this.clean(newValue, shiftDecimal);\n    return this;\n  }\n\n  private clean(value: string | number, shiftDecimal = false): number {\n    let stringNumber = String(value).replace(/[^0-9.-]+/g, \"\");\n\n    if (shiftDecimal) {\n      stringNumber = stringNumber.replace(/\\./g, \"\");\n    }\n\n    const number = Number(stringNumber);\n\n    return isNaN(number) ? 0 : number;\n  }\n\n  format(digits = 2, options: Intl.NumberFormatOptions = {}, customLocale?: Intl.LocalesArgument): string {\n    const lang = customLocale || getLang();\n    const formatter = new Intl.NumberFormat(lang as string, {\n      style: \"currency\",\n      currency: \"USD\",\n      minimumFractionDigits: digits,\n      maximumFractionDigits: digits,\n      ...options\n    });\n\n    return formatter.format(this.#value);\n  }\n\n  fromDecimalPlaces(decimalPlaces: number) {\n    const currentDecimalPlaces = this.getDecimalPlaces();\n    const factor = Math.pow(10, decimalPlaces - currentDecimalPlaces);\n    this.#value = Number((this.#value / factor).toFixed(decimalPlaces));\n    return this;\n  }\n\n  // Ex toDecimalPlaces(1) = 123.456 -> 12345.6\n  toDecimalPlaces(decimalPlaces: number) {\n    const currentDecimalPlaces = this.getDecimalPlaces();\n    const factor = Math.pow(10, currentDecimalPlaces - decimalPlaces);\n    this.#value = Number((this.#value * factor).toFixed(decimalPlaces));\n    return this;\n  }\n\n  getDecimalPlaces(): number {\n    if (Math.floor(this.#value) === this.#value) {\n      return 0;\n    }\n\n    const stringValue = String(this.#value);\n    const decimalIndex = stringValue.indexOf(\".\");\n    return decimalIndex === -1 ? 0 : stringValue.length - decimalIndex - 1;\n  }\n\n  shiftDecimalPlaces() {\n    return this.toDecimalPlaces(0);\n  }\n\n  static create(value: number | string = 0, shiftDecimal = false): NumberFormatter {\n    const formatter = new NumberFormatter();\n    return formatter.set(value, shiftDecimal);\n  }\n}\n\ndirective(\"t\", (value: string | null, vnode: VnodeWithDom): void => {\n  const keys = typeof value === \"string\" ? [value] : vnode.children;\n  const params = vnode.props[\"v-t-params\"] || {};\n  const children = keys.map((key) => (typeof key === \"string\" && key.trim().length > 1 ? t(key.trim(), params) : key));\n  vnode.children = children;\n});\n\nsetPropNameReserved(\"v-t-params\");\n"],
  "mappings": "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",
  "names": ["lang"]
}
