//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"names":["index_exports","__export","NumberFormatter","getLang","getTranslations","setLang","setTranslations","t","__EXPORTS__","import_valyrian","require","import_utils","translations","lang","path","params","langDef","translation","get","console","warn","replace","_","key","defaultTranslation","newTranslations","Reflect","deleteProperty","en","update","newLang","Error","parsedLang","toLowerCase","split","shift","_NumberFormatter","value","this","constructor","set","newValue","shiftDecimal","clean","stringNumber","String","number","Number","isNaN","format","digits","options","customLocale","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","fromDecimalPlaces","decimalPlaces","currentDecimalPlaces","getDecimalPlaces","factor","Math","pow","toFixed","toDecimalPlaces","floor","stringValue","decimalIndex","indexOf","length","shiftDecimalPlaces","create","directive","vnode","keys","children","props","map","trim","setPropNameReserved"],"sources":["../../lib/translate/index.ts"],"sourcesContent":["import { directive, setPropNameReserved, update, VnodeWithDom } from \"valyrian.js\";\nimport { get } from \"valyrian.js/utils\";\n\nconst translations: Record<string, Record<string, any>> = {};\nlet lang = \"en\";\n\nexport function t(path: string, params?: Record<string, string>): string {\n  const langDef = translations[lang];\n  const translation = get(langDef, path);\n\n  if (typeof translation !== \"string\") {\n    // eslint-disable-next-line no-console\n    console.warn(`Translation not found for ${path}`);\n    return path;\n  }\n\n  if (!params) {\n    return translation;\n  }\n\n  return translation.replace(/{(\\w+)}/g, (_, key) => {\n    if (key in params) {\n      return params[key];\n    }\n    return `{${key}}`;\n  });\n}\n\nexport function setTranslations(\n  defaultTranslation: Record<string, any>,\n  newTranslations: Record<string, Record<string, any>> = {}\n) {\n  for (const lang in translations) {\n    Reflect.deleteProperty(translations, lang);\n  }\n\n  translations.en = { ...defaultTranslation };\n\n  for (const lang in newTranslations) {\n    translations[lang] = {\n      ...defaultTranslation,\n      ...newTranslations[lang]\n    };\n  }\n  update();\n}\n\nexport function getTranslations(): Record<string, Record<string, any>> {\n  return translations;\n}\n\nexport function setLang(newLang: string): void {\n  if (typeof newLang !== \"string\") {\n    throw new Error(`Language ${newLang} not found`);\n  }\n\n  const parsedLang = newLang.toLowerCase().split(\"-\").shift()?.split(\"_\").shift();\n\n  if (typeof parsedLang !== \"string\") {\n    throw new Error(`Language ${newLang} not found`);\n  }\n\n  if (!translations[parsedLang]) {\n    throw new Error(`Language ${newLang} not found`);\n  }\n\n  lang = parsedLang;\n  update();\n}\n\nexport function getLang(): string {\n  return lang;\n}\n\nexport class NumberFormatter {\n  #value: number = 0;\n\n  get value(): number {\n    return this.#value;\n  }\n\n  private constructor() {}\n\n  public set(newValue: number | string, shiftDecimal = false) {\n    this.#value = this.clean(newValue, shiftDecimal);\n    return this;\n  }\n\n  private clean(value: string | number, shiftDecimal = false): number {\n    let stringNumber = String(value).replace(/[^0-9.-]+/g, \"\");\n\n    if (shiftDecimal) {\n      stringNumber = stringNumber.replace(/\\./g, \"\");\n    }\n\n    const number = Number(stringNumber);\n\n    return isNaN(number) ? 0 : number;\n  }\n\n  format(digits = 2, options: Intl.NumberFormatOptions = {}, customLocale?: Intl.LocalesArgument): string {\n    const lang = customLocale || getLang();\n    const formatter = new Intl.NumberFormat(lang as string, {\n      style: \"currency\",\n      currency: \"USD\",\n      minimumFractionDigits: digits,\n      maximumFractionDigits: digits,\n      ...options\n    });\n\n    return formatter.format(this.#value);\n  }\n\n  fromDecimalPlaces(decimalPlaces: number) {\n    const currentDecimalPlaces = this.getDecimalPlaces();\n    const factor = Math.pow(10, decimalPlaces - currentDecimalPlaces);\n    this.#value = Number((this.#value / factor).toFixed(decimalPlaces));\n    return this;\n  }\n\n  // Ex toDecimalPlaces(1) = 123.456 -> 12345.6\n  toDecimalPlaces(decimalPlaces: number) {\n    const currentDecimalPlaces = this.getDecimalPlaces();\n    const factor = Math.pow(10, currentDecimalPlaces - decimalPlaces);\n    this.#value = Number((this.#value * factor).toFixed(decimalPlaces));\n    return this;\n  }\n\n  getDecimalPlaces(): number {\n    if (Math.floor(this.#value) === this.#value) {\n      return 0;\n    }\n\n    const stringValue = String(this.#value);\n    const decimalIndex = stringValue.indexOf(\".\");\n    return decimalIndex === -1 ? 0 : stringValue.length - decimalIndex - 1;\n  }\n\n  shiftDecimalPlaces() {\n    return this.toDecimalPlaces(0);\n  }\n\n  static create(value: number | string = 0, shiftDecimal = false): NumberFormatter {\n    const formatter = new NumberFormatter();\n    return formatter.set(value, shiftDecimal);\n  }\n}\n\ndirective(\"t\", (value: string | null, vnode: VnodeWithDom): void => {\n  const keys = typeof value === \"string\" ? [value] : vnode.children;\n  const params = vnode.props[\"v-t-params\"] || {};\n  const children = keys.map((key) => (typeof key === \"string\" && key.trim().length > 1 ? t(key.trim(), params) : key));\n  vnode.children = children;\n});\n\nsetPropNameReserved(\"v-t-params\");\n"],"mappings":"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"}