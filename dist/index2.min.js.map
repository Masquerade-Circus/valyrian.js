//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"names":["NodeValueString","TextTagString","isNodeJs","Boolean","process","versions","node","elementsToClone","svg","notSvg","createDomElement","tag","isSVG","document","createElementNS","cloneNode","createElement","Vnode","props","children","this","domToVnode","dom","nodeType","vnode","nodeValue","i","childNodes","length","child","push","forEach","call","attributes","prop","nodeName","tagName","toLowerCase","trust","htmlString","div","innerHTML","trim","map","item","v","tagOrComponent","view","fragment","isVnode","object","isComponent","component","isValyrianComponent","reservedProps","key","state","oncreate","onupdate","onremove","shouldupdate","eventListenerNames","eventListener","e","target","name","type","defaultPrevented","update","parentNode","onCleanupList","onMountList","onUpdateList","onUnmountList","callCallbackList","list","sharedSetAttribute","oldVnode","directives","value","container","addEventListener","slice","removeAttribute","setAttribute","setAttributes","callRemove","l","patch","newVnode","current","newTree","oldTree","childVnode","splice","Array","isArray","oldTreeLength","newTreeLength","oldKeyedList","newKeyedList","oldChildVnode","shouldPatch","isMounted","replaceChild","appendChild","removeChild","newChild","oldChild","createTextNode","textContent","mainVnode","plugins","Map","hideDirective","test","bool","newdom","set","style","display","classes","classList","toggle","html","model","property","event","handler","val","idx","indexOf","multiple","ctrlKey","value2","join","selected","directive","directive2","fullName","mount","normalComponent","unmount","querySelectorAll","bind","use","plugin","options","has","get","result","onCleanup","callback","onUnmount","onMount","onUpdate"],"sources":["../lib/index2.ts"],"sourcesContent":["/* eslint-disable sonarjs/cognitive-complexity */\n/* eslint-disable complexity */\n\nimport {\n  Children,\n  Component,\n  Current,\n  Directive,\n  Directives,\n  DomElement,\n  Plugin,\n  Props,\n  Valyrian,\n  ValyrianComponent,\n  Vnode,\n  VnodeWithDom\n} from \"./interfaces2\";\n\nconst NodeValueString = \"nodeValue\";\nconst TextTagString = \"#text\";\n\nconst isNodeJs = Boolean(typeof process !== \"undefined\" && process.versions && process.versions.node);\n\nconst elementsToClone: {\n  svg: Record<string, DomElement>;\n  notSvg: Record<string, DomElement>;\n} = {\n  svg: {},\n  notSvg: {}\n};\n\nfunction createDomElement(tag: string, isSVG: boolean = false): DomElement {\n  // return (isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag) : document.createElement(tag)) as DomElement;\n\n  if (isSVG) {\n    if (!elementsToClone.svg[tag]) {\n      elementsToClone.svg[tag] = document.createElementNS(\"http://www.w3.org/2000/svg\", tag) as any;\n    }\n\n    return elementsToClone.svg[tag].cloneNode(false) as any;\n  }\n\n  if (!elementsToClone.notSvg[tag]) {\n    elementsToClone.notSvg[tag] = document.createElement(tag) as any;\n  }\n\n  return elementsToClone.notSvg[tag].cloneNode(false) as any;\n}\n\nconst Vnode = function Vnode(this: Vnode, tag: string, props: Props, children: Children) {\n  this.props = props;\n  this.children = children;\n  this.tag = tag;\n} as unknown as Vnode;\n\nfunction domToVnode(dom: any): void | VnodeWithDom {\n  if (dom.nodeType === 3) {\n    let vnode = new Vnode(TextTagString, {}, []);\n    vnode.dom = dom;\n    vnode.nodeValue = dom.nodeValue;\n    return vnode as VnodeWithDom;\n  }\n\n  if (dom.nodeType === 1) {\n    let children = [];\n    for (let i = 0; i < dom.childNodes.length; i++) {\n      let child = domToVnode(dom.childNodes[i]);\n      if (child) {\n        children.push(child);\n      }\n    }\n\n    let props: Props = {};\n    [].forEach.call(dom.attributes, (prop: Attr) => (props[prop.nodeName] = prop.nodeValue));\n\n    let vnode = new Vnode(dom.tagName.toLowerCase(), props, children);\n    vnode.dom = dom;\n    return vnode as VnodeWithDom;\n  }\n}\n\nconst trust = (htmlString: string): Children => {\n  let div = createDomElement(\"div\");\n  div.innerHTML = htmlString.trim();\n\n  return [].map.call(div.childNodes, (item) => domToVnode(item)) as Vnode[];\n};\n\nconst v: Valyrian = function (tagOrComponent: string | Component, props: Record<string, any> | null, ...children: any[]): Vnode | ValyrianComponent {\n  if (typeof tagOrComponent === \"string\") {\n    return new Vnode(tagOrComponent, props || {}, children);\n  }\n  let vnode = new Vnode(\"#component\", props || {}, children);\n  vnode.view = tagOrComponent;\n  return vnode;\n};\n\nv.fragment = function (props: Props, ...children: any[]) {\n  return children;\n};\n\nv.isVnode = function isVnode(object?: unknown | Vnode): object is Vnode {\n  return Boolean(object && typeof object === \"object\" && \"tag\" in object);\n};\n\nv.isComponent = function isComponent(component?: unknown | ValyrianComponent): component is ValyrianComponent {\n  return Boolean((component && typeof component === \"function\") || v.isValyrianComponent(component));\n};\n\nv.isValyrianComponent = function isValyrianComponent(component?: unknown | ValyrianComponent): component is ValyrianComponent {\n  return Boolean(component && typeof component === \"object\" && \"view\" in component);\n};\n\nconst reservedProps: Record<string, true> = {\n  key: true,\n  state: true,\n  oncreate: true,\n  onupdate: true,\n  onremove: true,\n  shouldupdate: true,\n  \"v-once\": true,\n\n  // Built in directives\n  \"v-if\": true,\n  \"v-unless\": true,\n  \"v-for\": true,\n  \"v-show\": true,\n  \"v-class\": true,\n  \"v-html\": true,\n  \"v-model\": true\n};\n\nconst eventListenerNames: Record<string, any> = {};\nfunction eventListener(e: Event) {\n  let dom = e.target as any;\n  let name = `v-on${e.type}`;\n  while (dom) {\n    if (dom[name]) {\n      dom[name](e, dom);\n      if (!e.defaultPrevented) {\n        v.update();\n      }\n      return;\n    }\n    dom = dom.parentNode;\n  }\n}\n\nlet onCleanupList: Function[] = [];\nlet onMountList: Function[] = [];\nlet onUpdateList: Function[] = [];\nlet onUnmountList: Function[] = [];\n\nfunction onCleanup(callback: Function): void {\n  if (onCleanupList.indexOf(callback) === -1) {\n    onCleanupList.push(callback);\n  }\n}\nfunction onUnmount(callback: Function): void {\n  if (onUnmountList.indexOf(callback) === -1) {\n    onUnmountList.push(callback);\n  }\n}\nfunction onMount(callback: Function): void {\n  if (onMountList.indexOf(callback) === -1) {\n    onMountList.push(callback);\n  }\n}\nfunction onUpdate(callback: Function): void {\n  if (onUpdateList.indexOf(callback) === -1) {\n    onUpdateList.push(callback);\n  }\n}\n\nfunction callCallbackList(list: Function[]): void {\n  for (let i = 0; i < list.length; i++) {\n    list[i]();\n  }\n  list.length = 0;\n}\n\nconst current: Current = {};\n\nfunction sharedSetAttribute(prop: string, vnode: VnodeWithDom, oldVnode?: VnodeWithDom): void | boolean {\n  // It is a reserved prop\n  if (reservedProps[prop]) {\n    // If it is a directive name call the directive\n    if (directives[prop]) {\n      return directives[prop](vnode.props[prop], vnode, oldVnode);\n    }\n\n    return;\n  }\n\n  let value = vnode.props[prop];\n\n  // It is not a reserved prop so we add it to the dom\n  if (typeof value === \"function\") {\n    if (prop in eventListenerNames === false) {\n      eventListenerNames[prop] = true;\n      (v.container as DomElement).addEventListener(prop.slice(2), eventListener);\n    }\n    vnode.dom[`v-${prop}`] = value;\n    return;\n  }\n\n  if (prop in vnode.dom && vnode.isSVG === false) {\n    // eslint-disable-next-line eqeqeq\n    if (vnode.dom[prop] != value) {\n      vnode.dom[prop] = value;\n    }\n    return;\n  }\n\n  // Use set attribute\n  if (!oldVnode || oldVnode.props[prop] !== value) {\n    if (value === false) {\n      vnode.dom.removeAttribute(prop);\n    } else {\n      vnode.dom.setAttribute(prop, value);\n    }\n  }\n}\n\nfunction setAttribute(name: string, value: any, vnode: VnodeWithDom, oldVnode?: VnodeWithDom): void {\n  vnode.props[name] = value;\n  sharedSetAttribute(name, vnode, oldVnode);\n}\n\nfunction setAttributes(vnode: VnodeWithDom, oldVnode?: VnodeWithDom) {\n  for (let prop in vnode.props) {\n    if (sharedSetAttribute(prop, vnode, oldVnode) === false) {\n      break;\n    }\n  }\n\n  if (oldVnode) {\n    for (let prop in oldVnode.props) {\n      if (prop in vnode.props === false && prop in reservedProps === false && typeof oldVnode.props[prop] !== \"function\") {\n        if (prop in vnode.dom && vnode.isSVG === false) {\n          vnode.dom[prop] = null;\n        } else {\n          vnode.dom.removeAttribute(prop);\n        }\n      }\n    }\n  }\n}\n\nfunction callRemove(vnode: VnodeWithDom) {\n  for (let i = 0, l = vnode.children.length; i < l; i++) {\n    NodeValueString in vnode.children[i] === false && callRemove(vnode.children[i]);\n  }\n  vnode.props.onremove && vnode.props.onremove(vnode);\n}\n\nfunction patch(newVnode: VnodeWithDom, oldVnode?: VnodeWithDom) {\n  v.current.vnode = newVnode;\n  v.current.oldVnode = oldVnode;\n  let newTree = newVnode.children;\n  let oldTree = oldVnode?.children || [];\n\n  for (let i = 0; i < newTree.length; i++) {\n    let childVnode = newTree[i];\n\n    if (childVnode instanceof Vnode) {\n      if (\"view\" in childVnode) {\n        v.current.component = childVnode.view;\n        newTree.splice(i--, 1, childVnode.view(childVnode.props, ...childVnode.children));\n        continue;\n      }\n\n      childVnode.isSVG = newVnode.isSVG || childVnode.tag === \"svg\";\n      continue;\n    }\n\n    if (Array.isArray(childVnode)) {\n      newTree.splice(i--, 1, ...childVnode);\n      continue;\n    }\n\n    if (childVnode === null || childVnode === undefined) {\n      newTree.splice(i--, 1);\n      continue;\n    }\n\n    newTree[i] = new Vnode(TextTagString, {}, []);\n    newTree[i].nodeValue = childVnode;\n  }\n\n  let oldTreeLength = oldTree.length;\n  let newTreeLength = newTree.length;\n\n  // If new tree is empty, remove all old nodes\n  if (newTreeLength === 0) {\n    for (let i = oldTreeLength - 1; i >= 0; i--) {\n      let oldChild = oldTree[i];\n\n      NodeValueString in oldChild === false && callRemove(oldChild);\n\n      newVnode.dom.textContent = \"\";\n    }\n    return;\n  }\n\n  // If the tree is keyed list and is not first render and old tree is keyed list too\n  if (oldTreeLength && \"key\" in newTree[0].props && \"key\" in oldTree[0].props) {\n    let oldKeyedList: { [key: string]: number } = {};\n    for (let i = 0; i < oldTreeLength; i++) {\n      oldKeyedList[oldTree[i].props.key] = i;\n    }\n\n    let newKeyedList: { [key: string]: number } = {};\n    for (let i = 0; i < newTreeLength; i++) {\n      newKeyedList[newTree[i].props.key] = i;\n    }\n\n    for (let i = 0; i < newTreeLength; i++) {\n      let childVnode = newTree[i];\n      let oldChildVnode = oldTree[oldKeyedList[childVnode.props.key]];\n      let shouldPatch = true;\n\n      if (oldChildVnode) {\n        childVnode.dom = oldChildVnode.dom;\n        if (\"v-once\" in childVnode.props || (childVnode.props.shouldupdate && childVnode.props.shouldupdate(childVnode, oldChildVnode) === false)) {\n          // skip this patch\n          childVnode.children = oldChildVnode.children;\n          shouldPatch = false;\n        } else {\n          setAttributes(childVnode, oldChildVnode);\n          if (v.isMounted) {\n            childVnode.props.onupdate && childVnode.props.onupdate(childVnode, oldChildVnode);\n          } else {\n            childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n          }\n        }\n      } else {\n        childVnode.dom = createDomElement(childVnode.tag, childVnode.isSVG);\n        setAttributes(childVnode);\n        childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n      }\n\n      if (!newVnode.dom.childNodes[i]) {\n        newVnode.dom.appendChild(childVnode.dom);\n      } else if (newVnode.dom.childNodes[i] !== childVnode.dom) {\n        oldTree[i] && !newKeyedList[oldTree[i].props.key] && callRemove(oldTree[i]);\n        newVnode.dom.replaceChild(childVnode.dom, newVnode.dom.childNodes[i]);\n      }\n\n      shouldPatch && patch(childVnode, oldChildVnode);\n    }\n\n    // For the rest of the children, we should remove them\n    for (let i = newTreeLength; i < oldTreeLength; i++) {\n      if (!newKeyedList[oldTree[i].props.key]) {\n        let oldChildVnode = oldTree[i];\n        callRemove(oldChildVnode);\n        oldChildVnode.dom.parentNode && oldChildVnode.dom.parentNode.removeChild(oldChildVnode.dom);\n      }\n    }\n\n    return;\n  }\n\n  // If new tree and old tree have more than one child, we should update the dom\n  for (let i = 0; i < newTreeLength; i++) {\n    let newChild = newTree[i];\n    let oldChild = oldTree[i];\n\n    if (!oldChild) {\n      if (NodeValueString in newChild) {\n        newChild.dom = document.createTextNode(newChild.nodeValue);\n      } else {\n        newChild.dom = createDomElement(newChild.tag, newChild.isSVG);\n        setAttributes(newChild);\n        newChild.props.oncreate && newChild.props.oncreate(newChild);\n        patch(newChild);\n      }\n\n      newVnode.dom.appendChild(newChild.dom);\n      continue;\n    }\n\n    if (NodeValueString in newChild) {\n      if (NodeValueString in oldChild) {\n        newChild.dom = oldChild.dom;\n        // eslint-disable-next-line eqeqeq\n        if (newChild.dom.nodeValue != newChild.nodeValue) {\n          newChild.dom.nodeValue = newChild.nodeValue;\n        }\n        continue;\n      }\n\n      newChild.dom = document.createTextNode(newChild.nodeValue);\n      NodeValueString in oldChild === false && callRemove(oldChild);\n      newVnode.dom.replaceChild(newChild.dom, oldChild.dom);\n      continue;\n    }\n\n    if (oldChild.tag !== newChild.tag) {\n      newChild.dom = createDomElement(newChild.tag);\n      NodeValueString in oldChild === false && callRemove(oldChild);\n      setAttributes(newChild);\n      newVnode.dom.replaceChild(newChild.dom, oldChild.dom);\n      newChild.props.oncreate && newChild.props.oncreate(newChild);\n      patch(newChild, oldChild);\n      continue;\n    }\n\n    newChild.dom = oldChild.dom;\n    if (\"v-once\" in newChild.props || (\"shouldupdate\" in newChild.props && newChild.props.shouldupdate(oldChild, newChild) === false)) {\n      newChild.children = oldChild.children;\n      continue;\n    }\n\n    setAttributes(newChild, oldChild);\n    if (v.isMounted) {\n      newChild.props.onupdate && newChild.props.onupdate(newChild, oldChild);\n    } else {\n      newChild.props.oncreate && newChild.props.oncreate(newChild);\n    }\n\n    patch(newChild, oldChild);\n  }\n\n  // For the rest of the children, we should remove them\n  for (let i = newTreeLength; i < oldTreeLength; i++) {\n    let oldChild = oldTree[i];\n\n    NodeValueString in oldChild === false && callRemove(oldChild);\n\n    oldChild.dom.parentNode && oldChild.dom.parentNode.removeChild(oldChild.dom);\n  }\n}\n\nfunction update() {\n  if (v.component && v.mainVnode) {\n    onCleanupList.length && callCallbackList(onCleanupList);\n    let oldVnode: null | VnodeWithDom = v.mainVnode;\n    v.mainVnode = new Vnode(oldVnode.tag, oldVnode.props, [v.component]) as VnodeWithDom;\n    v.mainVnode.dom = oldVnode.dom;\n\n    patch(v.mainVnode, oldVnode);\n    oldVnode = null;\n    if (v.isMounted === false) {\n      onMountList.length && callCallbackList(onMountList);\n      v.isMounted = true;\n    } else {\n      onUpdateList.length && callCallbackList(onUpdateList);\n    }\n\n    if (isNodeJs) {\n      return v.mainVnode.dom.innerHTML;\n    }\n  }\n}\n\nfunction unmount() {\n  if (v.component && v.mainVnode) {\n    onCleanupList.length && callCallbackList(onCleanupList);\n    onUnmountList.length && callCallbackList(onUnmountList);\n    let oldVnode = v.mainVnode;\n    v.mainVnode = new Vnode(oldVnode.tag, oldVnode.props, []) as VnodeWithDom;\n    v.mainVnode.dom = oldVnode.dom;\n\n    patch(v.mainVnode, oldVnode);\n\n    let container = v.mainVnode.dom;\n    v.container = null;\n    v.component = null;\n    v.isMounted = false;\n    v.mainVnode = undefined;\n    if (isNodeJs) {\n      return container.innerHTML;\n    }\n  }\n}\n\nfunction mount(container: string | Element, normalComponent: Component | ValyrianComponent) {\n  if (v.isMounted) {\n    v.unmount();\n  }\n\n  if (isNodeJs) {\n    v.container = typeof container === \"string\" ? createDomElement(container === \"svg\" ? \"svg\" : \"div\", container === \"svg\") : container;\n  } else {\n    v.container = typeof container === \"string\" ? document.querySelectorAll(container)[0] : container;\n  }\n\n  if (normalComponent && typeof normalComponent === \"object\" && normalComponent.view) {\n    v.component = v(\n      normalComponent.view.bind(normalComponent),\n      normalComponent.props || {},\n      ...(\"children\" in normalComponent ? (Array.isArray(normalComponent.children) ? normalComponent.children : [normalComponent.children]) : [])\n    ) as ValyrianComponent;\n  } else {\n    v.component = v(\n      normalComponent.bind(normalComponent),\n      normalComponent.props || {},\n      \"children\" in normalComponent ? (Array.isArray(normalComponent.children) ? normalComponent.children : [normalComponent.children]) : []\n    ) as ValyrianComponent;\n  }\n\n  v.mainVnode = domToVnode(v.container) as VnodeWithDom;\n  v.mainVnode.isSVG = v.mainVnode.tag === \"svg\";\n\n  return update();\n}\n\nconst plugins = new Map<Plugin, any>();\n\nfunction use(plugin: Plugin, options?: Record<string | number | symbol, any>): void | any {\n  if (plugins.has(plugin)) {\n    return plugins.get(plugin);\n  }\n\n  let result = plugin(v, options);\n  plugins.set(plugin, result);\n  return result;\n}\n\nfunction directive(name: string, directive: Directive) {\n  let fullName = `v-${name}`;\n  directives[fullName] = directive;\n  reservedProps[fullName] = true;\n}\n\nfunction hideDirective(test: boolean): Directive {\n  return (bool: boolean, vnode: VnodeWithDom, oldVnode?: VnodeWithDom) => {\n    let value = test ? bool : !bool;\n    if (value) {\n      let newdom = document.createTextNode(\"\");\n      if (oldVnode && oldVnode.dom && oldVnode.dom.parentNode) {\n        NodeValueString in oldVnode === false && callRemove(oldVnode);\n        oldVnode.dom.parentNode.replaceChild(newdom, oldVnode.dom);\n      }\n      vnode.tag = TextTagString;\n      vnode.children = [];\n      vnode.props = {};\n      vnode.dom = newdom as unknown as DomElement;\n\n      return false;\n    }\n  };\n}\n\nconst directives: Directives = {\n  \"v-if\": hideDirective(false),\n  \"v-unless\": hideDirective(true),\n  \"v-for\": (set: unknown[], vnode: VnodeWithDom) => {\n    vnode.children = set.map(vnode.children[0]);\n  },\n  \"v-show\": (bool: boolean, vnode: VnodeWithDom) => {\n    (vnode.dom as unknown as { style: { display: string } }).style.display = bool ? \"\" : \"none\";\n  },\n  \"v-class\": (classes: { [x: string]: boolean }, vnode: VnodeWithDom) => {\n    for (let name in classes) {\n      (vnode.dom as DomElement).classList.toggle(name, classes[name]);\n    }\n  },\n  \"v-html\": (html: string, vnode: VnodeWithDom) => {\n    vnode.children = [trust(html)];\n  },\n  \"v-model\": ([model, property, event]: any[], vnode: VnodeWithDom, oldVnode?: VnodeWithDom) => {\n    let value;\n    let handler;\n    if (vnode.tag === \"input\") {\n      event = event || \"oninput\";\n      switch (vnode.props.type) {\n        case \"checkbox\": {\n          if (Array.isArray(model[property])) {\n            handler = (e: Event) => {\n              let val = (e.target as DomElement & Record<string, any>).value;\n              let idx = model[property].indexOf(val);\n              if (idx === -1) {\n                model[property].push(val);\n              } else {\n                model[property].splice(idx, 1);\n              }\n            };\n            value = model[property].indexOf(vnode.dom.value) !== -1;\n          } else if (\"value\" in vnode.props) {\n            handler = () => {\n              if (model[property] === vnode.props.value) {\n                model[property] = null;\n              } else {\n                model[property] = vnode.props.value;\n              }\n            };\n            value = model[property] === vnode.props.value;\n          } else {\n            handler = () => (model[property] = !model[property]);\n            value = model[property];\n          }\n          setAttribute(\"checked\", value, vnode, oldVnode);\n          break;\n        }\n        case \"radio\": {\n          setAttribute(\"checked\", model[property] === vnode.dom.value, vnode, oldVnode);\n          break;\n        }\n        default: {\n          setAttribute(\"value\", model[property], vnode, oldVnode);\n        }\n      }\n    } else if (vnode.tag === \"select\") {\n      event = event || \"onclick\";\n      if (vnode.props.multiple) {\n        handler = (e: Event & Record<string, any>) => {\n          let val = (e.target as DomElement & Record<string, any>).value;\n          if (e.ctrlKey) {\n            let idx = model[property].indexOf(val);\n            if (idx === -1) {\n              model[property].push(val);\n            } else {\n              model[property].splice(idx, 1);\n            }\n          } else {\n            model[property].splice(0, model[property].length);\n            model[property].push(val);\n          }\n        };\n        vnode.children.forEach((child: Vnode) => {\n          if (child.tag === \"option\") {\n            let value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = model[property].indexOf(value) !== -1;\n          }\n        });\n      } else {\n        vnode.children.forEach((child: Vnode) => {\n          if (child.tag === \"option\") {\n            let value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = value === model[property];\n          }\n        });\n      }\n    } else if (vnode.tag === \"textarea\") {\n      event = event || \"oninput\";\n      vnode.children = [model[property]];\n    }\n\n    if (!vnode.props[event]) {\n      if (!handler) {\n        handler = (e: Event) => (model[property] = (e.target as DomElement & Record<string, any>).value);\n      }\n      setAttribute(event, handler, vnode, oldVnode);\n    }\n  }\n};\n\nv.isNodeJs = isNodeJs;\nv.isMounted = false;\nv.directives = directives;\nv.directive = directive;\nv.reservedProps = reservedProps;\nv.mount = mount;\nv.unmount = unmount;\nv.update = update;\nv.use = use;\nv.trust = trust;\nv.setAttribute = setAttribute;\nv.current = current;\nv.onCleanup = onCleanup;\nv.onUnmount = onUnmount;\nv.onMount = onMount;\nv.onUpdate = onUpdate;\n\nexport default v;\n"],"mappings":"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"}