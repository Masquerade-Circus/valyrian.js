(()=>{"use strict";var e=Object.defineProperty,t=Object.getOwnPropertyDescriptor,n=Object.getOwnPropertyNames,r=Object.prototype.hasOwnProperty,o={};((t,n)=>{for(var r in n)e(t,r,{get:n[r],enumerable:!0})})(o,{createEffect:()=>p,createMutableStore:()=>h,createPulse:()=>y,createPulseStore:()=>d});var s,l=(s=o,((o,s,l,a)=>{if(s&&"object"==typeof s||"function"==typeof s)for(let c of n(s))r.call(o,c)||c===l||e(o,c,{get:()=>s[c],enumerable:!(a=t(s,c))||a.enumerable});return o})(e({},"__esModule",{value:!0}),s)),a=require("valyrian.js"),c=require("valyrian.js/utils"),u=[];function i(e,t){const n=a.current.vnode;if(!n||t.has(n.dom))return;let r=!1,o=n.dom.parentElement;for(;o;){if(t.has(o)){r=!0;break}o=o.parentElement}if(!r){const r=n.dom,o=()=>{(0,a.updateVnode)(r.vnode),r.parentElement||(e.delete(o),t.delete(r))};e.add(o),t.add(r)}}function f(e,t,n=!1){const r=new Set,o=new WeakSet,s={};for(const e in t){if("function"!=typeof t[e])throw new Error(`Pulse '${e}' must be a function`);if("state"===e)throw new Error("A pulse cannot be named 'state'");s[e]=m(e)}const l=("function"==typeof e?e():e)||{};function a(){if(n)throw new Error("You need to call a pulse to modify the state")}let f=null,d=0;const h=new Proxy(l,{get:(e,t)=>{if(f)return f[t];const n=u[u.length-1];return n&&!r.has(n)&&r.add(n),i(r,o),e[t]},set:(e,t,n)=>(a(),Reflect.set(e,t,n),!0),deleteProperty:(e,t)=>(a(),Reflect.deleteProperty(e,t),!0)});function p(e){for(const t in e)l[t]=n?(0,c.deepFreeze)(e[t]):e[t];for(const t in l)t in e||Reflect.deleteProperty(l,t)}let y=null;function w(e,t=!1){d--,(0,c.hasChanged)(l,e)&&(d>0&&!t||(p(e),f=null,y&&clearTimeout(y),y=setTimeout(()=>r.forEach(e=>e()),0)))}function m(e){return function(...n){d++,null===f&&(f=(0,c.deepCloneUnfreeze)(l)),Reflect.set(this,"$flush",async()=>{w(f,!0),f=(0,c.deepCloneUnfreeze)(l),await new Promise(e=>setTimeout(e,0))});const r=async()=>{};try{const o=t[e].apply(this,[f,...n]);return o instanceof Promise?o.then(e=>(w(f),Reflect.set(this,"$flush",r),e)).catch(t=>{throw console.error(`Error in pulse '${e}':`,t),Reflect.set(this,"$flush",r),t}):(w(f),Reflect.set(this,"$flush",r),o)}catch(t){throw console.error(`Error in pulse '${e}':`,t),Reflect.set(this,"$flush",r),t}}}p(l);const b=new Proxy(s,{get:(e,t)=>{if("state"===t)return h;if(!(t in e))throw new Error(`Pulse '${t}' does not exist`);const n=e[t];return"function"==typeof n?n.bind(b):n}});return b}function d(e,t){return f(e,t,!0)}function h(e,t){return console.warn("Warning: You are working with a mutable state. This can lead to unpredictable behavior. All state changes made outside of a pulse will not trigger a re-render."),f(e,t,!1)}function p(e){const t=()=>{try{u.push(t),e()}finally{u.pop()}};t()}function y(e){let t=e;const n=new Set,r=new WeakSet,o=()=>{n.forEach(e=>e())};return[()=>{const e=u[u.length-1];return e&&!n.has(e)&&n.add(e),i(n,r),t},e=>{const n="function"==typeof e?e(t):e;(0,c.hasChanged)(t,n)&&(t=n,o())},o]}"undefined"!=typeof module?module.exports=l:self.ValyrianPulses=l})();//# sourceMappingURL=index.min.js.map