//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"names":["pulse_store_exports","__export","createEffect","createMutableStore","createPulseStore","__EXPORTS__","import_valyrian","require","import_utils","effectStack","createStore","initialState","pulses","immutable","subscribers","Set","domWithVnodesToUpdate","WeakSet","boundPulses","key","Error","getPulseMethod","localState","isMutable","proxyState","Proxy","get","state","prop","currentEffect","length","has","add","currentVnode","current","vnode","dom","subscription","parentNode","delete","updateVnode","set","value","Reflect","deleteProperty","syncState","newState","deepFreeze","debounceTimeout","setState","hasChanged","clearTimeout","setTimeout","forEach","subscriber","args","currentState","deepCloneUnfreeze","pulse","Promise","then","catch","error","console","warn","effect","dependencies","runEffect","push","pop"],"sources":["../../lib/pulse-store/index.ts"],"sourcesContent":["/* eslint-disable no-console */\nimport { updateVnode, VnodeWithDom, current, DomElement } from \"valyrian.js\";\nimport { deepCloneUnfreeze, deepFreeze, hasChanged } from \"valyrian.js/utils\";\n\ntype State = Record<string, any>;\n\n// Tipo de acción o pulso\nexport type Pulse<StateType> = (state: StateType, ...args: any[]) => void | Promise<void>;\n\n// Colección de pulsos\nexport type Pulses<StateType> = {\n  [key: string]: Pulse<StateType>;\n};\n\n// Estado proxy que observará el acceso y las mutaciones del estado\ntype ProxyState<StateType> = StateType & {\n  [key: string]: any;\n};\n\n// Pila de efectos\nconst effectStack: Function[] = [];\n\ntype StorePulses<PulsesType> = {\n  [K in keyof PulsesType]: PulsesType[K] extends (state: any, ...args: infer Args) => infer R\n    ? (...args: Args) => R\n    : never;\n};\n\n// Crea la tienda\nfunction createStore<StateType extends State, PulsesType extends Pulses<StateType>>(\n  initialState: StateType | (() => StateType) | null,\n  pulses: PulsesType,\n  immutable = false\n): StorePulses<PulsesType> & { state: ProxyState<StateType> } {\n  const subscribers = new Set<Function>();\n  const domWithVnodesToUpdate = new WeakSet<DomElement>();\n\n  const boundPulses: Record<string, Pulse<StateType>> = {};\n  for (const key in pulses) {\n    if (typeof pulses[key] !== \"function\") {\n      throw new Error(`Pulse '${key}' must be a function`);\n    }\n    if (key === \"state\") {\n      throw new Error(`A pulse cannot be named 'state'`);\n    }\n    boundPulses[key] = getPulseMethod(key);\n  }\n\n  const localState: StateType =\n    (typeof initialState === \"function\" ? initialState() : initialState) || ({} as StateType);\n\n  function isMutable() {\n    if (immutable) {\n      throw new Error(\"You need to call a pulse to modify the state\");\n    }\n  }\n\n  const proxyState = new Proxy(localState, {\n    get: (state, prop: string) => {\n      const currentEffect = effectStack[effectStack.length - 1];\n      if (currentEffect && !subscribers.has(currentEffect)) {\n        subscribers.add(currentEffect);\n      }\n\n      const currentVnode = current.vnode as VnodeWithDom;\n      if (currentVnode && !domWithVnodesToUpdate.has(currentVnode.dom)) {\n        const dom = currentVnode.dom;\n        const subscription = () => {\n          if (!dom.parentNode) {\n            subscribers.delete(subscription);\n            domWithVnodesToUpdate.delete(dom);\n            return;\n          }\n          updateVnode(dom.vnode);\n        };\n\n        subscribers.add(subscription);\n        domWithVnodesToUpdate.add(dom);\n      }\n\n      return state[prop];\n    },\n    set: (state, prop: string, value: any) => {\n      isMutable();\n      Reflect.set(state, prop, value);\n      return true;\n    },\n    deleteProperty: (state, prop: string) => {\n      isMutable();\n      Reflect.deleteProperty(state, prop);\n      return true;\n    }\n  });\n\n  function syncState(newState: StateType) {\n    for (const key in newState) {\n      localState[key] = immutable ? deepFreeze(newState[key]) : newState[key];\n    }\n\n    for (const key in localState) {\n      if (!(key in newState)) {\n        Reflect.deleteProperty(localState, key);\n      }\n    }\n  }\n\n  let debounceTimeout: any = null;\n  function debouncedUpdate() {\n    clearTimeout(debounceTimeout);\n    debounceTimeout = setTimeout(() => subscribers.forEach((subscriber) => subscriber()), 0);\n  }\n\n  function setState(newState: StateType) {\n    if (!hasChanged(localState, newState)) {\n      return;\n    }\n\n    syncState(newState);\n    debouncedUpdate();\n  }\n\n  function getPulseMethod(key: string) {\n    return (...args: any[]) => {\n      const currentState = deepCloneUnfreeze(localState);\n      const pulse = pulses[key](currentState, ...args);\n\n      if (pulse instanceof Promise) {\n        return pulse\n          .then(() => setState(currentState))\n          .catch((error) => {\n            console.error(\"Error in pulse:\", error);\n          });\n      }\n\n      setState(currentState);\n    };\n  }\n\n  syncState(localState);\n\n  const pulsesProxy = new Proxy(boundPulses, {\n    get: (pulses, prop: string) => {\n      if (prop === \"state\") {\n        return proxyState;\n      }\n\n      if (!(prop in pulses)) {\n        throw new Error(`Pulse '${prop}' does not exist`);\n      }\n      return pulses[prop];\n    }\n  });\n\n  return pulsesProxy as StorePulses<PulsesType> & { state: ProxyState<StateType> };\n}\n\n// Crea una tienda inmutable\nexport function createPulseStore<StateType extends State, PulsesType extends Pulses<StateType>>(\n  initialState: StateType,\n  pulses: PulsesType\n): StorePulses<PulsesType> & { state: ProxyState<StateType> } {\n  return createStore(initialState, pulses, true);\n}\n\n// Crea una tienda mutable\nexport function createMutableStore<StateType extends State, PulsesType extends Pulses<StateType>>(\n  initialState: StateType,\n  pulses: PulsesType\n): StorePulses<PulsesType> & { state: ProxyState<StateType> } {\n  console.warn(\n    \"Warning: You are working with a mutable state. This can lead to unpredictable behavior. All state changes made outside of a pulse will not trigger a re-render.\"\n  );\n  return createStore(initialState, pulses, false);\n}\n\nconst effectDeps = new WeakMap<Function, any[]>();\n\nexport function createEffect(effect: Function, dependencies?: any[]) {\n  const runEffect = () => {\n    try {\n      effectStack.push(runEffect);\n      effect();\n    } finally {\n      effectStack.pop();\n    }\n  };\n\n  runEffect();\n}\n"],"mappings":"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"}