//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"names":["isNodeJs","Boolean","process","versions","node","Vnode","constructor","tag","props","children","dom","isSVG","this","isComponent","component","isVnode","object","isVnodeComponent","domToVnode","nodeType","nodeValue","vnode","nodeName","toLowerCase","i","l","childNodes","length","childDom","push","childVnode","attributes","attr","trust","htmlString","div","document","createElement","innerHTML","trim","Array","from","map","mainComponent","mainVnode","isMounted","current","event","reservedProps","Set","onCleanupSet","onMountSet","onUpdateSet","onUnmountSet","onCleanup","callback","add","callSet","set","clear","directives","parentNode","newdom","createTextNode","replaceChild","bool","style","display","value","model","property","handler","e","target","type","isArray","val","idx","indexOf","splice","sharedSetAttribute","multiple","ctrlKey","forEach","child","join","selected","prevHandler","oldProps","cleanup","class","className","classList","name","toggle","id","cssText","domStyle","eventListenerNames","eventListener","defaultPrevented","update","newVnode","newVnodeDom","removeAttribute","setAttribute","has","addEventListener","slice","addProperties","vnodeProps","updateAttributes","vnodeDom","removeAttributes","createElementNS","flatTree","newChild","view","bind","createNewElement","oldChild","appendChild","textContent","patch","oldDomChildren","oldChildrenLength","firstOldProps","firstVnode","oldTree","oldKeyedList","newKeyedList","key","insertBefore","remove","patchKeyed","childrenLength","nextOldChild","updateVnode","unmount","result","removeEventListener","Reflect","deleteProperty","v","tagOrComponent","fragment","_","directive","directiveName","container","querySelector","vnodeComponent"],"sources":["../lib/index.ts"],"sourcesContent":["declare global {\n  var document: Document;\n  namespace JSX {\n    interface IntrinsicElements {\n      [elemName: string]: any;\n    }\n  }\n}\n\ninterface DefaultRecord extends Record<string | number | symbol, any> {}\n\nexport interface VnodeProperties extends DefaultRecord {\n  key?: string | number;\n}\n\nexport interface DomElement extends Element, DefaultRecord {}\n\nexport interface Component extends DefaultRecord {\n  (props: VnodeProperties, children: any[]): Vnode | any;\n}\n\nexport interface POJOComponent extends DefaultRecord {\n  view: Component;\n}\n\nexport type ValyrianComponent = Component | POJOComponent;\n\nexport interface VnodeComponentInterface extends Vnode {\n  tag: ValyrianComponent;\n}\n\nexport interface Children extends Array<Vnode | VnodeComponentInterface | ValyrianComponent | any> {}\n\nexport interface Directive {\n  (vnode: VnodeWithDom, oldProps: VnodeProperties | null): void | boolean;\n}\n\nexport const isNodeJs = Boolean(typeof process !== \"undefined\" && process.versions && process.versions.node);\n\nexport class Vnode {\n  constructor(\n    public tag: string | Component | POJOComponent,\n    public props: null | VnodeProperties,\n    public children: Children,\n    public dom?: DomElement,\n    public isSVG?: boolean\n  ) {}\n}\n\nexport interface VnodeWithDom extends Vnode {\n  tag: string;\n  dom: DomElement;\n  props: VnodeProperties;\n}\n\nexport const isComponent = (component: unknown): component is Component => typeof component === \"function\";\nexport const isVnode = (object?: unknown): object is Vnode => object instanceof Vnode;\n\nexport const isVnodeComponent = (object?: unknown): object is VnodeComponentInterface => {\n  return isVnode(object) && isComponent(object.tag);\n};\n\nexport function domToVnode(dom: any): VnodeWithDom {\n  if (dom.nodeType === 3) {\n    return dom.nodeValue;\n  }\n\n  const vnode = new Vnode(dom.nodeName.toLowerCase(), {}, []) as VnodeWithDom;\n  vnode.dom = dom;\n  dom.props = vnode.props;\n\n  for (let i = 0, l = dom.childNodes.length; i < l; i++) {\n    const childDom = dom.childNodes[i];\n    if (childDom.nodeType === 3) {\n      vnode.children.push(childDom.nodeValue);\n    } else if (childDom.nodeType === 1) {\n      const childVnode = domToVnode(childDom);\n      vnode.children.push(childVnode);\n    }\n  }\n\n  const props = vnode.props as VnodeProperties;\n  for (let i = 0, l = dom.attributes.length; i < l; i++) {\n    const attr = dom.attributes[i];\n    props[attr.nodeName] = attr.nodeValue;\n  }\n\n  return vnode as VnodeWithDom;\n}\n\nexport function trust(htmlString: string) {\n  const div = document.createElement(\"div\");\n  div.innerHTML = htmlString.trim();\n  return Array.from(div.childNodes).map(domToVnode);\n}\n\nlet mainComponent: VnodeComponentInterface | null = null;\nlet mainVnode: VnodeWithDom | null = null;\nlet isMounted = false;\n\nexport const current = {\n  vnode: null as Vnode | null,\n  component: null as ValyrianComponent | null,\n  event: null as Event | null\n};\n\nexport const reservedProps = new Set<string>([\n  \"key\",\n  \"state\",\n  \"v-keep\",\n  \"v-text\",\n  \"v-if\",\n  \"v-for\",\n  \"v-show\",\n  \"v-class\",\n  \"v-html\",\n  \"v-model\",\n  \"v-create\",\n  \"v-update\",\n  \"v-cleanup\"\n]);\n\nconst onCleanupSet = new Set<Function>();\nconst onMountSet = new Set<Function>();\nconst onUpdateSet = new Set<Function>();\nconst onUnmountSet = new Set<Function>();\nexport const onMount = (callback: Function) => !isMounted && onMountSet.add(callback);\nexport const onUpdate = (callback: Function) => onUpdateSet.add(callback);\nexport const onCleanup = (callback: Function) => onCleanupSet.add(callback);\nexport const onUnmount = (callback: Function) => !isMounted && onUnmountSet.add(callback);\nconst callSet = (set: Set<Function>) => {\n  for (const callback of set) {\n    callback();\n  }\n  set.clear();\n};\n\nexport const directives: Record<string, Directive> = {\n  \"v-for\"(vnode: VnodeWithDom) {\n    const set = vnode.props[\"v-for\"];\n    const children = vnode.children;\n    const callback = children[0];\n    children.length = set.length;\n\n    for (let i = 0, l = set.length; i < l; i++) {\n      children[i] = callback(set[i], i);\n    }\n  },\n\n  \"v-if\": (vnode: VnodeWithDom) => {\n    const bool = Boolean(vnode.props[\"v-if\"]);\n    if (bool) {\n      const parentNode = vnode.dom?.parentNode;\n      if (parentNode) {\n        const newdom = document.createTextNode(\"\");\n        parentNode.replaceChild(newdom, vnode.dom);\n      }\n\n      return false;\n    }\n  },\n\n  \"v-show\": (vnode: VnodeWithDom) => {\n    const bool = Boolean(vnode.props[\"v-show\"]);\n    (\n      vnode.dom as unknown as {\n        style: { display: string };\n      }\n    ).style.display = bool ? \"\" : \"none\";\n  },\n\n  \"v-html\": (vnode: VnodeWithDom) => {\n    vnode.children = [trust(vnode.props[\"v-html\"])];\n  },\n\n  // The \"v-model\" directive binds the value of an input element to a model property\n  \"v-model\": (vnode: VnodeWithDom) => {\n    let [model, property, event]: any[] = vnode.props[\"v-model\"];\n    let value;\n    // This function updates the model property when the input element's value changes\n    let handler = (e: Event) => (model[property] = (e.target as DomElement & Record<string, any>).value);\n    if (vnode.tag === \"input\") {\n      // If the element is an input, use the \"input\" event by default\n      event = event || \"oninput\";\n      // Depending on the type of input element, use a different handler function\n      switch (vnode.props.type) {\n        case \"checkbox\": {\n          if (Array.isArray(model[property])) {\n            // If the model property is an array, add or remove the value from the array when the checkbox is checked or unchecked\n            handler = (e: Event) => {\n              const val = (e.target as DomElement & Record<string, any>).value;\n              const idx = model[property].indexOf(val);\n              if (idx === -1) {\n                model[property].push(val);\n              } else {\n                model[property].splice(idx, 1);\n              }\n            };\n            // If the value is in the array, set the checkbox to be checked\n            value = model[property].indexOf(vnode.dom.value) !== -1;\n          } else if (\"value\" in vnode.props) {\n            // If the input element has a \"value\" attribute, use it to determine the checked state\n            handler = () => {\n              if (model[property] === vnode.props.value) {\n                model[property] = null;\n              } else {\n                model[property] = vnode.props.value;\n              }\n            };\n            value = model[property] === vnode.props.value;\n          } else {\n            // If there is no \"value\" attribute, use a boolean value for the model property\n            handler = () => (model[property] = !model[property]);\n            value = model[property];\n          }\n          // Set the \"checked\" attribute on the input element\n          // eslint-disable-next-line no-use-before-define\n          sharedSetAttribute(\"checked\", value, vnode);\n          break;\n        }\n        case \"radio\": {\n          // If the element is a radio button, set the \"checked\" attribute based on the value of the model property\n          // eslint-disable-next-line no-use-before-define\n          sharedSetAttribute(\"checked\", model[property] === vnode.dom.value, vnode);\n          break;\n        }\n        default: {\n          // For all other input types, set the \"value\" attribute based on the value of the model property\n          // eslint-disable-next-line no-use-before-define\n          sharedSetAttribute(\"value\", model[property], vnode);\n        }\n      }\n    } else if (vnode.tag === \"select\") {\n      // If the element is a select element, use the \"click\" event by default\n      event = event || \"onclick\";\n      if (vnode.props.multiple) {\n        // If the select element allows multiple selections, update the model property with an array of selected values\n        handler = (e: Event & Record<string, any>) => {\n          const val = (e.target as DomElement & Record<string, any>).value;\n          if (e.ctrlKey) {\n            // If the Ctrl key is pressed, add or remove the value from the array\n            const idx = model[property].indexOf(val);\n            if (idx === -1) {\n              model[property].push(val);\n            } else {\n              model[property].splice(idx, 1);\n            }\n          } else {\n            // If the Ctrl key is not pressed, set the model property to an array with the selected value\n            model[property].splice(0, model[property].length);\n            model[property].push(val);\n          }\n        };\n        // Set the \"selected\" attribute on the options based on whether they are in the model property array\n        vnode.children.forEach((child: VnodeWithDom) => {\n          if (child.tag === \"option\") {\n            const value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = model[property].indexOf(value) !== -1;\n          }\n        });\n      } else {\n        // If the select element does not allow multiple selections, set the \"selected\" attribute on the options based on the value of the model property\n        vnode.children.forEach((child: VnodeWithDom) => {\n          if (child.tag === \"option\") {\n            const value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = value === model[property];\n          }\n        });\n      }\n    } else if (vnode.tag === \"textarea\") {\n      // If the element is a textarea, use the \"input\" event by default\n      event = event || \"oninput\";\n      // Set the textarea's content to the value of the model property\n      vnode.children = [model[property]];\n    }\n\n    // We assume that the prev handler if any will not be changed by the user across patchs\n    const prevHandler = vnode.props[event];\n\n    // Set the event handler on the element\n    // eslint-disable-next-line no-use-before-define\n    sharedSetAttribute(\n      event,\n      (e: Event) => {\n        handler(e);\n\n        // If the previous handler is defined, call it after the model has been updated\n        if (prevHandler) {\n          prevHandler(e);\n        }\n      },\n      vnode\n    );\n  },\n\n  \"v-create\": (vnode: VnodeWithDom, oldProps: VnodeProperties | null) => {\n    if (!oldProps) {\n      const callback = vnode.props[\"v-create\"];\n      const cleanup = callback(vnode);\n\n      if (typeof cleanup === \"function\") {\n        onCleanup(cleanup);\n      }\n    }\n  },\n\n  \"v-update\": (vnode: VnodeWithDom, oldProps: VnodeProperties | null) => {\n    if (oldProps) {\n      const callback = vnode.props[\"v-update\"];\n      const cleanup = callback(vnode, oldProps);\n\n      if (typeof cleanup === \"function\") {\n        onCleanup(cleanup);\n      }\n    }\n  },\n\n  \"v-cleanup\": (vnode: VnodeWithDom) => {\n    const callback = vnode.props[\"v-cleanup\"];\n    onCleanup(() => callback(vnode));\n  },\n\n  // Frequent used properties\n  class: (vnode: VnodeWithDom) => {\n    const value = vnode.props.class;\n    if (typeof value === \"string\") {\n      vnode.dom.className = value;\n    } else if (Array.isArray(value)) {\n      vnode.dom.className = value.join(\" \");\n    } else if (typeof value === \"object\") {\n      const classList = vnode.dom.classList;\n      for (const name in value) {\n        const val = typeof value[name] === \"function\" ? (value[name] as Function)() : value[name];\n        classList.toggle(name, val);\n      }\n    }\n  },\n\n  id: (vnode: VnodeWithDom) => {\n    vnode.dom.id = vnode.props.id;\n  },\n\n  style: (vnode: VnodeWithDom) => {\n    const value = vnode.props.style;\n    if (typeof value === \"string\") {\n      vnode.dom.style.cssText = value;\n    } else if (typeof value === \"object\") {\n      const domStyle = vnode.dom.style;\n      domStyle.cssText = \"\";\n      for (const name in value) {\n        domStyle[name] = value[name];\n      }\n    }\n  }\n};\n\nexport function directive(name: string, directive: Directive) {\n  const directiveName = `v-${name}`;\n  directives[directiveName] = directive;\n  reservedProps.add(directiveName);\n}\n\nconst eventListenerNames = new Set<string>();\n\nfunction eventListener(e: Event) {\n  current.event = e;\n  let dom = e.target as DomElement;\n  const name = `on${e.type}`;\n\n  while (dom) {\n    const oldProps = dom.props;\n    if (oldProps && oldProps[name]) {\n      oldProps[name](e, dom);\n\n      if (!e.defaultPrevented) {\n        update();\n      }\n      return;\n    }\n    dom = dom.parentNode as DomElement;\n  }\n\n  current.event = null;\n}\n\nfunction sharedSetAttribute(name: string, value: any, newVnode: VnodeWithDom): void | boolean {\n  const newVnodeDom = newVnode.dom;\n  if (typeof value === \"function\") {\n    if (!eventListenerNames.has(name)) {\n      (mainVnode as VnodeWithDom).dom.addEventListener(name.slice(2), eventListener);\n      eventListenerNames.add(name);\n    }\n    return;\n  }\n\n  if (name in newVnodeDom) {\n    newVnodeDom[name] = value;\n    return;\n  }\n\n  if (value === false) {\n    newVnodeDom.removeAttribute(name);\n  } else {\n    newVnodeDom.setAttribute(name, value);\n  }\n}\n\nexport function setAttribute(name: string, value: any, newVnode: VnodeWithDom): void {\n  if (!reservedProps.has(name)) {\n    newVnode.props[name] = value;\n    sharedSetAttribute(name, value, newVnode);\n  }\n}\n\nfunction removeAttributes(vnode: VnodeWithDom, oldProps: VnodeProperties | null): void {\n  if (!oldProps) {\n    return;\n  }\n\n  const vnodeDom = vnode.dom;\n  const vnodeProps = vnode.props;\n\n  for (const name in oldProps) {\n    if (name in vnodeProps === false && !eventListenerNames.has(name) && !reservedProps.has(name)) {\n      if (name in vnodeDom) {\n        vnodeDom[name] = null;\n      } else {\n        vnodeDom.removeAttribute(name);\n      }\n    }\n  }\n}\n\nfunction addProperties(vnode: VnodeWithDom, oldProps: VnodeProperties | null) {\n  const vnodeProps = vnode.props;\n  for (const name in vnodeProps) {\n    if (directives[name]) {\n      if (directives[name](vnode, oldProps) === false) {\n        break;\n      }\n      continue;\n    }\n\n    if (reservedProps.has(name)) {\n      continue;\n    }\n\n    sharedSetAttribute(name, vnodeProps[name], vnode);\n  }\n}\n\nfunction updateAttributes(newVnode: VnodeWithDom, oldProps: VnodeProperties | null): void {\n  removeAttributes(newVnode, oldProps);\n  addProperties(newVnode, oldProps);\n}\n\nfunction createElement(tag: string, isSVG: boolean): DomElement {\n  return isSVG\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\n    : (document.createElement(tag) as DomElement);\n}\n\nfunction flatTree(newVnode: VnodeWithDom) {\n  current.vnode = newVnode;\n  const { children } = newVnode;\n  let i = 0;\n\n  while (i < children.length) {\n    const newChild = children[i];\n\n    if (newChild == null) {\n      children.splice(i, 1);\n      continue;\n    }\n\n    if (Array.isArray(newChild)) {\n      children.splice(i, 1, ...newChild);\n      continue;\n    }\n\n    if (newChild instanceof Vnode) {\n      if (newChild.props === null) {\n        newChild.props = {};\n      }\n\n      if (typeof newChild.tag !== \"string\") {\n        const component = (\"view\" in newChild.tag ? newChild.tag.view : newChild.tag).bind(newChild.tag);\n        current.component = component;\n        children[i] = component(newChild.props, newChild.children);\n        continue;\n      } else {\n        newChild.isSVG = newVnode.isSVG || newChild.tag === \"svg\";\n      }\n    }\n\n    i++;\n  }\n}\n\nfunction createNewElement(newChild: any, newVnode: VnodeWithDom, oldChild: DomElement | null) {\n  if (newChild instanceof Vnode === false) {\n    const dom = document.createTextNode(newChild);\n    if (oldChild) {\n      newVnode.dom.replaceChild(dom, oldChild);\n    } else {\n      newVnode.dom.appendChild(dom);\n    }\n    return;\n  }\n\n  const dom = createElement(newChild.tag, newChild.isSVG);\n  if (oldChild) {\n    newVnode.dom.replaceChild(dom, oldChild);\n  } else {\n    newVnode.dom.appendChild(dom);\n  }\n  newChild.dom = dom;\n  addProperties(newChild, null);\n  newChild.dom.props = newChild.props;\n  flatTree(newChild);\n  const children = newChild.children;\n  if (children.length === 0) {\n    newChild.dom.textContent = \"\";\n    return;\n  }\n\n  for (let i = 0, l = children.length; i < l; i++) {\n    createNewElement(children[i], newChild, null);\n  }\n  children.length = 0;\n}\n\nfunction patchKeyed(newVnode: VnodeWithDom) {\n  const oldTree = newVnode.dom.childNodes as unknown as DomElement[];\n  const oldKeyedList: Record<string, number> = {};\n  const newKeyedList: Record<string, number> = {};\n  const children = newVnode.children;\n\n  for (let i = 0, l = oldTree.length; i < l; i++) {\n    const oldChild = oldTree[i];\n    const oldProps = oldChild.props;\n    if (oldProps) {\n      oldKeyedList[oldProps.key as string] = i;\n    }\n\n    if (i < children.length && children[i] instanceof Vnode) {\n      newKeyedList[children[i].props.key as string] = i;\n    }\n  }\n\n  for (let i = 0, l = children.length; i < l; i++) {\n    const newChild = children[i];\n    const oldIndex = oldKeyedList[newChild.props.key];\n    const oldChild = oldTree[oldIndex];\n\n    if (!oldChild) {\n      createNewElement(newChild, newVnode, null);\n      continue;\n    }\n\n    newChild.dom = oldChild;\n    if (newVnode.dom.childNodes[i] !== newChild.dom) {\n      newVnode.dom.insertBefore(newChild.dom, newVnode.dom.childNodes[i]);\n    }\n\n    const oldProps = oldChild.props;\n    newChild.dom = oldChild as DomElement;\n    oldChild.props = newChild.props;\n\n    if (oldProps && \"v-keep\" in newChild.props && newChild.props[\"v-keep\"] === oldProps[\"v-keep\"]) {\n      continue;\n    }\n\n    updateAttributes(newChild as VnodeWithDom, oldProps || null);\n    patch(newChild);\n  }\n\n  // Remove any old nodes not in the new tree\n  for (let i = 0, l = oldTree.length; i < l; i++) {\n    const oldChild = oldTree[i];\n    const oldProps = oldChild.props;\n    if (oldProps && !newKeyedList[oldProps.key as string]) {\n      oldChild.remove();\n    }\n  }\n}\n\nexport function patch(newVnode: VnodeWithDom): void {\n  flatTree(newVnode);\n  const children = newVnode.children;\n\n  if (children.length === 0) {\n    newVnode.dom.textContent = \"\";\n    return;\n  }\n\n  const oldDomChildren = newVnode.dom.childNodes as unknown as DomElement[];\n  const oldChildrenLength = oldDomChildren.length;\n  if (oldChildrenLength > 0) {\n    const firstOldProps = oldDomChildren[0].props;\n    const firstVnode = children[0] as VnodeWithDom;\n    if (firstOldProps && firstVnode instanceof Vnode && \"key\" in firstVnode.props && \"key\" in firstOldProps) {\n      patchKeyed(newVnode);\n      children.length = 0;\n      return;\n    }\n  }\n\n  const childrenLength = children.length;\n  if (oldChildrenLength === 0) {\n    for (let i = 0; i < childrenLength; i++) {\n      createNewElement(children[i], newVnode, null);\n    }\n    children.length = 0;\n    return;\n  }\n\n  for (let i = 0; i < childrenLength; i++) {\n    const oldChild = oldDomChildren[i];\n    const newChild = children[i];\n    if (!oldChild) {\n      createNewElement(newChild, newVnode, null);\n      continue;\n    }\n\n    if (newChild instanceof Vnode === false) {\n      if (oldChild.nodeType !== 3) {\n        newVnode.dom.replaceChild(document.createTextNode(newChild), oldChild);\n        continue;\n      }\n\n      if (oldChild.nodeValue != newChild) {\n        oldChild.nodeValue = newChild;\n      }\n      continue;\n    }\n\n    if (\"v-keep\" in newChild.props) {\n      if (oldChild.props && oldChild.props[\"v-keep\"] === newChild.props[\"v-keep\"]) {\n        continue;\n      }\n\n      const nextOldChild = oldDomChildren[i + 1];\n      if (nextOldChild && nextOldChild.props && nextOldChild.props[\"v-keep\"] === newChild.props[\"v-keep\"]) {\n        oldChild.remove();\n        continue;\n      }\n    }\n\n    if (newChild.tag !== oldChild.nodeName.toLowerCase()) {\n      createNewElement(newChild, newVnode, oldChild);\n      continue;\n    }\n\n    newChild.dom = oldChild;\n    updateAttributes(newChild as VnodeWithDom, oldChild.props || null);\n    oldChild.props = newChild.props;\n    patch(newChild);\n  }\n\n  for (let i = childrenLength, l = oldDomChildren.length; i < l; i++) {\n    oldDomChildren[i]?.remove();\n  }\n\n  children.length = 0;\n}\n\nexport function update(): void | string {\n  if (mainVnode) {\n    mainVnode.children = [mainComponent];\n    return updateVnode(mainVnode);\n  }\n}\n\nexport function updateVnode(vnode: VnodeWithDom): string | void {\n  callSet(onCleanupSet);\n  patch(vnode);\n  callSet(isMounted ? onUpdateSet : onMountSet);\n  isMounted = true;\n  current.vnode = null;\n  current.component = null;\n  if (isNodeJs) {\n    return vnode.dom.innerHTML;\n  }\n}\n\nexport function unmount() {\n  if (mainVnode) {\n    mainComponent = new Vnode(() => null, {}, []) as VnodeComponentInterface;\n    const result = update();\n    callSet(onUnmountSet);\n    for (const name in eventListenerNames) {\n      mainVnode.dom.removeEventListener(name.slice(2).toLowerCase(), eventListener);\n      Reflect.deleteProperty(eventListenerNames, name);\n    }\n\n    mainComponent = null;\n    mainVnode = null;\n    isMounted = false;\n    current.vnode = null;\n    current.component = null;\n    return result;\n  }\n}\n\nexport function mount(dom: string | DomElement, component: any) {\n  const container =\n    typeof dom === \"string\" ? (isNodeJs ? createElement(dom, dom === \"svg\") : document.querySelector(dom)) : dom;\n  const vnodeComponent = isVnodeComponent(component)\n    ? component\n    : isComponent(component)\n    ? new Vnode(component, {}, [])\n    : new Vnode(() => component, {}, []);\n  if (mainComponent && mainComponent.tag !== vnodeComponent.tag) {\n    unmount();\n  }\n\n  mainComponent = vnodeComponent as VnodeComponentInterface;\n  mainVnode = domToVnode(container);\n  return update();\n}\n\nexport function v(tagOrComponent: string | Component, props: VnodeProperties, ...children: Children) {\n  return new Vnode(tagOrComponent, props, children);\n}\n\nv.fragment = (_: VnodeProperties, ...children: Children) => children;\n"],"mappings":"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"}