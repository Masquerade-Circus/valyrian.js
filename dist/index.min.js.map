//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"sources":["../lib/index.ts"],"names":["Vnode","tag","props","children","this","isVnode","object","isComponent","component","isVnodeComponent","vnode","isNodeJs","Boolean","process","versions","node","createDomElement","isSVG","document","createElementNS","createElement","domToVnode","dom","v","tagName","toLowerCase","Array","from","childNodes","filter","child","nodeType","map","text","nodeValue","String","forEach","call","attributes","prop","nodeName","trust","htmlString","div","innerHTML","trim","item","ValyrianSymbol","Symbol","onCleanup","callback","current","app","indexOf","push","onUnmount","onMount","onUpdate","mount","container","vnodeComponent","appContainer","querySelectorAll","Error","unmount","eventListener","e","target","name","type","defaultPrevented","update","parentNode","isMounted","eventListenerNames","mainVnode","callCleanup","valyrianApp","i","length","oldVnode","patch","callMount","callUpdate","callUnmount","Reflect","deleteProperty","emptyVnode","onremove","sharedSetAttribute","value","reservedProps","directives","addEventListener","slice","removeAttribute","setAttribute","updateAttributes","newVnode","newTree","childVnode","result","view","splice","isArray","flatTree","oldTree","oldTreeLength","newTreeLength","oldKeyedList","reduce","acc","key","newKeyedList","oldChildVnode","shouldPatch","shouldupdate","onupdate","oncreate","appendChild","replaceChild","removeChild","patchKeyedTree","newChildVnode","createTextNode","patchNormalTree","textContent","directive","directive2","fullName","hideDirective","test","bool","newdom","builtInDirectives","set","style","display","classes","classList","toggle","html","model","property","event","handler","val","idx","multiple","ctrlKey","value2","join","selected","plugins","Map","use","plugin","options","has","get","tagOrComponent","fragment","state"],"mappings":"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","sourcesContent":["/*** Vnode ***/\n\nimport {\n  Children,\n  Current,\n  Directive,\n  DomElement,\n  IVnode,\n  MountedValyrianApp,\n  Plugin,\n  Props,\n  Valyrian,\n  ValyrianApp,\n  ValyrianComponent,\n  VnodeComponent,\n  VnodeWithDom\n} from \"./interfaces\";\n\nexport const Vnode = function Vnode(this: IVnode, tag: string, props: Props, children: Children) {\n  this.props = props;\n  this.children = children;\n  this.tag = tag;\n} as unknown as IVnode;\n\nexport function isVnode(object?: unknown | IVnode): object is IVnode {\n  return object instanceof Vnode;\n}\n\nexport function isComponent(component?: unknown | ValyrianComponent): component is ValyrianComponent {\n  return typeof component === \"function\" || (typeof component === \"object\" && component !== null && \"view\" in component);\n}\n\nexport function isVnodeComponent(vnode?: unknown | VnodeComponent): vnode is VnodeComponent {\n  return vnode instanceof Vnode && vnode.tag === \"__component__\";\n}\n\n/*** Util ***/\n\nexport const isNodeJs = Boolean(typeof process !== \"undefined\" && process.versions && process.versions.node);\n\nfunction createDomElement(tag: string, isSVG: boolean = false) {\n  return isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag) : document.createElement(tag);\n}\n\nfunction domToVnode(dom: DomElement): VnodeWithDom {\n  let vnode = v(\n    dom.tagName.toLowerCase(),\n    {},\n    ...Array.from(dom.childNodes)\n      .filter((child) => (child as DomElement).nodeType === 1 || (child as DomElement).nodeType === 3)\n      .map((child) => {\n        if ((child as DomElement).nodeType === 1) {\n          return domToVnode(child as DomElement);\n        }\n\n        let text = new Vnode(\"#text\", {}, []);\n        text.nodeValue = String((child as DomElement).nodeValue);\n        text.dom = child as DomElement;\n        return text;\n      })\n  );\n  [].forEach.call(dom.attributes, (prop: Attr) => (vnode.props[prop.nodeName] = prop.nodeValue));\n  vnode.dom = dom;\n  return vnode as VnodeWithDom;\n}\n\nexport const trust = (htmlString: string): IVnode[] => {\n  let div = createDomElement(\"div\");\n  div.innerHTML = htmlString.trim();\n\n  return [].map.call(div.childNodes, (item) => domToVnode(item)) as IVnode[];\n};\n\n/*** Mount ***/\n\nconst ValyrianSymbol = Symbol(\"Valyrian\");\n\nexport function onCleanup(callback: Function) {\n  if (v.current.app?.onCleanup.indexOf(callback) === -1) {\n    v.current.app?.onCleanup.push(callback);\n  }\n}\n\nexport function onUnmount(callback: Function) {\n  if (v.current.app?.onUnmount.indexOf(callback) === -1) {\n    v.current.app?.onUnmount.push(callback);\n  }\n}\n\nexport function onMount(callback: Function) {\n  if (v.current.app?.onMount.indexOf(callback) === -1) {\n    v.current.app?.onMount.push(callback);\n  }\n}\n\nexport function onUpdate(callback: Function) {\n  if (v.current.app?.onUpdate.indexOf(callback) === -1) {\n    v.current.app?.onUpdate.push(callback);\n  }\n}\n\n/*\n  * Mounts a component to the DOM\n  mount('#app', () => <div>Hello world</div>); // App is a Functional Component\n  mount('#app', { view: () => <div>Hello world</div> }); // App is a POJO component with a view method\n  mount('#app', classInstance); // App is a class instance with a view method\n  mount('#app', <App><div>Hello world</div></App>); // App is a Vnode component (Vnode with tag __component__)\n*/\n\nexport function mount(container: DomElement | string, component: ValyrianComponent | IVnode): void | string {\n  let appContainer = null;\n\n  if (isNodeJs) {\n    appContainer = typeof container === \"string\" ? createDomElement(container === \"svg\" ? \"svg\" : \"div\", container === \"svg\") : container;\n  } else {\n    appContainer = typeof container === \"string\" ? document.querySelectorAll(container)[0] : container;\n  }\n\n  if (!appContainer) {\n    throw new Error(\"Container not found\");\n  }\n\n  let vnodeComponent: VnodeComponent | IVnode;\n\n  if (isVnodeComponent(component)) {\n    vnodeComponent = component;\n  } else if (isComponent(component)) {\n    vnodeComponent = v(component, {});\n  } else {\n    throw new Error(\"Component must be a Valyrian Component or a Vnode component\");\n  }\n\n  if (component[ValyrianSymbol]) {\n    unmount(component);\n  } else {\n    component[ValyrianSymbol] = {\n      isMounted: false,\n      eventListenerNames: {},\n      onCleanup: [],\n      onMount: [],\n      onUpdate: [],\n      onUnmount: []\n    };\n    function eventListener(e: Event) {\n      let dom = e.target as DomElement & Record<string, any>;\n      let name = `v-on${e.type}`;\n      while (dom) {\n        if (dom[name]) {\n          dom[name](e, dom);\n          if (!e.defaultPrevented) {\n            update(component);\n          }\n          return;\n        }\n        dom = dom.parentNode as DomElement;\n      }\n    }\n    component[ValyrianSymbol].eventListener = eventListener;\n  }\n\n  component[ValyrianSymbol].component = vnodeComponent;\n  component[ValyrianSymbol].container = appContainer;\n  component[ValyrianSymbol].mainVnode = domToVnode(appContainer);\n  component[ValyrianSymbol].mainVnode.isSVG = component[ValyrianSymbol].tag === \"svg\";\n\n  // update\n  return update(component);\n}\n\nfunction callCleanup(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onCleanup.length; i++) {\n    valyrianApp.onCleanup[i]();\n  }\n  valyrianApp.onCleanup = [];\n}\n\nfunction callUnmount(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onUnmount.length; i++) {\n    valyrianApp.onUnmount[i]();\n  }\n  valyrianApp.onUnmount = [];\n}\n\nfunction callMount(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onMount.length; i++) {\n    valyrianApp.onMount[i]();\n  }\n  valyrianApp.onMount = [];\n}\n\nfunction callUpdate(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onUpdate.length; i++) {\n    valyrianApp.onUpdate[i]();\n  }\n  valyrianApp.onUpdate = [];\n}\n\nexport function update(component?: ValyrianComponent | IVnode): void | string {\n  if (component && component[ValyrianSymbol]) {\n    let valyrianApp = component[ValyrianSymbol];\n    v.current.app = valyrianApp;\n    valyrianApp.onCleanup.length && callCleanup(valyrianApp);\n    let oldVnode: VnodeWithDom | null = valyrianApp.mainVnode as VnodeWithDom;\n    valyrianApp.mainVnode = new Vnode(valyrianApp.mainVnode.tag, valyrianApp.mainVnode.props, [valyrianApp.component]) as VnodeWithDom;\n    valyrianApp.mainVnode.dom = oldVnode.dom;\n    valyrianApp.mainVnode.isSVG = oldVnode.isSVG;\n    patch(valyrianApp.mainVnode, oldVnode, valyrianApp);\n    oldVnode = null;\n    if (valyrianApp.isMounted === false) {\n      valyrianApp.onMount.length && callMount(valyrianApp);\n      valyrianApp.isMounted = true;\n    } else {\n      valyrianApp.onUpdate.length && callUpdate(valyrianApp);\n    }\n\n    if (isNodeJs) {\n      return valyrianApp.mainVnode.dom.innerHTML;\n    }\n  }\n}\n\nexport function unmount(component?: ValyrianComponent | IVnode): void | string {\n  if (!component || !component[ValyrianSymbol]) {\n    return;\n  }\n\n  let valyrianApp = component[ValyrianSymbol] as MountedValyrianApp;\n\n  if (valyrianApp.isMounted) {\n    valyrianApp.onCleanup.length && callCleanup(valyrianApp);\n    valyrianApp.onUnmount.length && callUnmount(valyrianApp);\n    let oldVnode: VnodeWithDom | null = valyrianApp.mainVnode as VnodeWithDom;\n    valyrianApp.mainVnode = new Vnode(valyrianApp.mainVnode.tag, valyrianApp.mainVnode.props, []) as VnodeWithDom;\n    valyrianApp.mainVnode.dom = oldVnode.dom;\n    valyrianApp.mainVnode.isSVG = oldVnode.isSVG;\n    patch(valyrianApp.mainVnode, oldVnode, valyrianApp);\n    oldVnode = null;\n\n    if (isNodeJs) {\n      return valyrianApp.mainVnode.dom.innerHTML;\n    }\n\n    (valyrianApp as any) = null;\n    Reflect.deleteProperty(component, ValyrianSymbol);\n  }\n}\n\nlet emptyVnode = new Vnode(\"__empty__\", {}, []);\n\nfunction onremove(vnode: IVnode) {\n  for (let i = 0; i < vnode.children.length; i++) {\n    vnode.children[i].tag !== \"#text\" && onremove(vnode.children[i]);\n  }\n\n  vnode.props.onremove && vnode.props.onremove(vnode);\n}\n\nfunction sharedSetAttribute(prop: string, value: any, vnode: VnodeWithDom, oldVnode?: VnodeWithDom) {\n  // It is a reserved prop\n  if (v.reservedProps[prop]) {\n    // If it is a directive name call the directive\n    if (v.directives[prop]) {\n      v.directives[prop](vnode.props[prop], vnode, oldVnode);\n    }\n    return;\n  }\n\n  // It is not a reserved prop so we add it to the dom\n  if (typeof value === \"function\") {\n    let valyrianApp = v.current.app as MountedValyrianApp;\n    if (prop in valyrianApp.eventListenerNames === false) {\n      valyrianApp.eventListenerNames[prop] = true;\n      valyrianApp.container.addEventListener(prop.slice(2), valyrianApp.eventListener);\n    }\n    vnode.dom[`v-${prop}`] = value;\n    return;\n  }\n\n  if (prop in vnode.dom && vnode.isSVG === false) {\n    // eslint-disable-next-line eqeqeq\n    if (vnode.dom[prop] != value) {\n      vnode.dom[prop] = value;\n    }\n    return;\n  }\n\n  // Use set attribute\n  if (!oldVnode || oldVnode.props[prop] !== value) {\n    if (value === false) {\n      vnode.dom.removeAttribute(prop);\n    } else {\n      vnode.dom.setAttribute(prop, value);\n    }\n  }\n}\n\nexport function setAttribute(name: string, value: any, vnode: VnodeWithDom, oldVnode?: VnodeWithDom) {\n  if (name in vnode.props === false) {\n    vnode.props[name] = value;\n  }\n\n  sharedSetAttribute(name, value, vnode, oldVnode);\n}\n\nfunction updateAttributes(vnode: VnodeWithDom, oldVnode?: VnodeWithDom) {\n  for (let prop in vnode.props) {\n    // We asume that we clean the props in some directive\n    if (prop in vnode.props === false) {\n      return;\n    }\n\n    sharedSetAttribute(prop, vnode.props[prop], vnode, oldVnode);\n  }\n\n  if (oldVnode) {\n    for (let prop in oldVnode.props) {\n      if (prop in vnode.props === false && typeof oldVnode.props[prop] !== \"function\" && prop in v.reservedProps === false) {\n        if (prop in oldVnode.dom && vnode.isSVG === false) {\n          oldVnode.dom[prop] = null;\n        } else {\n          oldVnode.dom.removeAttribute(prop);\n        }\n      }\n    }\n  }\n}\n\nfunction flatTree(newVnode: IVnode): void {\n  let newTree = newVnode.children;\n  for (let i = 0; i < newTree.length; i++) {\n    let childVnode = newTree[i];\n    if (childVnode instanceof Vnode) {\n      if (childVnode.tag !== \"#text\") {\n        if (childVnode.tag === \"__component__\") {\n          let component = childVnode.component as ValyrianComponent;\n          v.current.component = component;\n          let result = (\"view\" in component ? component.view : component).call(component, childVnode.props, ...childVnode.children);\n\n          newTree.splice(i--, 1, result);\n          continue;\n        }\n        childVnode.isSVG = newVnode.isSVG || childVnode.tag === \"svg\";\n      }\n    } else if (childVnode === null || childVnode === undefined) {\n      newTree.splice(i--, 1);\n    } else if (Array.isArray(childVnode)) {\n      newTree.splice(i--, 1, ...childVnode);\n    } else {\n      if (i > 0 && newTree[i - 1].tag === \"#text\") {\n        newTree[i - 1].nodeValue += childVnode;\n        newTree.splice(i--, 1);\n      } else {\n        newTree[i] = new Vnode(\"#text\", {}, []);\n        newTree[i].nodeValue = String(childVnode);\n      }\n    }\n  }\n}\n\nfunction patchKeyedTree(\n  newVnode: VnodeWithDom,\n  newTree: (VnodeWithDom & { props: Props & { key: string } })[],\n  oldTree: (VnodeWithDom & { props: Props & { key: string } })[],\n  newTreeLength: number,\n  oldTreeLength: number,\n  valyrianApp: MountedValyrianApp\n) {\n  let oldKeyedList = oldTree.reduce((acc, vnode, i) => {\n    acc[vnode.props.key] = i;\n    return acc;\n  }, {} as { [key: string]: number });\n  let newKeyedList = newTree.reduce((acc, vnode, i) => {\n    acc[vnode.props.key] = i;\n    return acc;\n  }, {} as { [key: string]: number });\n\n  for (let i = 0; i < newTreeLength; i++) {\n    let childVnode = newTree[i];\n    let oldChildVnode = oldTree[oldKeyedList[childVnode.props.key]];\n    let shouldPatch = true;\n\n    if (oldChildVnode) {\n      childVnode.dom = oldChildVnode.dom;\n      if (\"v-once\" in childVnode.props || (childVnode.props.shouldupdate && childVnode.props.shouldupdate(childVnode, oldChildVnode) === false)) {\n        // skip this patch\n        childVnode.children = oldChildVnode.children;\n        shouldPatch = false;\n      } else {\n        updateAttributes(childVnode, oldChildVnode);\n        if (valyrianApp.isMounted) {\n          childVnode.props.onupdate && childVnode.props.onupdate(childVnode, oldChildVnode);\n        } else {\n          childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n        }\n      }\n    } else {\n      childVnode.dom = createDomElement(childVnode.tag, childVnode.isSVG);\n      updateAttributes(childVnode);\n      childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n    }\n\n    if (newVnode.dom.childNodes[i] === undefined) {\n      newVnode.dom.appendChild(childVnode.dom);\n    } else if (newVnode.dom.childNodes[i] !== childVnode.dom) {\n      oldTree[i] && newKeyedList[oldTree[i].props.key] === undefined && onremove(oldTree[i]);\n      newVnode.dom.replaceChild(childVnode.dom, newVnode.dom.childNodes[i]);\n    }\n\n    shouldPatch && patch(childVnode, oldChildVnode, valyrianApp);\n  }\n\n  // For the rest of the children, we should remove them\n  for (let i = newTreeLength; i < oldTreeLength; i++) {\n    if (newKeyedList[oldTree[i].props.key] === undefined) {\n      let oldChildVnode = oldTree[i];\n      onremove(oldChildVnode);\n      oldChildVnode.dom.parentNode && oldChildVnode.dom.parentNode.removeChild(oldChildVnode.dom);\n    }\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction patchNormalTree(\n  newVnode: VnodeWithDom,\n  newTree: (VnodeWithDom & { props: Props & { key: string } })[],\n  oldTree: (VnodeWithDom & { props: Props & { key: string } })[],\n  newTreeLength: number,\n  oldTreeLength: number,\n  valyrianApp: MountedValyrianApp\n) {\n  // If new tree and old tree have more than one child, we should update the dom\n  for (let i = 0; i < newTreeLength; i++) {\n    let oldChildVnode = oldTree[i];\n    let newChildVnode = newTree[i];\n\n    // Old child does not exists\n    if (!oldChildVnode) {\n      // New child is a text node\n      if (newChildVnode.tag === \"#text\") {\n        newChildVnode.dom = document.createTextNode(newChildVnode.nodeValue as string) as unknown as DomElement;\n        newVnode.dom.appendChild(newChildVnode.dom);\n        continue;\n      }\n\n      // New child is a normal node\n      newChildVnode.dom = createDomElement(newChildVnode.tag, newChildVnode.isSVG);\n      updateAttributes(newChildVnode);\n      newVnode.dom.appendChild(newChildVnode.dom);\n      newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n      patch(newChildVnode, undefined, valyrianApp);\n      continue;\n    }\n\n    // Old child exists\n    // New child is a text node\n    if (newChildVnode.tag === \"#text\") {\n      // Old child is a text node\n      if (oldChildVnode.tag === \"#text\") {\n        newChildVnode.dom = oldChildVnode.dom;\n        // eslint-disable-next-line eqeqeq\n        if (newChildVnode.dom.nodeValue != newChildVnode.nodeValue) {\n          newChildVnode.dom.nodeValue = newChildVnode.nodeValue as string;\n        }\n        continue;\n      }\n\n      // Old child is a normal node\n      newChildVnode.dom = document.createTextNode(newChildVnode.nodeValue as string) as unknown as DomElement;\n      onremove(oldChildVnode);\n      newVnode.dom.replaceChild(newChildVnode.dom, oldChildVnode.dom);\n\n      continue;\n    }\n\n    // New child is a normal node\n    // Old child is the same type as new child\n    if (oldChildVnode.tag === newChildVnode.tag) {\n      newChildVnode.dom = oldChildVnode.dom;\n      // If we have a v-once directive or a shouldupdate method that returns false, we skip the update\n      if (newChildVnode.props[\"v-once\"] || (newChildVnode.props.shouldupdate && newChildVnode.props.shouldupdate(newChildVnode, oldChildVnode) === false)) {\n        newChildVnode.children = oldChildVnode.children;\n        continue;\n      }\n\n      // We update the dom element\n      updateAttributes(newChildVnode, oldChildVnode);\n      if (valyrianApp && valyrianApp.isMounted) {\n        newChildVnode.props.onupdate && newChildVnode.props.onupdate(newChildVnode, oldChildVnode);\n      } else {\n        newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n      }\n      patch(newChildVnode, oldChildVnode, valyrianApp);\n\n      continue;\n    }\n\n    // Old child is of a different type than new child\n    newChildVnode.dom = createDomElement(newChildVnode.tag, newChildVnode.isSVG);\n    updateAttributes(newChildVnode);\n    if (oldChildVnode.tag !== \"#text\") {\n      onremove(oldChildVnode);\n    }\n    newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n    newVnode.dom.replaceChild(newChildVnode.dom, oldChildVnode.dom);\n    patch(newChildVnode, undefined, valyrianApp);\n  }\n\n  // For the rest of the children, we should remove them\n  for (let i = newTreeLength; i < oldTreeLength; i++) {\n    let oldChildVnode = oldTree[i];\n    if (oldChildVnode.tag !== \"#text\") {\n      onremove(oldChildVnode);\n    }\n    oldChildVnode.dom.parentNode && oldChildVnode.dom.parentNode.removeChild(oldChildVnode.dom);\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction patch(newVnode: VnodeWithDom, oldVnode: VnodeWithDom = emptyVnode as VnodeWithDom, valyrianApp: MountedValyrianApp) {\n  v.current.vnode = newVnode;\n  v.current.oldVnode = oldVnode;\n\n  flatTree(newVnode);\n\n  let newTree = newVnode.children;\n  let oldTree = oldVnode.children;\n  let oldTreeLength = oldTree.length;\n  let newTreeLength = newTree.length;\n\n  // If new tree is empty, remove all old nodes\n  if (newTreeLength === 0) {\n    for (let i = 0; i < oldTreeLength; i++) {\n      onremove(oldTree[i]);\n    }\n\n    newVnode.dom.textContent = \"\";\n    return;\n  }\n\n  // If the tree is keyed list and is not first render and old tree is keyed list too\n  if (oldTreeLength && \"key\" in newTree[0].props && \"key\" in oldTree[0].props) {\n    patchKeyedTree(newVnode, newTree, oldTree, newTreeLength, oldTreeLength, valyrianApp);\n    return;\n  }\n\n  patchNormalTree(newVnode, newTree, oldTree, newTreeLength, oldTreeLength, valyrianApp);\n}\n\n/*** Directives ***/\n\nexport function directive(name: string, directive: Directive) {\n  let fullName = `v-${name}`;\n  v.directives[fullName] = directive;\n  v.reservedProps[fullName] = true;\n}\n\nfunction hideDirective(test: boolean): Directive {\n  return (bool: boolean, vnode: IVnode, oldVnode?: IVnode) => {\n    let value = test ? bool : !bool;\n    if (value) {\n      let newdom = document.createTextNode(\"\");\n      if (oldVnode && oldVnode.dom && oldVnode.dom.parentNode) {\n        oldVnode.tag !== \"#text\" && onremove(oldVnode);\n        oldVnode.dom.parentNode.replaceChild(newdom, oldVnode.dom);\n      }\n      vnode.tag = \"#text\";\n      vnode.children = [];\n      vnode.props = {};\n      vnode.dom = newdom as unknown as DomElement;\n    }\n  };\n}\n\nconst builtInDirectives = {\n  \"v-if\": hideDirective(false),\n  \"v-unless\": hideDirective(true),\n  \"v-for\": (set: unknown[], vnode: VnodeWithDom) => {\n    vnode.children = set.map(vnode.children[0] as (value: unknown) => Function);\n  },\n  \"v-show\": (bool: boolean, vnode: VnodeWithDom) => {\n    (vnode.dom as unknown as { style: { display: string } }).style.display = bool ? \"\" : \"none\";\n  },\n  \"v-class\": (classes: { [x: string]: boolean }, vnode: VnodeWithDom) => {\n    for (let name in classes) {\n      (vnode.dom as DomElement).classList.toggle(name, classes[name]);\n    }\n  },\n  \"v-html\": (html: string, vnode: VnodeWithDom) => {\n    vnode.children = [trust(html)];\n  },\n  \"v-model\": ([model, property, event]: any[], vnode: VnodeWithDom, oldVnode?: VnodeWithDom) => {\n    let value;\n    let handler;\n    if (vnode.name === \"input\") {\n      event = event || \"oninput\";\n      switch (vnode.props.type) {\n        case \"checkbox\": {\n          if (Array.isArray(model[property])) {\n            handler = (e: Event) => {\n              let val = (e.target as DomElement & Record<string, any>).value;\n              let idx = model[property].indexOf(val);\n              if (idx === -1) {\n                model[property].push(val);\n              } else {\n                model[property].splice(idx, 1);\n              }\n            };\n            value = model[property].indexOf(vnode.dom.value) !== -1;\n          } else if (\"value\" in vnode.props) {\n            handler = () => {\n              if (model[property] === vnode.props.value) {\n                model[property] = null;\n              } else {\n                model[property] = vnode.props.value;\n              }\n            };\n            value = model[property] === vnode.props.value;\n          } else {\n            handler = () => (model[property] = !model[property]);\n            value = model[property];\n          }\n          setAttribute(\"checked\", value, vnode, oldVnode);\n          break;\n        }\n        case \"radio\": {\n          setAttribute(\"checked\", model[property] === vnode.dom.value, vnode, oldVnode);\n          break;\n        }\n        default: {\n          setAttribute(\"value\", model[property], vnode, oldVnode);\n        }\n      }\n    } else if (vnode.name === \"select\") {\n      event = event || \"onclick\";\n      if (vnode.props.multiple) {\n        handler = (e: Event & Record<string, any>) => {\n          let val = (e.target as DomElement & Record<string, any>).value;\n          if (e.ctrlKey) {\n            let idx = model[property].indexOf(val);\n            if (idx === -1) {\n              model[property].push(val);\n            } else {\n              model[property].splice(idx, 1);\n            }\n          } else {\n            model[property].splice(0, model[property].length);\n            model[property].push(val);\n          }\n        };\n        vnode.children.forEach((child) => {\n          if (child.name === \"option\") {\n            let value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = model[property].indexOf(value) !== -1;\n          }\n        });\n      } else {\n        vnode.children.forEach((child) => {\n          if (child.name === \"option\") {\n            let value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = value === model[property];\n          }\n        });\n      }\n    } else if (vnode.name === \"textarea\") {\n      event = event || \"oninput\";\n      vnode.children = [model[property]];\n    }\n\n    if (!vnode.props[event]) {\n      if (!handler) {\n        handler = (e: Event) => (model[property] = (e.target as DomElement & Record<string, any>).value);\n      }\n      setAttribute(event, handler, vnode, oldVnode);\n    }\n  }\n};\n\n/*** Plugins ***/\nconst plugins = new Map<Plugin, any>();\n\nexport function use(plugin: Plugin, options?: Record<string | number | symbol, any>): void | any {\n  if (plugins.has(plugin)) {\n    return plugins.get(plugin);\n  }\n\n  let result = plugin(v, options);\n  plugins.set(plugin, result);\n  return result;\n}\n\n/*** Hyperscript ***/\n\nexport const v: Valyrian = function v(tagOrComponent: string | ValyrianComponent, props: Props, ...children: Children): IVnode | VnodeComponent {\n  if (typeof tagOrComponent === \"string\") {\n    return new Vnode(tagOrComponent, props || {}, children);\n  }\n\n  const vnode = new Vnode(\"__component__\", props || {}, children);\n  vnode.component = tagOrComponent;\n  return vnode as VnodeComponent;\n};\n\nv.fragment = (props: Props, ...children: Children): Children => {\n  return children;\n};\n\n/*** V properties and methods ***/\n// This is intended to make the properties and methods available for plugins\nv.current = {} as Current;\n\nv.directives = { ...builtInDirectives };\n\nv.reservedProps = {\n  key: true,\n  state: true,\n  oncreate: true,\n  onupdate: true,\n  onremove: true,\n  shouldupdate: true,\n  \"v-cleanup\": true,\n  \"v-once\": true,\n\n  // Built in directives\n  \"v-if\": true,\n  \"v-unless\": true,\n  \"v-for\": true,\n  \"v-show\": true,\n  \"v-class\": true,\n  \"v-html\": true\n};\n\nv.isVnode = isVnode;\nv.isComponent = isComponent;\nv.isVnodeComponent = isVnodeComponent;\n\nv.isNodeJs = isNodeJs;\nv.trust = trust;\n\nv.onCleanup = onCleanup;\nv.onUnmount = onUnmount;\nv.onMount = onMount;\nv.onUpdate = onUpdate;\n\nv.mount = mount;\nv.unmount = unmount;\nv.update = update;\n\nv.setAttribute = setAttribute;\nv.directive = directive;\nv.use = use;\n"]}