//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"sources":["../lib/index.ts"],"names":["ComponentString","TextString","isNodeJs","Boolean","process","versions","node","ValyrianSymbol","Symbol","Und","Vnode","tag","props","children","this","isVnode","object","isComponent","component","isVnodeComponent","vnode","createDomElement","isSVG","document","createElementNS","createElement","domToVnode","dom","v","tagName","toLowerCase","Array","from","childNodes","filter","child","nodeType","map","text","nodeValue","String","forEach","call","attributes","prop","nodeName","trust","htmlString","div","innerHTML","trim","item","reservedProps","key","state","oncreate","onupdate","onremove","shouldupdate","current","onCleanup","callback","app","indexOf","push","onUnmount","onMount","onUpdate","mount","container","vnodeComponent","appContainer","querySelectorAll","Error","unmount","eventListener","e","target","name","type","defaultPrevented","update","parentNode","isMounted","eventListenerNames","mainVnode","callCleanup","valyrianApp","i","length","oldVnode","patch","callMount","callUpdate","callUnmount","Reflect","deleteProperty","emptyVnode","sharedSetAttribute","value","directives","addEventListener","slice","removeAttribute","setAttribute","setAttributes","newVnode","newTree","oldTree","childVnode","result","view","splice","isArray","oldTreeLength","newTreeLength","oldKeyedList","newKeyedList","oldChildVnode","shouldPatch","appendChild","replaceChild","removeChild","newChildVnode","createTextNode","textContent","directive","directive2","fullName","hideDirective","test","bool","newdom","set","style","display","classes","classList","toggle","html","model","property","event","handler","val","idx","multiple","ctrlKey","value2","join","selected","plugins","Map","use","plugin","options","has","get","tagOrComponent","fragment"],"mappings":"MAqBA,IAAMA,EAAkB,gBAClBC,EAAa,QACNC,EAAWC,QAA2B,oBAAZC,SAA2BA,QAAQC,UAAYD,QAAQC,SAASC,MACjGC,EAAiBC,OAAO,YACxBC,OAAM,EAICC,EAAQ,SAA6BC,EAAaC,EAAcC,GAC3EC,KAAKF,MAAQA,EACbE,KAAKD,SAAWA,EAChBC,KAAKH,IAAMA,GAGN,SAAAI,EAAiBC,GACtB,OAAOA,aAAkBN,EAGpB,SAAAO,EAAqBC,GAC1B,MAA4B,mBAAdA,GAAkD,iBAAdA,GAAwC,OAAdA,GAAsB,SAAUA,EAGvG,SAAAC,EAA0BC,GAC/B,OAAOA,aAAiBV,GAASU,EAAMT,MAAQX,EAKjD,SAAAqB,EAA0BV,EAAaW,GAAiB,GACtD,OAAOA,EAAQC,SAASC,gBAAgB,6BAA8Bb,GAAOY,SAASE,cAAcd,GAGtG,SAAAe,EAAoBC,GAClB,IAAIP,EAAQQ,EACVD,EAAIE,QAAQC,cACZ,MACGC,MAAMC,KAAKL,EAAIM,YACfC,OAAQC,GAA6C,IAAlCA,EAAqBC,UAAqD,IAAlCD,EAAqBC,UAChFC,IAAKF,IACJ,GAAuC,IAAlCA,EAAqBC,SACxB,OAAOV,EAAWS,GAGpB,IAAIG,EAAO,IAAI5B,EAAMT,EAAY,GAAI,IAGrC,OAFAqC,EAAKC,UAAYC,OAAQL,EAAqBI,WAC9CD,EAAKX,IAAMQ,EACJG,KAKb,MAFA,GAAGG,QAAQC,KAAKf,EAAIgB,WAAaC,GAAgBxB,EAAMR,MAAMgC,EAAKC,UAAYD,EAAKL,WACnFnB,EAAMO,IAAMA,EACLP,EAGF,IAAM0B,EAASC,IACpB,IAAIC,EAAM3B,EAAiB,OAG3B,OAFA2B,EAAIC,UAAYF,EAAWG,OAEpB,GAAGb,IAAIK,KAAKM,EAAIf,WAAakB,GAASzB,EAAWyB,KAGpDC,EAA+B,CACnCC,KAAK,EACLC,OAAO,EACPC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,cAAc,EACd,UAAU,EAGV,QAAQ,EACR,YAAY,EACZ,SAAS,EACT,UAAU,EACV,WAAW,EACX,UAAU,GAKNC,EAAmB,GAElB,SAAAC,EAAmBC,IACyB,IAA7CF,EAAQG,KAAKF,UAAUG,QAAQF,IACjCF,EAAQG,KAAKF,UAAUI,KAAKH,GAIzB,SAAAI,EAAmBJ,IACyB,IAA7CF,EAAQG,KAAKG,UAAUF,QAAQF,IACjCF,EAAQG,KAAKG,UAAUD,KAAKH,GAIzB,SAAAK,EAAiBL,IACyB,IAA3CF,EAAQG,KAAKI,QAAQH,QAAQF,IAC/BF,EAAQG,KAAKI,QAAQF,KAAKH,GAIvB,SAAAM,EAAkBN,IACyB,IAA5CF,EAAQG,KAAKK,SAASJ,QAAQF,IAChCF,EAAQG,KAAKK,SAASH,KAAKH,GAYxB,SAAAO,EAAeC,EAAgCnD,GACpD,IAYIoD,EAZAC,EAAe,KAQnB,GALEA,EADErE,EACkC,iBAAdmE,EAAyBhD,EAA+B,QAAdgD,EAAsB,MAAQ,MAAqB,QAAdA,GAAuBA,EAExF,iBAAdA,EAAyB9C,SAASiD,iBAAiBH,GAAW,GAAKA,GAGtFE,EACH,MAAM,IAAIE,MAAM,uBAKlB,GAAItD,EAAiBD,GACnBoD,EAAiBpD,MAAA,CAAA,IACRD,EAAYC,GAGrB,MAAM,IAAIuD,MAAM,+DAFhBH,EAAiB1C,EAAEV,EAAW,IAKhC,GAAIA,EAAUX,GACZmE,EAAQxD,OACH,CASL,IAASyD,EAAT,SAAuBC,GACrB,IAAIjD,EAAMiD,EAAEC,OACRC,EAAO,OAAOF,EAAEG,OACpB,KAAOpD,GAAK,CACV,GAAIA,EAAImD,GAKN,OAJAnD,EAAImD,GAAMF,EAAGjD,QACRiD,EAAEI,kBACLC,EAAO/D,IAIXS,EAAMA,EAAIuD,aAnBdhE,EAAUX,GAAkB,CAC1B4E,WAAW,EACXC,mBAAoB,GACpBxB,UAAW,GACXM,QAAS,GACTC,SAAU,GACVF,UAAW,IAgBb/C,EAAUX,GAAgBoE,cAAgBA,EAQ5C,OALAzD,EAAUX,GAAgBW,UAAYoD,EACtCpD,EAAUX,GAAgB8D,UAAYE,EACtCrD,EAAUX,GAAgB8E,UAAY3D,EAAW6C,GAG1CU,EAAO/D,GAGhB,SAAAoE,EAAqBC,GACnB,IAAA,IAASC,EAAI,EAAGA,EAAID,EAAY3B,UAAU6B,OAAQD,IAChDD,EAAY3B,UAAU4B,KAExBD,EAAY3B,UAAY,GAwBnB,SAAAqB,EAAgB/D,GACrB,GAAIA,GAAaA,EAAUX,GAAiB,CAC1C,IAAIgF,EAAcrE,EAAUX,GAC5BoD,EAAQG,IAAMyB,EACdA,EAAY3B,UAAU6B,QAAUH,EAAYC,GAC5C,IAAIG,EAAgCH,EAAYF,UAYhD,GAXAE,EAAYF,UAAY,IAAI3E,EAAM6E,EAAYF,UAAU1E,IAAK4E,EAAYF,UAAUzE,MAAO,CAAC2E,EAAYrE,YACvGqE,EAAYF,UAAU1D,IAAM+D,EAAS/D,IACrCgE,EAAMJ,EAAYF,UAAWK,EAAUH,GACvCG,EAAW,MACmB,IAA1BH,EAAYJ,WACdI,EAAYrB,QAAQuB,QAzB1B,SAAmBF,GACjB,IAAA,IAASC,EAAI,EAAGA,EAAID,EAAYrB,QAAQuB,OAAQD,IAC9CD,EAAYrB,QAAQsB,KAEtBD,EAAYrB,QAAU,GAqBY0B,CAAUL,GACxCA,EAAYJ,WAAY,GAExBI,EAAYpB,SAASsB,QArB3B,SAAoBF,GAClB,IAAA,IAASC,EAAI,EAAGA,EAAID,EAAYpB,SAASsB,OAAQD,IAC/CD,EAAYpB,SAASqB,KAEvBD,EAAYpB,SAAW,GAiBY0B,CAAWN,GAGxCrF,EACF,OAAOqF,EAAYF,UAAU1D,IAAIsB,WAKhC,SAAAyB,EAAiBxD,GACtB,IAAKA,IAAcA,EAAUX,GAC3B,OAGF,IAAIgF,EAAcrE,EAAUX,GAE5B,GAAIgF,EAAYJ,UAAW,CACzBI,EAAY3B,UAAU6B,QAAUH,EAAYC,GAC5CA,EAAYtB,UAAUwB,QArD1B,SAAqBF,GACnB,IAAA,IAASC,EAAI,EAAGA,EAAID,EAAYtB,UAAUwB,OAAQD,IAChDD,EAAYtB,UAAUuB,KAExBD,EAAYtB,UAAY,GAiDU6B,CAAYP,GAC5C,IAAIG,EAAgCH,EAAYF,UAOhD,GANAE,EAAYF,UAAY,IAAI3E,EAAM6E,EAAYF,UAAU1E,IAAK4E,EAAYF,UAAUzE,MAAO,IAC1F2E,EAAYF,UAAU1D,IAAM+D,EAAS/D,IACrC4D,EAAYF,UAAU/D,MAAQoE,EAASpE,MACvCqE,EAAMJ,EAAYF,UAAWK,EAAUH,GACvCG,EAAW,KAEPxF,EACF,OAAOqF,EAAYF,UAAU1D,IAAIsB,UAGlCsC,EAAsB,KACvBQ,QAAQC,eAAe9E,EAAWX,IAItC,IAAI0F,EAAa,IAAIvF,EAAM,YAAa,GAAI,IAE5C,SAAA+C,EAAkBrC,GAChB,IAAA,IAASoE,EAAI,EAAGA,EAAIpE,EAAMP,SAAS4E,OAAQD,IACzCpE,EAAMP,SAAS2E,GAAG7E,MAAQV,GAAcwD,EAASrC,EAAMP,SAAS2E,IAGlEpE,EAAMR,MAAM6C,UAAYrC,EAAMR,MAAM6C,SAASrC,GAG/C,SAAA8E,EAA4BtD,EAAcuD,EAAY/E,EAAqBsE,GAEzE,GAAItC,EAAcR,GAEhB,OAAIwD,EAAWxD,GACNwD,EAAWxD,GAAMxB,EAAMR,MAAMgC,GAAOxB,EAAOsE,QAGpD,EAIF,GAAqB,mBAAVS,EAAsB,CAC/B,IAAIZ,EAAc5B,EAAQG,IAM1B,OALIlB,KAAQ2C,EAAYH,qBAAuB,IAC7CG,EAAYH,mBAAmBxC,IAAQ,EACvC2C,EAAYlB,UAAUgC,iBAAiBzD,EAAK0D,MAAM,GAAIf,EAAYZ,qBAEpEvD,EAAMO,IAAI,KAAKiB,KAAUuD,GAIvBvD,KAAQxB,EAAMO,MAAuB,IAAhBP,EAAME,MAEzBF,EAAMO,IAAIiB,IAASuD,IACrB/E,EAAMO,IAAIiB,GAAQuD,GAMjBT,GAAYA,EAAS9E,MAAMgC,KAAUuD,KAC1B,IAAVA,EACF/E,EAAMO,IAAI4E,gBAAgB3D,GAE1BxB,EAAMO,IAAI6E,aAAa5D,EAAMuD,IAK5B,SAAAK,EAAsB1B,EAAcqB,EAAY/E,EAAqBsE,GAC1EtE,EAAMR,MAAMkE,GAAQqB,EAEpBD,EAAmBpB,EAAMqB,EAAO/E,EAAOsE,GAGzC,SAAAe,EAAuBrF,EAAqBsE,GAC1C,IAAA,IAAS9C,KAAQxB,EAAMR,MACrB,IAAqE,IAAjEsF,EAAmBtD,EAAMxB,EAAMR,MAAMgC,GAAOxB,EAAOsE,GACrD,OAIJ,GAAIA,EACF,IAAA,IAAS9C,KAAQ8C,EAAS9E,MACpBgC,KAAQxB,EAAMR,QAAU,GAAyC,mBAAzB8E,EAAS9E,MAAMgC,IAAwBA,KAAQQ,IAAkB,IACvGR,KAAQ8C,EAAS/D,MAAuB,IAAhBP,EAAME,MAChCoE,EAAS/D,IAAIiB,GAAQ,KAErB8C,EAAS/D,IAAI4E,gBAAgB3D,IAQvC,SAAA+C,EAAee,EAAwBhB,EAAkCO,EAAYV,GACnF5B,EAAQvC,MAAQsF,EAChB/C,EAAQ+B,SAAWA,IAAaO,EAAaxF,EAAOiF,EACpD,IAAIiB,EAAUD,EAAS7F,SACnB+F,EAAUlB,EAAS7E,SAEvB,IAAA,IAAS2E,EAAI,EAAGA,EAAImB,EAAQlB,OAAQD,IAAK,CACvC,IAAIqB,EAAaF,EAAQnB,GACzB,GAAIqB,aAAsBnG,GACxB,GAAImG,EAAWlG,MAAQV,EAAY,CACjC,GAAI4G,EAAWlG,MAAQX,EAAiB,CACtC,IAAIkB,EAAY2F,EAAW3F,UAC3ByC,EAAQzC,UAAYA,EACpB,IAAI4F,GAAU,SAAU5F,EAAYA,EAAU6F,KAAO7F,GAAWwB,KAAKxB,EAAW2F,EAAWjG,SAAUiG,EAAWhG,UAEhH8F,EAAQK,OAAOxB,IAAK,EAAGsB,GACvB,SAEFD,EAAWvF,MAAQoF,EAASpF,OAA4B,QAAnBuF,EAAWlG,UAEzCoB,MAAMkF,QAAQJ,GACvBF,EAAQK,OAAOxB,IAAK,KAAMqB,GACF,OAAfA,GAAuBA,IAAepG,EAC/CkG,EAAQK,OAAOxB,IAAK,IAEpBmB,EAAQnB,GAAK,IAAI9E,EAAMT,EAAY,GAAI,IACvC0G,EAAQnB,GAAGjD,UAAYsE,GAI3B,IAAIK,EAAgBN,EAAQnB,OACxB0B,EAAgBR,EAAQlB,OAG5B,GAAsB,IAAlB0B,EAUJ,GAAID,GAAiB,QAASP,EAAQ,GAAG/F,OAAS,QAASgG,EAAQ,GAAGhG,MAAtE,CACE,IAAIwG,EAAwC,GAC5C,IAAA,IAAS5B,EAAI,EAAGA,EAAI0B,EAAe1B,IACjC4B,EAAaR,EAAQpB,GAAG5E,MAAMyC,KAAOmC,EAGvC,IAAI6B,EAAwC,GAC5C,IAAA,IAAS7B,EAAI,EAAGA,EAAI2B,EAAe3B,IACjC6B,EAAaV,EAAQnB,GAAG5E,MAAMyC,KAAOmC,EAGvC,IAAA,IAASA,EAAI,EAAGA,EAAI2B,EAAe3B,IAAK,CACtC,IAAIqB,EAAaF,EAAQnB,GACrB8B,EAAgBV,EAAQQ,EAAaP,EAAWjG,MAAMyC,MACtDkE,GAAc,EAEdD,GACFT,EAAWlF,IAAM2F,EAAc3F,IAC3B,WAAYkF,EAAWjG,OAAUiG,EAAWjG,MAAM8C,eAA6E,IAA7DmD,EAAWjG,MAAM8C,aAAamD,EAAYS,IAE9GT,EAAWhG,SAAWyG,EAAczG,SACpC0G,GAAc,IAEdd,EAAcI,EAAYS,GACtB/B,EAAYJ,UACd0B,EAAWjG,MAAM4C,UAAYqD,EAAWjG,MAAM4C,SAASqD,EAAYS,GAEnET,EAAWjG,MAAM2C,UAAYsD,EAAWjG,MAAM2C,SAASsD,MAI3DA,EAAWlF,IAAMN,EAAiBwF,EAAWlG,IAAKkG,EAAWvF,OAC7DmF,EAAcI,GACdA,EAAWjG,MAAM2C,UAAYsD,EAAWjG,MAAM2C,SAASsD,IAGrDH,EAAS/E,IAAIM,WAAWuD,KAAO/E,EACjCiG,EAAS/E,IAAI6F,YAAYX,EAAWlF,KAC3B+E,EAAS/E,IAAIM,WAAWuD,KAAOqB,EAAWlF,MACnDiF,EAAQpB,IAAM6B,EAAaT,EAAQpB,GAAG5E,MAAMyC,OAAS5C,GAAOgD,EAASmD,EAAQpB,IAC7EkB,EAAS/E,IAAI8F,aAAaZ,EAAWlF,IAAK+E,EAAS/E,IAAIM,WAAWuD,KAGpE+B,GAAe5B,EAAMkB,EAAYS,EAAe/B,GAIlD,IAAA,IAASC,EAAI2B,EAAe3B,EAAI0B,EAAe1B,IAC7C,GAAI6B,EAAaT,EAAQpB,GAAG5E,MAAMyC,OAAS5C,EAAK,CAC9C,IAAI6G,EAAgBV,EAAQpB,GAC5B/B,EAAS6D,GACTA,EAAc3F,IAAIuD,YAAcoC,EAAc3F,IAAIuD,WAAWwC,YAAYJ,EAAc3F,UAnD7F,CA2DA,IAAA,IAAS6D,EAAI,EAAGA,EAAI2B,EAAe3B,IAAK,CACtC,IAAImC,EAAgBhB,EAAQnB,GAG5B,GAAIA,EAAI0B,EAAR,CACE,IAAII,EAAgBV,EAAQpB,GAE5B,GAAImC,EAAchH,MAAQV,EAAY,CAEpC,GAAIqH,EAAc3G,MAAQV,EAAY,CACpC0H,EAAchG,IAAM2F,EAAc3F,IAE9BgG,EAAchG,IAAIY,WAAaoF,EAAcpF,YAC/CoF,EAAchG,IAAIY,UAAYoF,EAAcpF,WAE9C,SAIFoF,EAAchG,IAAMJ,SAASqG,eAAeD,EAAcpF,WAC1DkB,EAAS6D,GACTZ,EAAS/E,IAAI8F,aAAaE,EAAchG,IAAK2F,EAAc3F,KAE3D,SAKF,GAAI2F,EAAc3G,MAAQgH,EAAchH,IAAK,CAG3C,GAFAgH,EAAchG,IAAM2F,EAAc3F,IAE9BgG,EAAc/G,MAAM,WAAc+G,EAAc/G,MAAM8C,eAAmF,IAAnEiE,EAAc/G,MAAM8C,aAAaiE,EAAeL,GAA2B,CACnJK,EAAc9G,SAAWyG,EAAczG,SACvC,SAIF4F,EAAckB,EAAeL,GACzB/B,EAAYJ,UACdwC,EAAc/G,MAAM4C,UAAYmE,EAAc/G,MAAM4C,SAASmE,EAAeL,GAE5EK,EAAc/G,MAAM2C,UAAYoE,EAAc/G,MAAM2C,SAASoE,GAG/DhC,EAAMgC,EAAeL,EAAe/B,GACpC,SAIFoC,EAAchG,IAAMN,EAAiBsG,EAAchH,IAAKgH,EAAcrG,OACtEmF,EAAckB,GACdL,EAAc3G,MAAQV,GAAcwD,EAAS6D,GAC7CK,EAAc/G,MAAM2C,UAAYoE,EAAc/G,MAAM2C,SAASoE,GAC7DjB,EAAS/E,IAAI8F,aAAaE,EAAchG,IAAK2F,EAAc3F,KAC3DgE,EAAMgC,EAAe1B,EAAYV,QAM/BoC,EAAchH,MAAQV,GAO1B0H,EAAchG,IAAMN,EAAiBsG,EAAchH,IAAKgH,EAAcrG,OACtEmF,EAAckB,GACdjB,EAAS/E,IAAI6F,YAAYG,EAAchG,KACvCgG,EAAc/G,MAAM2C,UAAYoE,EAAc/G,MAAM2C,SAASoE,GAC7DhC,EAAMgC,EAAe1B,EAAYV,KAV/BoC,EAAchG,IAAMJ,SAASqG,eAAeD,EAAcpF,WAC1DmE,EAAS/E,IAAI6F,YAAYG,EAAchG,MAa3C,IAAA,IAAS6D,EAAI2B,EAAe3B,EAAI0B,EAAe1B,IAAK,CAClD,IAAI8B,EAAgBV,EAAQpB,GAC5B8B,EAAc3G,MAAQV,GAAcwD,EAAS6D,GAC7CA,EAAc3F,IAAIuD,YAAcoC,EAAc3F,IAAIuD,WAAWwC,YAAYJ,EAAc3F,UAnJzF,CACE,IAAA,IAAS6D,EAAI,EAAGA,EAAI0B,EAAe1B,IACjCoB,EAAQpB,GAAG7E,MAAQV,GAAcwD,EAASmD,EAAQpB,IAGpDkB,EAAS/E,IAAIkG,YAAc,IAoJxB,SAAAC,EAAmBhD,EAAciD,GACtC,IAAIC,EAAW,KAAKlD,IACpBsB,EAAW4B,GAAYD,EACvB3E,EAAc4E,IAAY,EAG5B,SAAAC,EAAuBC,GACrB,MAAO,CAACC,EAAe/G,EAAesE,KAEpC,GADYwC,EAAOC,GAAQA,EAChB,CACT,IAAIC,EAAS7G,SAASqG,eAAe,IASrC,OARIlC,GAAYA,EAAS/D,KAAO+D,EAAS/D,IAAIuD,aAC3CQ,EAAS/E,MAAQV,GAAcwD,EAASiC,GACxCA,EAAS/D,IAAIuD,WAAWuC,aAAaW,EAAQ1C,EAAS/D,MAExDP,EAAMT,IAAMV,EACZmB,EAAMP,SAAW,GACjBO,EAAMR,MAAQ,GACdQ,EAAMO,IAAMyG,GACL,IAKb,IAAMhC,EAAyB,CAC7B,OAAQ6B,GAAc,GACtB,WAAYA,GAAc,GAC1B,QAAS,CAACI,EAAgBjH,KACxBA,EAAMP,SAAWwH,EAAIhG,IAAIjB,EAAMP,SAAS,KAE1C,SAAU,CAACsH,EAAe/G,KACvBA,EAAMO,IAAkD2G,MAAMC,QAAUJ,EAAO,GAAK,QAEvF,UAAW,CAACK,EAAmCpH,KAC7C,IAAA,IAAS0D,KAAQ0D,EACdpH,EAAMO,IAAmB8G,UAAUC,OAAO5D,EAAM0D,EAAQ1D,KAG7D,SAAU,CAAC6D,EAAcvH,KACvBA,EAAMP,SAAW,CAACiC,EAAM6F,KAE1B,UAAW,EAAEC,EAAOC,EAAUC,GAAe1H,EAAqBsE,KAChE,IAAIS,EACA4C,EACJ,GAAmB,UAAf3H,EAAM0D,KAER,OADAgE,EAAQA,GAAS,UACT1H,EAAMR,MAAMmE,MAAA,IACb,WACChD,MAAMkF,QAAQ2B,EAAMC,KACtBE,EAAWnE,IACT,IAAIoE,EAAOpE,EAAEC,OAA4CsB,MACrD8C,EAAML,EAAMC,GAAU9E,QAAQiF,IACtB,IAARC,EACFL,EAAMC,GAAU7E,KAAKgF,GAErBJ,EAAMC,GAAU7B,OAAOiC,EAAK,IAGhC9C,GAAqD,IAA7CyC,EAAMC,GAAU9E,QAAQ3C,EAAMO,IAAIwE,QACjC,UAAW/E,EAAMR,OAC1BmI,EAAU,KACJH,EAAMC,KAAczH,EAAMR,MAAMuF,MAClCyC,EAAMC,GAAY,KAElBD,EAAMC,GAAYzH,EAAMR,MAAMuF,OAGlCA,EAAQyC,EAAMC,KAAczH,EAAMR,MAAMuF,QAExC4C,EAAU,IAAOH,EAAMC,IAAaD,EAAMC,GAC1C1C,EAAQyC,EAAMC,IAEhBrC,EAAa,UAAWL,EAAO/E,EAAOsE,GACtC,MAAA,IAEG,QACHc,EAAa,UAAWoC,EAAMC,KAAczH,EAAMO,IAAIwE,MAAO/E,EAAOsE,GACpE,MAAA,QAGAc,EAAa,QAASoC,EAAMC,GAAWzH,EAAOsE,OAG1B,WAAftE,EAAM0D,MACfgE,EAAQA,GAAS,UACb1H,EAAMR,MAAMsI,UACdH,EAAWnE,IACT,IAAIoE,EAAOpE,EAAEC,OAA4CsB,MACzD,GAAIvB,EAAEuE,QAAS,CACb,IAAIF,EAAML,EAAMC,GAAU9E,QAAQiF,IACtB,IAARC,EACFL,EAAMC,GAAU7E,KAAKgF,GAErBJ,EAAMC,GAAU7B,OAAOiC,EAAK,QAG9BL,EAAMC,GAAU7B,OAAO,EAAG4B,EAAMC,GAAUpD,QAC1CmD,EAAMC,GAAU7E,KAAKgF,IAGzB5H,EAAMP,SAAS4B,QAASN,IACtB,GAAkB,WAAdA,EAAMxB,IAAkB,CAC1B,IAAIyI,EAAQ,UAAWjH,EAAMvB,MAAQuB,EAAMvB,MAAMuF,MAAQhE,EAAMtB,SAASwI,KAAK,IAAInG,OACjFf,EAAMvB,MAAM0I,UAA8C,IAAnCV,EAAMC,GAAU9E,QAAQqF,OAInDhI,EAAMP,SAAS4B,QAASN,IACtB,GAAkB,WAAdA,EAAMxB,IAAkB,CAC1B,IAAIyI,EAAQ,UAAWjH,EAAMvB,MAAQuB,EAAMvB,MAAMuF,MAAQhE,EAAMtB,SAASwI,KAAK,IAAInG,OACjFf,EAAMvB,MAAM0I,SAAWF,IAAUR,EAAMC,OAIrB,aAAfzH,EAAM0D,OACfgE,EAAQA,GAAS,UACjB1H,EAAMP,SAAW,CAAC+H,EAAMC,KAGrBzH,EAAMR,MAAMkI,KACVC,IACHA,EAAWnE,GAAcgE,EAAMC,GAAajE,EAAEC,OAA4CsB,OAE5FK,EAAasC,EAAOC,EAAS3H,EAAOsE,MAMpC6D,EAAU,IAAIC,IAEb,SAAAC,EAAaC,EAAgBC,GAClC,GAAIJ,EAAQK,IAAIF,GACd,OAAOH,EAAQM,IAAIH,GAGrB,IAAI5C,EAAS4C,EAAO9H,EAAG+H,GAEvB,OADAJ,EAAQlB,IAAIqB,EAAQ5C,GACbA,EAKF,IAAMlF,EAAc,SAAWkI,EAA4ClJ,KAAiBC,GACjG,GAA8B,iBAAnBiJ,EACT,OAAO,IAAIpJ,EAAMoJ,EAAgBlJ,GAAS,GAAIC,GAGhD,MAAMO,EAAQ,IAAIV,EAAM,gBAAiBE,GAAS,GAAIC,GAEtD,OADAO,EAAMF,UAAY4I,EACX1I,GAGTQ,EAAEmI,SAAW,CAACnJ,KAAiBC,IACtBA,EAKTe,EAAE+B,QAAUA,EAEZ/B,EAAEwE,WAAaA,EAEfxE,EAAEwB,cAAgBA,EAElBxB,EAAEb,QAAUA,EACZa,EAAEX,YAAcA,EAChBW,EAAET,iBAAmBA,EAErBS,EAAE1B,SAAWA,EACb0B,EAAEkB,MAAQA,EAEVlB,EAAEgC,UAAYA,EACdhC,EAAEqC,UAAYA,EACdrC,EAAEsC,QAAUA,EACZtC,EAAEuC,SAAWA,EAEbvC,EAAEwC,MAAQA,EACVxC,EAAE8C,QAAUA,EACZ9C,EAAEqD,OAASA,EAEXrD,EAAE4E,aAAeA,EACjB5E,EAAEkG,UAAYA,EACdlG,EAAE6H,IAAMA","sourcesContent":["/*** Vnode ***/\n\nimport {\n  Children,\n  Current,\n  Directive,\n  Directives,\n  DomElement,\n  IVnode,\n  MountedValyrianApp,\n  Plugin,\n  Props,\n  ReservedProps,\n  Valyrian,\n  ValyrianApp,\n  ValyrianComponent,\n  VnodeComponent,\n  VnodeWithDom\n} from \"./interfaces\";\n\n/*** Constants ***/\nconst ComponentString = \"__component__\";\nconst TextString = \"#text\";\nexport const isNodeJs = Boolean(typeof process !== \"undefined\" && process.versions && process.versions.node);\nconst ValyrianSymbol = Symbol(\"Valyrian\");\nconst Und = undefined;\n\n/*** Vnode ***/\n\nexport const Vnode = function Vnode(this: IVnode, tag: string, props: Props, children: Children) {\n  this.props = props;\n  this.children = children;\n  this.tag = tag;\n} as unknown as IVnode;\n\nexport function isVnode(object?: unknown | IVnode): object is IVnode {\n  return object instanceof Vnode;\n}\n\nexport function isComponent(component?: unknown | ValyrianComponent): component is ValyrianComponent {\n  return typeof component === \"function\" || (typeof component === \"object\" && component !== null && \"view\" in component);\n}\n\nexport function isVnodeComponent(vnode?: unknown | VnodeComponent): vnode is VnodeComponent {\n  return vnode instanceof Vnode && vnode.tag === ComponentString;\n}\n\n/*** Util ***/\n\nfunction createDomElement(tag: string, isSVG: boolean = false) {\n  return isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag) : document.createElement(tag);\n}\n\nfunction domToVnode(dom: DomElement): VnodeWithDom {\n  let vnode = v(\n    dom.tagName.toLowerCase(),\n    {},\n    ...Array.from(dom.childNodes)\n      .filter((child) => (child as DomElement).nodeType === 1 || (child as DomElement).nodeType === 3)\n      .map((child) => {\n        if ((child as DomElement).nodeType === 1) {\n          return domToVnode(child as DomElement);\n        }\n\n        let text = new Vnode(TextString, {}, []);\n        text.nodeValue = String((child as DomElement).nodeValue);\n        text.dom = child as DomElement;\n        return text;\n      })\n  );\n  [].forEach.call(dom.attributes, (prop: Attr) => (vnode.props[prop.nodeName] = prop.nodeValue));\n  vnode.dom = dom;\n  return vnode as VnodeWithDom;\n}\n\nexport const trust = (htmlString: string): Children => {\n  let div = createDomElement(\"div\");\n  div.innerHTML = htmlString.trim();\n\n  return [].map.call(div.childNodes, (item) => domToVnode(item)) as Children;\n};\n\nconst reservedProps: ReservedProps = {\n  key: true,\n  state: true,\n  oncreate: true,\n  onupdate: true,\n  onremove: true,\n  shouldupdate: true,\n  \"v-once\": true,\n\n  // Built in directives\n  \"v-if\": true,\n  \"v-unless\": true,\n  \"v-for\": true,\n  \"v-show\": true,\n  \"v-class\": true,\n  \"v-html\": true\n};\n\n/*** Mount ***/\n\nconst current: Current = {};\n\nexport function onCleanup(callback: Function) {\n  if (current.app?.onCleanup.indexOf(callback) === -1) {\n    current.app?.onCleanup.push(callback);\n  }\n}\n\nexport function onUnmount(callback: Function) {\n  if (current.app?.onUnmount.indexOf(callback) === -1) {\n    current.app?.onUnmount.push(callback);\n  }\n}\n\nexport function onMount(callback: Function) {\n  if (current.app?.onMount.indexOf(callback) === -1) {\n    current.app?.onMount.push(callback);\n  }\n}\n\nexport function onUpdate(callback: Function) {\n  if (current.app?.onUpdate.indexOf(callback) === -1) {\n    current.app?.onUpdate.push(callback);\n  }\n}\n\n/*\n  * Mounts a component to the DOM\n  mount('#app', () => <div>Hello world</div>); // App is a Functional Component\n  mount('#app', { view: () => <div>Hello world</div> }); // App is a POJO component with a view method\n  mount('#app', classInstance); // App is a class instance with a view method\n  mount('#app', <App><div>Hello world</div></App>); // App is a Vnode component (Vnode with tag __component__)\n*/\n\nexport function mount(container: DomElement | string, component: ValyrianComponent | IVnode): void | string {\n  let appContainer = null;\n\n  if (isNodeJs) {\n    appContainer = typeof container === \"string\" ? createDomElement(container === \"svg\" ? \"svg\" : \"div\", container === \"svg\") : container;\n  } else {\n    appContainer = typeof container === \"string\" ? document.querySelectorAll(container)[0] : container;\n  }\n\n  if (!appContainer) {\n    throw new Error(\"Container not found\");\n  }\n\n  let vnodeComponent: VnodeComponent | IVnode;\n\n  if (isVnodeComponent(component)) {\n    vnodeComponent = component;\n  } else if (isComponent(component)) {\n    vnodeComponent = v(component, {});\n  } else {\n    throw new Error(\"Component must be a Valyrian Component or a Vnode component\");\n  }\n\n  if (component[ValyrianSymbol]) {\n    unmount(component);\n  } else {\n    component[ValyrianSymbol] = {\n      isMounted: false,\n      eventListenerNames: {},\n      onCleanup: [],\n      onMount: [],\n      onUpdate: [],\n      onUnmount: []\n    };\n    function eventListener(e: Event) {\n      let dom = e.target as DomElement & Record<string, any>;\n      let name = `v-on${e.type}`;\n      while (dom) {\n        if (dom[name]) {\n          dom[name](e, dom);\n          if (!e.defaultPrevented) {\n            update(component);\n          }\n          return;\n        }\n        dom = dom.parentNode as DomElement;\n      }\n    }\n    component[ValyrianSymbol].eventListener = eventListener;\n  }\n\n  component[ValyrianSymbol].component = vnodeComponent;\n  component[ValyrianSymbol].container = appContainer;\n  component[ValyrianSymbol].mainVnode = domToVnode(appContainer);\n\n  // update\n  return update(component);\n}\n\nfunction callCleanup(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onCleanup.length; i++) {\n    valyrianApp.onCleanup[i]();\n  }\n  valyrianApp.onCleanup = [];\n}\n\nfunction callUnmount(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onUnmount.length; i++) {\n    valyrianApp.onUnmount[i]();\n  }\n  valyrianApp.onUnmount = [];\n}\n\nfunction callMount(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onMount.length; i++) {\n    valyrianApp.onMount[i]();\n  }\n  valyrianApp.onMount = [];\n}\n\nfunction callUpdate(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onUpdate.length; i++) {\n    valyrianApp.onUpdate[i]();\n  }\n  valyrianApp.onUpdate = [];\n}\n\nexport function update(component?: ValyrianComponent | IVnode): void | string {\n  if (component && component[ValyrianSymbol]) {\n    let valyrianApp = component[ValyrianSymbol];\n    current.app = valyrianApp;\n    valyrianApp.onCleanup.length && callCleanup(valyrianApp);\n    let oldVnode: VnodeWithDom | null = valyrianApp.mainVnode as VnodeWithDom;\n    valyrianApp.mainVnode = new Vnode(valyrianApp.mainVnode.tag, valyrianApp.mainVnode.props, [valyrianApp.component]) as VnodeWithDom;\n    valyrianApp.mainVnode.dom = oldVnode.dom;\n    patch(valyrianApp.mainVnode, oldVnode, valyrianApp);\n    oldVnode = null;\n    if (valyrianApp.isMounted === false) {\n      valyrianApp.onMount.length && callMount(valyrianApp);\n      valyrianApp.isMounted = true;\n    } else {\n      valyrianApp.onUpdate.length && callUpdate(valyrianApp);\n    }\n\n    if (isNodeJs) {\n      return valyrianApp.mainVnode.dom.innerHTML;\n    }\n  }\n}\n\nexport function unmount(component?: ValyrianComponent | IVnode): void | string {\n  if (!component || !component[ValyrianSymbol]) {\n    return;\n  }\n\n  let valyrianApp = component[ValyrianSymbol] as MountedValyrianApp;\n\n  if (valyrianApp.isMounted) {\n    valyrianApp.onCleanup.length && callCleanup(valyrianApp);\n    valyrianApp.onUnmount.length && callUnmount(valyrianApp);\n    let oldVnode: VnodeWithDom | null = valyrianApp.mainVnode as VnodeWithDom;\n    valyrianApp.mainVnode = new Vnode(valyrianApp.mainVnode.tag, valyrianApp.mainVnode.props, []) as VnodeWithDom;\n    valyrianApp.mainVnode.dom = oldVnode.dom;\n    valyrianApp.mainVnode.isSVG = oldVnode.isSVG;\n    patch(valyrianApp.mainVnode, oldVnode, valyrianApp);\n    oldVnode = null;\n\n    if (isNodeJs) {\n      return valyrianApp.mainVnode.dom.innerHTML;\n    }\n\n    (valyrianApp as any) = null;\n    Reflect.deleteProperty(component, ValyrianSymbol);\n  }\n}\n\nlet emptyVnode = new Vnode(\"__empty__\", {}, []);\n\nfunction onremove(vnode: IVnode) {\n  for (let i = 0; i < vnode.children.length; i++) {\n    vnode.children[i].tag !== TextString && onremove(vnode.children[i]);\n  }\n\n  vnode.props.onremove && vnode.props.onremove(vnode);\n}\n\nfunction sharedSetAttribute(prop: string, value: any, vnode: VnodeWithDom, oldVnode?: VnodeWithDom): void | boolean {\n  // It is a reserved prop\n  if (reservedProps[prop]) {\n    // If it is a directive name call the directive\n    if (directives[prop]) {\n      return directives[prop](vnode.props[prop], vnode, oldVnode);\n    }\n\n    return;\n  }\n\n  // It is not a reserved prop so we add it to the dom\n  if (typeof value === \"function\") {\n    let valyrianApp = current.app as MountedValyrianApp;\n    if (prop in valyrianApp.eventListenerNames === false) {\n      valyrianApp.eventListenerNames[prop] = true;\n      valyrianApp.container.addEventListener(prop.slice(2), valyrianApp.eventListener);\n    }\n    vnode.dom[`v-${prop}`] = value;\n    return;\n  }\n\n  if (prop in vnode.dom && vnode.isSVG === false) {\n    // eslint-disable-next-line eqeqeq\n    if (vnode.dom[prop] != value) {\n      vnode.dom[prop] = value;\n    }\n    return;\n  }\n\n  // Use set attribute\n  if (!oldVnode || oldVnode.props[prop] !== value) {\n    if (value === false) {\n      vnode.dom.removeAttribute(prop);\n    } else {\n      vnode.dom.setAttribute(prop, value);\n    }\n  }\n}\n\nexport function setAttribute(name: string, value: any, vnode: VnodeWithDom, oldVnode?: VnodeWithDom) {\n  vnode.props[name] = value;\n\n  sharedSetAttribute(name, value, vnode, oldVnode);\n}\n\nfunction setAttributes(vnode: VnodeWithDom, oldVnode?: VnodeWithDom) {\n  for (let prop in vnode.props) {\n    if (sharedSetAttribute(prop, vnode.props[prop], vnode, oldVnode) === false) {\n      return;\n    }\n  }\n\n  if (oldVnode) {\n    for (let prop in oldVnode.props) {\n      if (prop in vnode.props === false && typeof oldVnode.props[prop] !== \"function\" && prop in reservedProps === false) {\n        if (prop in oldVnode.dom && vnode.isSVG === false) {\n          oldVnode.dom[prop] = null;\n        } else {\n          oldVnode.dom.removeAttribute(prop);\n        }\n      }\n    }\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction patch(newVnode: VnodeWithDom, oldVnode: VnodeWithDom | IVnode = emptyVnode, valyrianApp: MountedValyrianApp) {\n  current.vnode = newVnode;\n  current.oldVnode = oldVnode === emptyVnode ? Und : (oldVnode as VnodeWithDom);\n  let newTree = newVnode.children;\n  let oldTree = oldVnode.children;\n\n  for (let i = 0; i < newTree.length; i++) {\n    let childVnode = newTree[i];\n    if (childVnode instanceof Vnode) {\n      if (childVnode.tag !== TextString) {\n        if (childVnode.tag === ComponentString) {\n          let component = childVnode.component as ValyrianComponent;\n          current.component = component;\n          let result = (\"view\" in component ? component.view : component).call(component, childVnode.props, ...childVnode.children);\n\n          newTree.splice(i--, 1, result);\n          continue;\n        }\n        childVnode.isSVG = newVnode.isSVG || childVnode.tag === \"svg\";\n      }\n    } else if (Array.isArray(childVnode)) {\n      newTree.splice(i--, 1, ...childVnode);\n    } else if (childVnode === null || childVnode === Und) {\n      newTree.splice(i--, 1);\n    } else {\n      newTree[i] = new Vnode(TextString, {}, []);\n      newTree[i].nodeValue = childVnode;\n    }\n  }\n\n  let oldTreeLength = oldTree.length;\n  let newTreeLength = newTree.length;\n\n  // If new tree is empty, remove all old nodes\n  if (newTreeLength === 0) {\n    for (let i = 0; i < oldTreeLength; i++) {\n      oldTree[i].tag !== TextString && onremove(oldTree[i]);\n    }\n\n    newVnode.dom.textContent = \"\";\n    return;\n  }\n\n  // If the tree is keyed list and is not first render and old tree is keyed list too\n  if (oldTreeLength && \"key\" in newTree[0].props && \"key\" in oldTree[0].props) {\n    let oldKeyedList: {[key: string]: number} = {};\n    for (let i = 0; i < oldTreeLength; i++) {\n      oldKeyedList[oldTree[i].props.key] = i;\n    }\n\n    let newKeyedList: {[key: string]: number} = {};\n    for (let i = 0; i < newTreeLength; i++) {\n      newKeyedList[newTree[i].props.key] = i;\n    }\n\n    for (let i = 0; i < newTreeLength; i++) {\n      let childVnode = newTree[i];\n      let oldChildVnode = oldTree[oldKeyedList[childVnode.props.key]];\n      let shouldPatch = true;\n\n      if (oldChildVnode) {\n        childVnode.dom = oldChildVnode.dom;\n        if (\"v-once\" in childVnode.props || (childVnode.props.shouldupdate && childVnode.props.shouldupdate(childVnode, oldChildVnode) === false)) {\n          // skip this patch\n          childVnode.children = oldChildVnode.children;\n          shouldPatch = false;\n        } else {\n          setAttributes(childVnode, oldChildVnode);\n          if (valyrianApp.isMounted) {\n            childVnode.props.onupdate && childVnode.props.onupdate(childVnode, oldChildVnode);\n          } else {\n            childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n          }\n        }\n      } else {\n        childVnode.dom = createDomElement(childVnode.tag, childVnode.isSVG);\n        setAttributes(childVnode);\n        childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n      }\n\n      if (newVnode.dom.childNodes[i] === Und) {\n        newVnode.dom.appendChild(childVnode.dom);\n      } else if (newVnode.dom.childNodes[i] !== childVnode.dom) {\n        oldTree[i] && newKeyedList[oldTree[i].props.key] === Und && onremove(oldTree[i]);\n        newVnode.dom.replaceChild(childVnode.dom, newVnode.dom.childNodes[i]);\n      }\n\n      shouldPatch && patch(childVnode, oldChildVnode, valyrianApp);\n    }\n\n    // For the rest of the children, we should remove them\n    for (let i = newTreeLength; i < oldTreeLength; i++) {\n      if (newKeyedList[oldTree[i].props.key] === Und) {\n        let oldChildVnode = oldTree[i];\n        onremove(oldChildVnode);\n        oldChildVnode.dom.parentNode && oldChildVnode.dom.parentNode.removeChild(oldChildVnode.dom);\n      }\n    }\n\n    return;\n  }\n\n  // If new tree and old tree have more than one child, we should update the dom\n  for (let i = 0; i < newTreeLength; i++) {\n    let newChildVnode = newTree[i];\n\n    // Old child exists\n    if (i < oldTreeLength) {\n      let oldChildVnode = oldTree[i];\n      // New child is a text node\n      if (newChildVnode.tag === TextString) {\n        // Old child is a text node\n        if (oldChildVnode.tag === TextString) {\n          newChildVnode.dom = oldChildVnode.dom;\n          // eslint-disable-next-line eqeqeq\n          if (newChildVnode.dom.nodeValue != newChildVnode.nodeValue) {\n            newChildVnode.dom.nodeValue = newChildVnode.nodeValue as string;\n          }\n          continue;\n        }\n\n        // Old child is a normal node\n        newChildVnode.dom = document.createTextNode(newChildVnode.nodeValue as string) as unknown as DomElement;\n        onremove(oldChildVnode);\n        newVnode.dom.replaceChild(newChildVnode.dom, oldChildVnode.dom);\n\n        continue;\n      }\n\n      // New child is a normal node\n      // Old child is the same type as new child\n      if (oldChildVnode.tag === newChildVnode.tag) {\n        newChildVnode.dom = oldChildVnode.dom;\n        // If we have a v-once directive or a shouldupdate method that returns false, we skip the update\n        if (newChildVnode.props[\"v-once\"] || (newChildVnode.props.shouldupdate && newChildVnode.props.shouldupdate(newChildVnode, oldChildVnode) === false)) {\n          newChildVnode.children = oldChildVnode.children;\n          continue;\n        }\n\n        // We update the dom element\n        setAttributes(newChildVnode, oldChildVnode);\n        if (valyrianApp.isMounted) {\n          newChildVnode.props.onupdate && newChildVnode.props.onupdate(newChildVnode, oldChildVnode);\n        } else {\n          newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n        }\n\n        patch(newChildVnode, oldChildVnode, valyrianApp);\n        continue;\n      }\n\n      // Old child is of a different type than new child\n      newChildVnode.dom = createDomElement(newChildVnode.tag, newChildVnode.isSVG);\n      setAttributes(newChildVnode);\n      oldChildVnode.tag !== TextString && onremove(oldChildVnode);\n      newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n      newVnode.dom.replaceChild(newChildVnode.dom, oldChildVnode.dom);\n      patch(newChildVnode, emptyVnode, valyrianApp);\n      continue;\n    }\n\n    // Old child does not exists\n    // New child is a text node\n    if (newChildVnode.tag === TextString) {\n      newChildVnode.dom = document.createTextNode(newChildVnode.nodeValue as string) as unknown as DomElement;\n      newVnode.dom.appendChild(newChildVnode.dom);\n      continue;\n    }\n\n    // New child is a normal node\n    newChildVnode.dom = createDomElement(newChildVnode.tag, newChildVnode.isSVG);\n    setAttributes(newChildVnode);\n    newVnode.dom.appendChild(newChildVnode.dom);\n    newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n    patch(newChildVnode, emptyVnode, valyrianApp);\n  }\n\n  // For the rest of the children, we should remove them\n  for (let i = newTreeLength; i < oldTreeLength; i++) {\n    let oldChildVnode = oldTree[i];\n    oldChildVnode.tag !== TextString && onremove(oldChildVnode);\n    oldChildVnode.dom.parentNode && oldChildVnode.dom.parentNode.removeChild(oldChildVnode.dom);\n  }\n}\n\n/*** Directives ***/\n\nexport function directive(name: string, directive: Directive) {\n  let fullName = `v-${name}`;\n  directives[fullName] = directive;\n  reservedProps[fullName] = true;\n}\n\nfunction hideDirective(test: boolean): Directive {\n  return (bool: boolean, vnode: IVnode, oldVnode?: IVnode) => {\n    let value = test ? bool : !bool;\n    if (value) {\n      let newdom = document.createTextNode(\"\");\n      if (oldVnode && oldVnode.dom && oldVnode.dom.parentNode) {\n        oldVnode.tag !== TextString && onremove(oldVnode);\n        oldVnode.dom.parentNode.replaceChild(newdom, oldVnode.dom);\n      }\n      vnode.tag = TextString;\n      vnode.children = [];\n      vnode.props = {};\n      vnode.dom = newdom as unknown as DomElement;\n      return false;\n    }\n  };\n}\n\nconst directives: Directives = {\n  \"v-if\": hideDirective(false),\n  \"v-unless\": hideDirective(true),\n  \"v-for\": (set: unknown[], vnode: VnodeWithDom) => {\n    vnode.children = set.map(vnode.children[0] as (value: unknown) => Function);\n  },\n  \"v-show\": (bool: boolean, vnode: VnodeWithDom) => {\n    (vnode.dom as unknown as { style: { display: string } }).style.display = bool ? \"\" : \"none\";\n  },\n  \"v-class\": (classes: { [x: string]: boolean }, vnode: VnodeWithDom) => {\n    for (let name in classes) {\n      (vnode.dom as DomElement).classList.toggle(name, classes[name]);\n    }\n  },\n  \"v-html\": (html: string, vnode: VnodeWithDom) => {\n    vnode.children = [trust(html)];\n  },\n  \"v-model\": ([model, property, event]: any[], vnode: VnodeWithDom, oldVnode?: VnodeWithDom) => {\n    let value;\n    let handler;\n    if (vnode.name === \"input\") {\n      event = event || \"oninput\";\n      switch (vnode.props.type) {\n        case \"checkbox\": {\n          if (Array.isArray(model[property])) {\n            handler = (e: Event) => {\n              let val = (e.target as DomElement & Record<string, any>).value;\n              let idx = model[property].indexOf(val);\n              if (idx === -1) {\n                model[property].push(val);\n              } else {\n                model[property].splice(idx, 1);\n              }\n            };\n            value = model[property].indexOf(vnode.dom.value) !== -1;\n          } else if (\"value\" in vnode.props) {\n            handler = () => {\n              if (model[property] === vnode.props.value) {\n                model[property] = null;\n              } else {\n                model[property] = vnode.props.value;\n              }\n            };\n            value = model[property] === vnode.props.value;\n          } else {\n            handler = () => (model[property] = !model[property]);\n            value = model[property];\n          }\n          setAttribute(\"checked\", value, vnode, oldVnode);\n          break;\n        }\n        case \"radio\": {\n          setAttribute(\"checked\", model[property] === vnode.dom.value, vnode, oldVnode);\n          break;\n        }\n        default: {\n          setAttribute(\"value\", model[property], vnode, oldVnode);\n        }\n      }\n    } else if (vnode.name === \"select\") {\n      event = event || \"onclick\";\n      if (vnode.props.multiple) {\n        handler = (e: Event & Record<string, any>) => {\n          let val = (e.target as DomElement & Record<string, any>).value;\n          if (e.ctrlKey) {\n            let idx = model[property].indexOf(val);\n            if (idx === -1) {\n              model[property].push(val);\n            } else {\n              model[property].splice(idx, 1);\n            }\n          } else {\n            model[property].splice(0, model[property].length);\n            model[property].push(val);\n          }\n        };\n        vnode.children.forEach((child: IVnode) => {\n          if (child.tag === \"option\") {\n            let value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = model[property].indexOf(value) !== -1;\n          }\n        });\n      } else {\n        vnode.children.forEach((child: IVnode) => {\n          if (child.tag === \"option\") {\n            let value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = value === model[property];\n          }\n        });\n      }\n    } else if (vnode.name === \"textarea\") {\n      event = event || \"oninput\";\n      vnode.children = [model[property]];\n    }\n\n    if (!vnode.props[event]) {\n      if (!handler) {\n        handler = (e: Event) => (model[property] = (e.target as DomElement & Record<string, any>).value);\n      }\n      setAttribute(event, handler, vnode, oldVnode);\n    }\n  }\n};\n\n/*** Plugins ***/\nconst plugins = new Map<Plugin, any>();\n\nexport function use(plugin: Plugin, options?: Record<string | number | symbol, any>): void | any {\n  if (plugins.has(plugin)) {\n    return plugins.get(plugin);\n  }\n\n  let result = plugin(v, options);\n  plugins.set(plugin, result);\n  return result;\n}\n\n/*** Hyperscript ***/\n\nexport const v: Valyrian = function v(tagOrComponent: string | ValyrianComponent, props: Props, ...children: Children): IVnode | VnodeComponent {\n  if (typeof tagOrComponent === \"string\") {\n    return new Vnode(tagOrComponent, props || {}, children);\n  }\n\n  const vnode = new Vnode(\"__component__\", props || {}, children);\n  vnode.component = tagOrComponent;\n  return vnode as VnodeComponent;\n};\n\nv.fragment = (props: Props, ...children: Children): Children => {\n  return children;\n};\n\n/*** V properties and methods ***/\n// This is intended to make the properties and methods available for plugins\nv.current = current;\n\nv.directives = directives;\n\nv.reservedProps = reservedProps;\n\nv.isVnode = isVnode;\nv.isComponent = isComponent;\nv.isVnodeComponent = isVnodeComponent;\n\nv.isNodeJs = isNodeJs;\nv.trust = trust;\n\nv.onCleanup = onCleanup;\nv.onUnmount = onUnmount;\nv.onMount = onMount;\nv.onUpdate = onUpdate;\n\nv.mount = mount;\nv.unmount = unmount;\nv.update = update;\n\nv.setAttribute = setAttribute;\nv.directive = directive;\nv.use = use;\n"]}