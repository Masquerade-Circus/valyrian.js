//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"sources":["../lib/index.ts"],"names":["ComponentString","TextString","isNodeJs","Boolean","process","versions","node","ValyrianSymbol","Symbol","Und","Vnode","tag","props","children","this","isComponent","component","isVnodeComponent","vnode","createDomElement","isSVG","document","createElementNS","createElement","domToVnode","dom","nodeType","v","tagName","toLowerCase","Array","from","childNodes","filter","child","map","text","nodeValue","String","forEach","call","attributes","prop","nodeName","trust","htmlString","div","innerHTML","trim","item","reservedProps","key","state","oncreate","onupdate","onremove","shouldupdate","current","callCleanup","valyrianApp","i","onCleanup","length","update","app","oldVnode","mainVnode","patch","isMounted","onMount","callMount","onUpdate","callUpdate","unmount","onUnmount","callUnmount","Reflect","deleteProperty","emptyVnode","sharedSetAttribute","value","directives","eventListenerNames","container","addEventListener","slice","eventListener","removeAttribute","setAttribute","name","setAttributes","newVnode","newTree","oldTree","childVnode","result","view","splice","isArray","oldTreeLength","newTreeLength","oldKeyedList","newKeyedList","oldChildVnode","shouldPatch","appendChild","replaceChild","parentNode","removeChild","newChildVnode","createTextNode","textContent","hideDirective","test","bool","newdom","set","style","display","classes","classList","toggle","html","model","property","event","handler","type","e","val","target","idx","indexOf","push","multiple","ctrlKey","value2","join","selected","plugins","Map","tagOrComponent","fragment","isVnode","object","callback","mount","vnodeComponent","appContainer","querySelectorAll","Error","defaultPrevented","directive","directive2","fullName","use","plugin","options","has","get"],"mappings":"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","sourcesContent":["/* eslint-disable no-use-before-define */\n/* eslint-disable sonarjs/cognitive-complexity */\n/*** Vnode ***/\n\nimport {\n  Children,\n  Current,\n  Directive,\n  Directives,\n  DomElement,\n  IVnode,\n  MountedValyrianApp,\n  Plugin,\n  Props,\n  ReservedProps,\n  Valyrian,\n  ValyrianApp,\n  ValyrianComponent,\n  VnodeComponent,\n  VnodeWithDom\n} from \"./interfaces\";\n\n/*** Constants ***/\nconst ComponentString = \"__component__\";\nconst TextString = \"#text\";\nconst isNodeJs = Boolean(typeof process !== \"undefined\" && process.versions && process.versions.node);\nconst ValyrianSymbol = Symbol(\"Valyrian\");\nconst Und = undefined;\n\n/*** Vnode ***/\n\nconst Vnode = function Vnode(this: IVnode, tag: string, props: Props, children: Children) {\n  this.props = props;\n  this.children = children;\n  this.tag = tag;\n} as unknown as IVnode;\n\nfunction isVnode(object?: unknown | IVnode): object is IVnode {\n  return object instanceof Vnode;\n}\n\nfunction isComponent(component?: unknown | ValyrianComponent): component is ValyrianComponent {\n  return typeof component === \"function\" || (typeof component === \"object\" && component !== null && \"view\" in component);\n}\n\nfunction isVnodeComponent(vnode?: unknown | VnodeComponent): vnode is VnodeComponent {\n  return vnode instanceof Vnode && vnode.tag === ComponentString;\n}\n\n/*** Util ***/\n\nfunction createDomElement(tag: string, isSVG: boolean = false) {\n  return isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag) : document.createElement(tag);\n}\n\nfunction domToVnode(dom: DomElement): void | VnodeWithDom {\n  if (dom.nodeType === 1 || dom.nodeType === 3) {\n    let vnode = v(\n      dom.tagName.toLowerCase(),\n      {},\n      ...Array.from(dom.childNodes)\n        .filter((child) => child.nodeType === 1 || child.nodeType === 3)\n        .map((child) => {\n          if (child.nodeType === 1) {\n            return domToVnode(child as DomElement);\n          }\n          let text = new Vnode(TextString, {}, []);\n          text.nodeValue = String(child.nodeValue);\n          text.dom = child as DomElement;\n          return text;\n        })\n    );\n    if (dom.nodeType === 1) {\n      [].forEach.call(dom.attributes, (prop: Attr) => (vnode.props[prop.nodeName] = prop.nodeValue));\n    }\n    vnode.dom = dom;\n    return vnode as VnodeWithDom;\n  }\n}\n\nconst trust = (htmlString: string): Children => {\n  let div = createDomElement(\"div\");\n  div.innerHTML = htmlString.trim();\n\n  return [].map.call(div.childNodes, (item) => domToVnode(item)) as Children;\n};\n\nconst reservedProps: ReservedProps = {\n  key: true,\n  state: true,\n  oncreate: true,\n  onupdate: true,\n  onremove: true,\n  shouldupdate: true,\n  \"v-once\": true,\n\n  // Built in directives\n  \"v-if\": true,\n  \"v-unless\": true,\n  \"v-for\": true,\n  \"v-show\": true,\n  \"v-class\": true,\n  \"v-html\": true\n};\n\n/*** Mount ***/\n\nconst current: Current = {};\n\nfunction onCleanup(callback: Function) {\n  if (current.app?.onCleanup.indexOf(callback) === -1) {\n    current.app?.onCleanup.push(callback);\n  }\n}\n\nfunction onUnmount(callback: Function) {\n  if (current.app?.onUnmount.indexOf(callback) === -1) {\n    current.app?.onUnmount.push(callback);\n  }\n}\n\nfunction onMount(callback: Function) {\n  if (current.app?.onMount.indexOf(callback) === -1) {\n    current.app?.onMount.push(callback);\n  }\n}\n\nfunction onUpdate(callback: Function) {\n  if (current.app?.onUpdate.indexOf(callback) === -1) {\n    current.app?.onUpdate.push(callback);\n  }\n}\n\n/*\n  * Mounts a component to the DOM\n  mount('#app', () => <div>Hello world</div>); // App is a Functional Component\n  mount('#app', { view: () => <div>Hello world</div> }); // App is a POJO component with a view method\n  mount('#app', classInstance); // App is a class instance with a view method\n  mount('#app', <App><div>Hello world</div></App>); // App is a Vnode component (Vnode with tag __component__)\n*/\n\nfunction mount(container: DomElement | string, component: ValyrianComponent | IVnode): void | string {\n  let appContainer = null;\n\n  if (isNodeJs) {\n    appContainer = typeof container === \"string\" ? createDomElement(container === \"svg\" ? \"svg\" : \"div\", container === \"svg\") : container;\n  } else {\n    appContainer = typeof container === \"string\" ? document.querySelectorAll(container)[0] : container;\n  }\n\n  if (!appContainer) {\n    throw new Error(\"Container not found\");\n  }\n\n  let vnodeComponent: VnodeComponent | IVnode;\n\n  if (isVnodeComponent(component)) {\n    vnodeComponent = component;\n  } else if (isComponent(component)) {\n    vnodeComponent = v(component, {});\n  } else {\n    throw new Error(\"Component must be a Valyrian Component or a Vnode component\");\n  }\n\n  if (component[ValyrianSymbol]) {\n    unmount(component);\n  } else {\n    component[ValyrianSymbol] = {\n      isMounted: false,\n      eventListenerNames: {},\n      onCleanup: [],\n      onMount: [],\n      onUpdate: [],\n      onUnmount: []\n    };\n    function eventListener(e: Event) {\n      let dom = e.target as DomElement & Record<string, any>;\n      let name = `v-on${e.type}`;\n      while (dom) {\n        if (dom[name]) {\n          dom[name](e, dom);\n          if (!e.defaultPrevented) {\n            update(component);\n          }\n          return;\n        }\n        dom = dom.parentNode as DomElement;\n      }\n    }\n    component[ValyrianSymbol].eventListener = eventListener;\n  }\n\n  component[ValyrianSymbol].component = vnodeComponent;\n  component[ValyrianSymbol].container = appContainer;\n  component[ValyrianSymbol].mainVnode = domToVnode(appContainer);\n\n  // update\n  return update(component);\n}\n\nfunction callCleanup(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onCleanup.length; i++) {\n    valyrianApp.onCleanup[i]();\n  }\n  valyrianApp.onCleanup = [];\n}\n\nfunction callUnmount(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onUnmount.length; i++) {\n    valyrianApp.onUnmount[i]();\n  }\n  valyrianApp.onUnmount = [];\n}\n\nfunction callMount(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onMount.length; i++) {\n    valyrianApp.onMount[i]();\n  }\n  valyrianApp.onMount = [];\n}\n\nfunction callUpdate(valyrianApp: ValyrianApp) {\n  for (let i = 0; i < valyrianApp.onUpdate.length; i++) {\n    valyrianApp.onUpdate[i]();\n  }\n  valyrianApp.onUpdate = [];\n}\n\nfunction update(component?: ValyrianComponent | IVnode): void | string {\n  if (component && component[ValyrianSymbol]) {\n    let valyrianApp = component[ValyrianSymbol];\n    current.app = valyrianApp;\n    valyrianApp.onCleanup.length && callCleanup(valyrianApp);\n    let oldVnode: VnodeWithDom | null = valyrianApp.mainVnode as VnodeWithDom;\n    valyrianApp.mainVnode = new Vnode(valyrianApp.mainVnode.tag, valyrianApp.mainVnode.props, [valyrianApp.component]) as VnodeWithDom;\n    valyrianApp.mainVnode.dom = oldVnode.dom;\n    patch(valyrianApp.mainVnode, oldVnode, valyrianApp);\n    oldVnode = null;\n    if (valyrianApp.isMounted === false) {\n      valyrianApp.onMount.length && callMount(valyrianApp);\n      valyrianApp.isMounted = true;\n    } else {\n      valyrianApp.onUpdate.length && callUpdate(valyrianApp);\n    }\n\n    if (isNodeJs) {\n      return valyrianApp.mainVnode.dom.innerHTML;\n    }\n  }\n}\n\nfunction unmount(component?: ValyrianComponent | IVnode): void | string {\n  if (!component || !component[ValyrianSymbol]) {\n    return;\n  }\n\n  let valyrianApp = component[ValyrianSymbol] as MountedValyrianApp;\n\n  if (valyrianApp.isMounted) {\n    valyrianApp.onCleanup.length && callCleanup(valyrianApp);\n    valyrianApp.onUnmount.length && callUnmount(valyrianApp);\n    let oldVnode: VnodeWithDom | null = valyrianApp.mainVnode as VnodeWithDom;\n    valyrianApp.mainVnode = new Vnode(valyrianApp.mainVnode.tag, valyrianApp.mainVnode.props, []) as VnodeWithDom;\n    valyrianApp.mainVnode.dom = oldVnode.dom;\n    valyrianApp.mainVnode.isSVG = oldVnode.isSVG;\n    patch(valyrianApp.mainVnode, oldVnode, valyrianApp);\n    oldVnode = null;\n\n    if (isNodeJs) {\n      return valyrianApp.mainVnode.dom.innerHTML;\n    }\n\n    (valyrianApp as any) = null;\n    Reflect.deleteProperty(component, ValyrianSymbol);\n  }\n}\n\nlet emptyVnode = new Vnode(\"__empty__\", {}, []);\n\nfunction onremove(vnode: IVnode) {\n  for (let i = 0; i < vnode.children.length; i++) {\n    vnode.children[i].tag !== TextString && onremove(vnode.children[i]);\n  }\n\n  vnode.props.onremove && vnode.props.onremove(vnode);\n}\n\nfunction sharedSetAttribute(prop: string, value: any, vnode: VnodeWithDom, oldVnode?: VnodeWithDom): void | boolean {\n  // It is a reserved prop\n  if (reservedProps[prop]) {\n    // If it is a directive name call the directive\n    if (directives[prop]) {\n      return directives[prop](vnode.props[prop], vnode, oldVnode);\n    }\n\n    return;\n  }\n\n  // It is not a reserved prop so we add it to the dom\n  if (typeof value === \"function\") {\n    let valyrianApp = current.app as MountedValyrianApp;\n    if (prop in valyrianApp.eventListenerNames === false) {\n      valyrianApp.eventListenerNames[prop] = true;\n      valyrianApp.container.addEventListener(prop.slice(2), valyrianApp.eventListener);\n    }\n    vnode.dom[`v-${prop}`] = value;\n    return;\n  }\n\n  if (prop in vnode.dom && vnode.isSVG === false) {\n    // eslint-disable-next-line eqeqeq\n    if (vnode.dom[prop] != value) {\n      vnode.dom[prop] = value;\n    }\n    return;\n  }\n\n  // Use set attribute\n  if (!oldVnode || oldVnode.props[prop] !== value) {\n    if (value === false) {\n      vnode.dom.removeAttribute(prop);\n    } else {\n      vnode.dom.setAttribute(prop, value);\n    }\n  }\n}\n\nfunction setAttribute(name: string, value: any, vnode: VnodeWithDom, oldVnode?: VnodeWithDom) {\n  vnode.props[name] = value;\n\n  sharedSetAttribute(name, value, vnode, oldVnode);\n}\n\nfunction setAttributes(vnode: VnodeWithDom, oldVnode?: VnodeWithDom) {\n  for (let prop in vnode.props) {\n    if (sharedSetAttribute(prop, vnode.props[prop], vnode, oldVnode) === false) {\n      return;\n    }\n  }\n\n  if (oldVnode) {\n    for (let prop in oldVnode.props) {\n      if (prop in vnode.props === false && typeof oldVnode.props[prop] !== \"function\" && prop in reservedProps === false) {\n        if (prop in oldVnode.dom && vnode.isSVG === false) {\n          oldVnode.dom[prop] = null;\n        } else {\n          oldVnode.dom.removeAttribute(prop);\n        }\n      }\n    }\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction patch(newVnode: VnodeWithDom, oldVnode: VnodeWithDom | IVnode = emptyVnode, valyrianApp: MountedValyrianApp) {\n  current.vnode = newVnode;\n  current.oldVnode = oldVnode === emptyVnode ? Und : (oldVnode as VnodeWithDom);\n  let newTree = newVnode.children;\n  let oldTree = oldVnode.children;\n\n  for (let i = 0; i < newTree.length; i++) {\n    let childVnode = newTree[i];\n    if (childVnode instanceof Vnode) {\n      if (childVnode.tag !== TextString) {\n        if (childVnode.tag === ComponentString) {\n          let component = childVnode.component as ValyrianComponent;\n          current.component = component;\n          let result = (\"view\" in component ? component.view : component).call(component, childVnode.props, ...childVnode.children);\n\n          newTree.splice(i--, 1, result);\n          continue;\n        }\n        childVnode.isSVG = newVnode.isSVG || childVnode.tag === \"svg\";\n      }\n    } else if (Array.isArray(childVnode)) {\n      newTree.splice(i--, 1, ...childVnode);\n    } else if (childVnode === null || childVnode === Und) {\n      newTree.splice(i--, 1);\n    } else {\n      newTree[i] = new Vnode(TextString, {}, []);\n      newTree[i].nodeValue = childVnode;\n    }\n  }\n\n  let oldTreeLength = oldTree.length;\n  let newTreeLength = newTree.length;\n\n  // If new tree is empty, remove all old nodes\n  if (newTreeLength === 0) {\n    for (let i = 0; i < oldTreeLength; i++) {\n      oldTree[i].tag !== TextString && onremove(oldTree[i]);\n    }\n\n    newVnode.dom.textContent = \"\";\n    return;\n  }\n\n  // If the tree is keyed list and is not first render and old tree is keyed list too\n  if (oldTreeLength && \"key\" in newTree[0].props && \"key\" in oldTree[0].props) {\n    let oldKeyedList: { [key: string]: number } = {};\n    for (let i = 0; i < oldTreeLength; i++) {\n      oldKeyedList[oldTree[i].props.key] = i;\n    }\n\n    let newKeyedList: { [key: string]: number } = {};\n    for (let i = 0; i < newTreeLength; i++) {\n      newKeyedList[newTree[i].props.key] = i;\n    }\n\n    for (let i = 0; i < newTreeLength; i++) {\n      let childVnode = newTree[i];\n      let oldChildVnode = oldTree[oldKeyedList[childVnode.props.key]];\n      let shouldPatch = true;\n\n      if (oldChildVnode) {\n        childVnode.dom = oldChildVnode.dom;\n        if (\"v-once\" in childVnode.props || (childVnode.props.shouldupdate && childVnode.props.shouldupdate(childVnode, oldChildVnode) === false)) {\n          // skip this patch\n          childVnode.children = oldChildVnode.children;\n          shouldPatch = false;\n        } else {\n          setAttributes(childVnode, oldChildVnode);\n          if (valyrianApp.isMounted) {\n            childVnode.props.onupdate && childVnode.props.onupdate(childVnode, oldChildVnode);\n          } else {\n            childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n          }\n        }\n      } else {\n        childVnode.dom = createDomElement(childVnode.tag, childVnode.isSVG);\n        setAttributes(childVnode);\n        childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n      }\n\n      if (newVnode.dom.childNodes[i] === Und) {\n        newVnode.dom.appendChild(childVnode.dom);\n      } else if (newVnode.dom.childNodes[i] !== childVnode.dom) {\n        oldTree[i] && newKeyedList[oldTree[i].props.key] === Und && onremove(oldTree[i]);\n        newVnode.dom.replaceChild(childVnode.dom, newVnode.dom.childNodes[i]);\n      }\n\n      shouldPatch && patch(childVnode, oldChildVnode, valyrianApp);\n    }\n\n    // For the rest of the children, we should remove them\n    for (let i = newTreeLength; i < oldTreeLength; i++) {\n      if (newKeyedList[oldTree[i].props.key] === Und) {\n        let oldChildVnode = oldTree[i];\n        onremove(oldChildVnode);\n        oldChildVnode.dom.parentNode && oldChildVnode.dom.parentNode.removeChild(oldChildVnode.dom);\n      }\n    }\n\n    return;\n  }\n\n  // If new tree and old tree have more than one child, we should update the dom\n  for (let i = 0; i < newTreeLength; i++) {\n    let newChildVnode = newTree[i];\n\n    // Old child exists\n    if (i < oldTreeLength) {\n      let oldChildVnode = oldTree[i];\n      // New child is a text node\n      if (newChildVnode.tag === TextString) {\n        // Old child is a text node\n        if (oldChildVnode.tag === TextString) {\n          newChildVnode.dom = oldChildVnode.dom;\n          // eslint-disable-next-line eqeqeq\n          if (newChildVnode.dom.nodeValue != newChildVnode.nodeValue) {\n            newChildVnode.dom.nodeValue = newChildVnode.nodeValue as string;\n          }\n          continue;\n        }\n\n        // Old child is a normal node\n        newChildVnode.dom = document.createTextNode(newChildVnode.nodeValue as string) as unknown as DomElement;\n        onremove(oldChildVnode);\n        newVnode.dom.replaceChild(newChildVnode.dom, oldChildVnode.dom);\n\n        continue;\n      }\n\n      // New child is a normal node\n      // Old child is the same type as new child\n      if (oldChildVnode.tag === newChildVnode.tag) {\n        newChildVnode.dom = oldChildVnode.dom;\n        // If we have a v-once directive or a shouldupdate method that returns false, we skip the update\n        if (newChildVnode.props[\"v-once\"] || (newChildVnode.props.shouldupdate && newChildVnode.props.shouldupdate(newChildVnode, oldChildVnode) === false)) {\n          newChildVnode.children = oldChildVnode.children;\n          continue;\n        }\n\n        // We update the dom element\n        setAttributes(newChildVnode, oldChildVnode);\n        if (valyrianApp.isMounted) {\n          newChildVnode.props.onupdate && newChildVnode.props.onupdate(newChildVnode, oldChildVnode);\n        } else {\n          newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n        }\n\n        patch(newChildVnode, oldChildVnode, valyrianApp);\n        continue;\n      }\n\n      // Old child is of a different type than new child\n      newChildVnode.dom = createDomElement(newChildVnode.tag, newChildVnode.isSVG);\n      setAttributes(newChildVnode);\n      oldChildVnode.tag !== TextString && onremove(oldChildVnode);\n      newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n      newVnode.dom.replaceChild(newChildVnode.dom, oldChildVnode.dom);\n      patch(newChildVnode, emptyVnode, valyrianApp);\n      continue;\n    }\n\n    // Old child does not exists\n    // New child is a text node\n    if (newChildVnode.tag === TextString) {\n      newChildVnode.dom = document.createTextNode(newChildVnode.nodeValue as string) as unknown as DomElement;\n      newVnode.dom.appendChild(newChildVnode.dom);\n      continue;\n    }\n\n    // New child is a normal node\n    newChildVnode.dom = createDomElement(newChildVnode.tag, newChildVnode.isSVG);\n    setAttributes(newChildVnode);\n    newVnode.dom.appendChild(newChildVnode.dom);\n    newChildVnode.props.oncreate && newChildVnode.props.oncreate(newChildVnode);\n    patch(newChildVnode, emptyVnode, valyrianApp);\n  }\n\n  // For the rest of the children, we should remove them\n  for (let i = newTreeLength; i < oldTreeLength; i++) {\n    let oldChildVnode = oldTree[i];\n    oldChildVnode.tag !== TextString && onremove(oldChildVnode);\n    oldChildVnode.dom.parentNode && oldChildVnode.dom.parentNode.removeChild(oldChildVnode.dom);\n  }\n}\n\n/*** Directives ***/\n\nfunction directive(name: string, directive: Directive) {\n  let fullName = `v-${name}`;\n  directives[fullName] = directive;\n  reservedProps[fullName] = true;\n}\n\nfunction hideDirective(test: boolean): Directive {\n  return (bool: boolean, vnode: IVnode, oldVnode?: IVnode) => {\n    let value = test ? bool : !bool;\n    if (value) {\n      let newdom = document.createTextNode(\"\");\n      if (oldVnode && oldVnode.dom && oldVnode.dom.parentNode) {\n        oldVnode.tag !== TextString && onremove(oldVnode);\n        oldVnode.dom.parentNode.replaceChild(newdom, oldVnode.dom);\n      }\n      vnode.tag = TextString;\n      vnode.children = [];\n      vnode.props = {};\n      vnode.dom = newdom as unknown as DomElement;\n      return false;\n    }\n  };\n}\n\nconst directives: Directives = {\n  \"v-if\": hideDirective(false),\n  \"v-unless\": hideDirective(true),\n  \"v-for\": (set: unknown[], vnode: VnodeWithDom) => {\n    vnode.children = set.map(vnode.children[0]);\n  },\n  \"v-show\": (bool: boolean, vnode: VnodeWithDom) => {\n    (vnode.dom as unknown as { style: { display: string } }).style.display = bool ? \"\" : \"none\";\n  },\n  \"v-class\": (classes: { [x: string]: boolean }, vnode: VnodeWithDom) => {\n    for (let name in classes) {\n      (vnode.dom as DomElement).classList.toggle(name, classes[name]);\n    }\n  },\n  \"v-html\": (html: string, vnode: VnodeWithDom) => {\n    vnode.children = [trust(html)];\n  },\n  \"v-model\": ([model, property, event]: any[], vnode: VnodeWithDom, oldVnode?: VnodeWithDom) => {\n    let value;\n    let handler;\n    if (vnode.name === \"input\") {\n      event = event || \"oninput\";\n      switch (vnode.props.type) {\n        case \"checkbox\": {\n          if (Array.isArray(model[property])) {\n            handler = (e: Event) => {\n              let val = (e.target as DomElement & Record<string, any>).value;\n              let idx = model[property].indexOf(val);\n              if (idx === -1) {\n                model[property].push(val);\n              } else {\n                model[property].splice(idx, 1);\n              }\n            };\n            value = model[property].indexOf(vnode.dom.value) !== -1;\n          } else if (\"value\" in vnode.props) {\n            handler = () => {\n              if (model[property] === vnode.props.value) {\n                model[property] = null;\n              } else {\n                model[property] = vnode.props.value;\n              }\n            };\n            value = model[property] === vnode.props.value;\n          } else {\n            handler = () => (model[property] = !model[property]);\n            value = model[property];\n          }\n          setAttribute(\"checked\", value, vnode, oldVnode);\n          break;\n        }\n        case \"radio\": {\n          setAttribute(\"checked\", model[property] === vnode.dom.value, vnode, oldVnode);\n          break;\n        }\n        default: {\n          setAttribute(\"value\", model[property], vnode, oldVnode);\n        }\n      }\n    } else if (vnode.name === \"select\") {\n      event = event || \"onclick\";\n      if (vnode.props.multiple) {\n        handler = (e: Event & Record<string, any>) => {\n          let val = (e.target as DomElement & Record<string, any>).value;\n          if (e.ctrlKey) {\n            let idx = model[property].indexOf(val);\n            if (idx === -1) {\n              model[property].push(val);\n            } else {\n              model[property].splice(idx, 1);\n            }\n          } else {\n            model[property].splice(0, model[property].length);\n            model[property].push(val);\n          }\n        };\n        vnode.children.forEach((child: IVnode) => {\n          if (child.tag === \"option\") {\n            let value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = model[property].indexOf(value) !== -1;\n          }\n        });\n      } else {\n        vnode.children.forEach((child: IVnode) => {\n          if (child.tag === \"option\") {\n            let value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = value === model[property];\n          }\n        });\n      }\n    } else if (vnode.name === \"textarea\") {\n      event = event || \"oninput\";\n      vnode.children = [model[property]];\n    }\n\n    if (!vnode.props[event]) {\n      if (!handler) {\n        handler = (e: Event) => (model[property] = (e.target as DomElement & Record<string, any>).value);\n      }\n      setAttribute(event, handler, vnode, oldVnode);\n    }\n  }\n};\n\n/*** Plugins ***/\nconst plugins = new Map<Plugin, any>();\n\nfunction use(plugin: Plugin, options?: Record<string | number | symbol, any>): void | any {\n  if (plugins.has(plugin)) {\n    return plugins.get(plugin);\n  }\n\n  let result = plugin(v, options);\n  plugins.set(plugin, result);\n  return result;\n}\n\n/*** Hyperscript ***/\n\nexport const v: Valyrian = function v(tagOrComponent: string | ValyrianComponent, props: Props, ...children: Children): IVnode | VnodeComponent {\n  if (typeof tagOrComponent === \"string\") {\n    return new Vnode(tagOrComponent, props || {}, children);\n  }\n\n  const vnode = new Vnode(\"__component__\", props || {}, children);\n  vnode.component = tagOrComponent;\n  return vnode as VnodeComponent;\n};\n\nv.fragment = (props: Props, ...children: Children): Children => {\n  return children;\n};\n\n/*** V properties and methods ***/\n// This is intended to make the properties and methods available for plugins\nv.current = current;\n\nv.directives = directives;\n\nv.reservedProps = reservedProps;\n\nv.isVnode = isVnode;\nv.isComponent = isComponent;\nv.isVnodeComponent = isVnodeComponent;\n\nv.isNodeJs = isNodeJs;\nv.trust = trust;\n\nv.onCleanup = onCleanup;\nv.onUnmount = onUnmount;\nv.onMount = onMount;\nv.onUpdate = onUpdate;\n\nv.mount = mount;\nv.unmount = unmount;\nv.update = update;\n\nv.setAttribute = setAttribute;\nv.directive = directive;\nv.use = use;\n"]}