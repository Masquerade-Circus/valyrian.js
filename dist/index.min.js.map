//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2xpYi9pbmRleC50cyJdLCJuYW1lcyI6WyJDb21wb25lbnRTdHJpbmciLCJUZXh0U3RyaW5nIiwiaXNOb2RlSnMiLCJCb29sZWFuIiwicHJvY2VzcyIsInZlcnNpb25zIiwibm9kZSIsIlZhbHlyaWFuU3ltYm9sIiwiU3ltYm9sIiwiVW5kIiwiVm5vZGUiLCJ0YWciLCJwcm9wcyIsImNoaWxkcmVuIiwidGhpcyIsImlzVm5vZGUiLCJvYmplY3QiLCJpc0NvbXBvbmVudCIsImNvbXBvbmVudCIsImlzVm5vZGVDb21wb25lbnQiLCJ2bm9kZSIsImNyZWF0ZURvbUVsZW1lbnQiLCJpc1NWRyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudE5TIiwiY3JlYXRlRWxlbWVudCIsImRvbVRvVm5vZGUiLCJkb20iLCJ2IiwidGFnTmFtZSIsInRvTG93ZXJDYXNlIiwiQXJyYXkiLCJmcm9tIiwiY2hpbGROb2RlcyIsImZpbHRlciIsImNoaWxkIiwibm9kZVR5cGUiLCJtYXAiLCJ0ZXh0Iiwibm9kZVZhbHVlIiwiU3RyaW5nIiwiZm9yRWFjaCIsImNhbGwiLCJhdHRyaWJ1dGVzIiwicHJvcCIsIm5vZGVOYW1lIiwidHJ1c3QiLCJodG1sU3RyaW5nIiwiZGl2IiwiaW5uZXJIVE1MIiwidHJpbSIsIml0ZW0iLCJyZXNlcnZlZFByb3BzIiwia2V5Iiwic3RhdGUiLCJvbmNyZWF0ZSIsIm9udXBkYXRlIiwib25yZW1vdmUiLCJzaG91bGR1cGRhdGUiLCJjdXJyZW50Iiwib25DbGVhbnVwIiwiY2FsbGJhY2siLCJhcHAiLCJpbmRleE9mIiwicHVzaCIsIm9uVW5tb3VudCIsIm9uTW91bnQiLCJvblVwZGF0ZSIsIm1vdW50IiwiY29udGFpbmVyIiwidm5vZGVDb21wb25lbnQiLCJhcHBDb250YWluZXIiLCJxdWVyeVNlbGVjdG9yQWxsIiwiRXJyb3IiLCJ1bm1vdW50IiwiZXZlbnRMaXN0ZW5lciIsImUiLCJ0YXJnZXQiLCJuYW1lIiwidHlwZSIsImRlZmF1bHRQcmV2ZW50ZWQiLCJ1cGRhdGUiLCJwYXJlbnROb2RlIiwiaXNNb3VudGVkIiwiZXZlbnRMaXN0ZW5lck5hbWVzIiwibWFpblZub2RlIiwiY2FsbENsZWFudXAiLCJ2YWx5cmlhbkFwcCIsImkiLCJsZW5ndGgiLCJvbGRWbm9kZSIsInBhdGNoIiwiY2FsbE1vdW50IiwiY2FsbFVwZGF0ZSIsImNhbGxVbm1vdW50IiwiUmVmbGVjdCIsImRlbGV0ZVByb3BlcnR5IiwiZW1wdHlWbm9kZSIsInNoYXJlZFNldEF0dHJpYnV0ZSIsInZhbHVlIiwiZGlyZWN0aXZlcyIsImFkZEV2ZW50TGlzdGVuZXIiLCJzbGljZSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZXMiLCJuZXdWbm9kZSIsIm5ld1RyZWUiLCJvbGRUcmVlIiwiY2hpbGRWbm9kZSIsInJlc3VsdCIsInZpZXciLCJzcGxpY2UiLCJpc0FycmF5Iiwib2xkVHJlZUxlbmd0aCIsIm5ld1RyZWVMZW5ndGgiLCJvbGRLZXllZExpc3QiLCJyZWR1Y2UiLCJhY2MiLCJuZXdLZXllZExpc3QiLCJvbGRDaGlsZFZub2RlIiwic2hvdWxkUGF0Y2giLCJhcHBlbmRDaGlsZCIsInJlcGxhY2VDaGlsZCIsInJlbW92ZUNoaWxkIiwibmV3Q2hpbGRWbm9kZSIsImNyZWF0ZVRleHROb2RlIiwidGV4dENvbnRlbnQiLCJkaXJlY3RpdmUiLCJkaXJlY3RpdmUyIiwiZnVsbE5hbWUiLCJoaWRlRGlyZWN0aXZlIiwidGVzdCIsImJvb2wiLCJuZXdkb20iLCJzZXQiLCJzdHlsZSIsImRpc3BsYXkiLCJjbGFzc2VzIiwiY2xhc3NMaXN0IiwidG9nZ2xlIiwiaHRtbCIsIm1vZGVsIiwicHJvcGVydHkiLCJldmVudCIsImhhbmRsZXIiLCJ2YWwiLCJpZHgiLCJtdWx0aXBsZSIsImN0cmxLZXkiLCJ2YWx1ZTIiLCJqb2luIiwic2VsZWN0ZWQiLCJwbHVnaW5zIiwiTWFwIiwidXNlIiwicGx1Z2luIiwib3B0aW9ucyIsImhhcyIsImdldCIsInRhZ09yQ29t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QUVDLE9BQTRDc0IsT0FFNUZLLEVBQWF3QyxFQUFPQyxFQUFTN0gsRUFBT3NFLE1BTXBDK0QsRUFBVSxJQUFJQyxJQUViLFNBQUFDLEVBQWFDLEVBQWdCQyxHQUNsQyxHQUFJSixFQUFRSyxJQUFJRixHQUNkLE9BQU9ILEVBQVFNLElBQUlILEdBR3JCLElBQUk5QyxFQUFTOEMsRUFBT2hJLEVBQUdpSSxHQUV2QixPQURBSixFQUFRbEIsSUFBSXFCLEVBQVE5QyxHQUNiQSxFQUtGLElBQU1sRixFQUFjLFNBQVdvSSxFQUE0Q3BKLEtBQWlCQyxHQUNqRyxHQUE4QixpQkFBbkJtSixFQUNULE9BQU8sSUFBSXRKLEVBQU1zSixFQUFnQnBKLEdBQVMsR0FBSUMsR0FHaEQsTUFBTU8sRUFBUSxJQUFJVixFQUFNLGdCQUFpQkUsR0FBUyxHQUFJQyxHQUV0RCxPQURBTyxFQUFNRixVQUFZOEksRUFDWDVJLEdBR1RRLEVBQUVxSSxTQUFXLENBQUNySixLQUFpQkMsSUFDdEJBLEVBS1RlLEVBQUUrQixRQUFVQSxFQUVaL0IsRUFBRXdFLFdBQWFBLEVBRWZ4RSxFQUFFd0IsY0FBZ0JBLEVBRWxCeEIsRUFBRWIsUUFBVUEsRUFDWmEsRUFBRVgsWUFBY0EsRUFDaEJXLEVBQUVULGlCQUFtQkEsRUFFckJTLEVBQUUxQixTQUFXQSxFQUNiMEIsRUFBRWtCLE1BQVFBLEVBRVZsQixFQUFFZ0MsVUFBWUEsRUFDZGhDLEVBQUVxQyxVQUFZQSxFQUNkckMsRUFBRXNDLFFBQVVBLEVBQ1p0QyxFQUFFdUMsU0FBV0EsRUFFYnZDLEVBQUV3QyxNQUFRQSxFQUNWeEMsRUFBRThDLFFBQVVBLEVBQ1o5QyxFQUFFcUQsT0FBU0EsRUFFWHJELEVBQUU0RSxhQUFlQSxFQUNqQjVFLEVBQUVvRyxVQUFZQSxFQUNkcEcsRUFBRStILElBQU1BIiwic291cmNlc0NvbnRlbnQiOlsiLyoqKiBWbm9kZSAqKiovXG5cbmltcG9ydCB7XG4gIENoaWxkcmVuLFxuICBDdXJyZW50LFxuICBEaXJlY3RpdmUsXG4gIERpcmVjdGl2ZXMsXG4gIERvbUVsZW1lbnQsXG4gIElWbm9kZSxcbiAgTW91bnRlZFZhbHlyaWFuQXBwLFxuICBQbHVnaW4sXG4gIFByb3BzLFxuICBSZXNlcnZlZFByb3BzLFxuICBWYWx5cmlhbixcbiAgVmFseXJpYW5BcHAsXG4gIFZhbHlyaWFuQ29tcG9uZW50LFxuICBWbm9kZUNvbXBvbmVudCxcbiAgVm5vZGVXaXRoRG9tXG59IGZyb20gXCIuL2ludGVyZmFjZXNcIjtcblxuLyoqKiBDb25zdGFudHMgKioqL1xuY29uc3QgQ29tcG9uZW50U3RyaW5nID0gXCJfX2NvbXBvbmVudF9fXCI7XG5jb25zdCBUZXh0U3RyaW5nID0gXCIjdGV4dFwiO1xuZXhwb3J0IGNvbnN0IGlzTm9kZUpzID0gQm9vbGVhbih0eXBlb2YgcHJvY2VzcyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBwcm9jZXNzLnZlcnNpb25zICYmIHByb2Nlc3MudmVyc2lvbnMubm9kZSk7XG5jb25zdCBWYWx5cmlhblN5bWJvbCA9IFN5bWJvbChcIlZhbHlyaWFuXCIpO1xuY29uc3QgVW5kID0gdW5kZWZpbmVkO1xuXG4vKioqIFZub2RlICoqKi9cblxuZXhwb3J0IGNvbnN0IFZub2RlID0gZnVuY3Rpb24gVm5vZGUodGhpczogSVZub2RlLCB0YWc6IHN0cmluZywgcHJvcHM6IFByb3BzLCBjaGlsZHJlbjogQ2hpbGRyZW4pIHtcbiAgdGhpcy5wcm9wcyA9IHByb3BzO1xuICB0aGlzLmNoaWxkcmVuID0gY2hpbGRyZW47XG4gIHRoaXMudGFnID0gdGFnO1xufSBhcyB1bmtub3duIGFzIElWbm9kZTtcblxuZXhwb3J0IGZ1bmN0aW9uIGlzVm5vZGUob2JqZWN0PzogdW5rbm93biB8IElWbm9kZSk6IG9iamVjdCBpcyBJVm5vZGUge1xuICByZXR1cm4gb2JqZWN0IGluc3RhbmNlb2YgVm5vZGU7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0NvbXBvbmVudChjb21wb25lbnQ/OiB1bmtub3duIHwgVmFseXJpYW5Db21wb25lbnQpOiBjb21wb25lbnQgaXMgVmFseXJpYW5Db21wb25lbnQge1xuICByZXR1cm4gdHlwZW9mIGNvbXBvbmVudCA9PT0gXCJmdW5jdGlvblwiIHx8ICh0eXBlb2YgY29tcG9uZW50ID09PSBcIm9iamVjdFwiICYmIGNvbXBvbmVudCAhPT0gbnVsbCAmJiBcInZpZXdcIiBpbiBjb21wb25lbnQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNWbm9kZUNvbXBvbmVudCh2bm9kZT86IHVua25vd24gfCBWbm9kZUNvbXBvbmVudCk6IHZub2RlIGlzIFZub2RlQ29tcG9uZW50IHtcbiAgcmV0dXJuIHZub2RlIGluc3RhbmNlb2YgVm5vZGUgJiYgdm5vZGUudGFnID09PSBDb21wb25lbnRTdHJpbmc7XG59XG5cbi8qKiogVXRpbCAqKiovXG5cbmZ1bmN0aW9uIGNyZWF0ZURvbUVsZW1lbnQodGFnOiBzdHJpbmcsIGlzU1ZHOiBib29sZWFuID0gZmFsc2UpIHtcbiAgcmV0dXJuIGlzU1ZHID8gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgdGFnKSA6IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodGFnKTtcbn1cblxuZnVuY3Rpb24gZG9tVG9Wbm9kZShkb206IERvbUVsZW1lbnQpOiBWbm9kZVdpdGhEb20ge1xuICBsZXQgdm5vZGUgPSB2KFxuICAgIGRvbS50YWdOYW1lLnRvTG93ZXJDYXNlKCksXG4gICAge30sXG4gICAgLi4uQXJyYXkuZnJvbShkb20uY2hpbGROb2RlcylcbiAgICAgIC5maWx0ZXIoKGNoaWxkKSA9PiAoY2hpbGQgYXMgRG9tRWxlbWVudCkubm9kZVR5cGUgPT09IDEgfHwgKGNoaWxkIGFzIERvbUVsZW1lbnQpLm5vZGVUeXBlID09PSAzKVxuICAgICAgLm1hcCgoY2hpbGQpID0+IHtcbiAgICAgICAgaWYgKChjaGlsZCBhcyBEb21FbGVtZW50KS5ub2RlVHlwZSA9PT0gMSkge1xuICAgICAgICAgIHJldHVybiBkb21Ub1Zub2RlKGNoaWxkIGFzIERvbUVsZW1lbnQpO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHRleHQgPSBuZXcgVm5vZGUoVGV4dFN0cmluZywge30sIFtdKTtcbiAgICAgICAgdGV4dC5ub2RlVmFsdWUgPSBTdHJpbmcoKGNoaWxkIGFzIERvbUVsZW1lbnQpLm5vZGVWYWx1ZSk7XG4gICAgICAgIHRleHQuZG9tID0gY2hpbGQgYXMgRG9tRWxlbWVudDtcbiAgICAgICAgcmV0dXJuIHRleHQ7XG4gICAgICB9KVxuICApO1xuICBbXS5mb3JFYWNoLmNhbGwoZG9tLmF0dHJpYnV0ZXMsIChwcm9wOiBBdHRyKSA9PiAodm5vZGUucHJvcHNbcHJvcC5ub2RlTmFtZV0gPSBwcm9wLm5vZGVWYWx1ZSkpO1xuICB2bm9kZS5kb20gPSBkb207XG4gIHJldHVybiB2bm9kZSBhcyBWbm9kZVdpdGhEb207XG59XG5cbmV4cG9ydCBjb25zdCB0cnVzdCA9IChodG1sU3RyaW5nOiBzdHJpbmcpOiBJVm5vZGVbXSA9PiB7XG4gIGxldCBkaXYgPSBjcmVhdGVEb21FbGVtZW50KFwiZGl2XCIpO1xuICBkaXYuaW5uZXJIVE1MID0gaHRtbFN0cmluZy50cmltKCk7XG5cbiAgcmV0dXJuIFtdLm1hcC5jYWxsKGRpdi5jaGlsZE5vZGVzLCAoaXRlbSkgPT4gZG9tVG9Wbm9kZShpdGVtKSkgYXMgSVZub2RlW107XG59O1xuXG5jb25zdCByZXNlcnZlZFByb3BzOiBSZXNlcnZlZFByb3BzID0ge1xuICBrZXk6IHRydWUsXG4gIHN0YXRlOiB0cnVlLFxuICBvbmNyZWF0ZTogdHJ1ZSxcbiAgb251cGRhdGU6IHRydWUsXG4gIG9ucmVtb3ZlOiB0cnVlLFxuICBzaG91bGR1cGRhdGU6IHRydWUsXG4gIFwidi1vbmNlXCI6IHRydWUsXG5cbiAgLy8gQnVpbHQgaW4gZGlyZWN0aXZlc1xuICBcInYtaWZcIjogdHJ1ZSxcbiAgXCJ2LXVubGVzc1wiOiB0cnVlLFxuICBcInYtZm9yXCI6IHRydWUsXG4gIFwidi1zaG93XCI6IHRydWUsXG4gIFwidi1jbGFzc1wiOiB0cnVlLFxuICBcInYtaHRtbFwiOiB0cnVlXG59O1xuXG4vKioqIE1vdW50ICoqKi9cblxuY29uc3QgY3VycmVudDogQ3VycmVudCA9IHt9O1xuXG5leHBvcnQgZnVuY3Rpb24gb25DbGVhbnVwKGNhbGxiYWNrOiBGdW5jdGlvbikge1xuICBpZiAoY3VycmVudC5hcHA/Lm9uQ2xlYW51cC5pbmRleE9mKGNhbGxiYWNrKSA9PT0gLTEpIHtcbiAgICBjdXJyZW50LmFwcD8ub25DbGVhbnVwLnB1c2goY2FsbGJhY2spO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvblVubW91bnQoY2FsbGJhY2s6IEZ1bmN0aW9uKSB7XG4gIGlmIChjdXJyZW50LmFwcD8ub25Vbm1vdW50LmluZGV4T2YoY2FsbGJhY2spID09PSAtMSkge1xuICAgIGN1cnJlbnQuYXBwPy5vblVubW91bnQucHVzaChjYWxsYmFjayk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uTW91bnQoY2FsbGJhY2s6IEZ1bmN0aW9uKSB7XG4gIGlmIChjdXJyZW50LmFwcD8ub25Nb3VudC5pbmRleE9mKGNhbGxiYWNrKSA9PT0gLTEpIHtcbiAgICBjdXJyZW50LmFwcD8ub25Nb3VudC5wdXNoKGNhbGxiYWNrKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gb25VcGRhdGUoY2FsbGJhY2s6IEZ1bmN0aW9uKSB7XG4gIGlmIChjdXJyZW50LmFwcD8ub25VcGRhdGUuaW5kZXhPZihjYWxsYmFjaykgPT09IC0xKSB7XG4gICAgY3VycmVudC5hcHA/Lm9uVXBkYXRlLnB1c2goY2FsbGJhY2spO1xuICB9XG59XG5cbi8qXG4gICogTW91bnRzIGEgY29tcG9uZW50IHRvIHRoZSBET01cbiAgbW91bnQoJyNhcHAnLCAoKSA9PiA8ZGl2PkhlbGxvIHdvcmxkPC9kaXY+KTsgLy8gQXBwIGlzIGEgRnVuY3Rpb25hbCBDb21wb25lbnRcbiAgbW91bnQoJyNhcHAnLCB7IHZpZXc6ICgpID0+IDxkaXY+SGVsbG8gd29ybGQ8L2Rpdj4gfSk7IC8vIEFwcCBpcyBhIFBPSk8gY29tcG9uZW50IHdpdGggYSB2aWV3IG1ldGhvZFxuICBtb3VudCgnI2FwcCcsIGNsYXNzSW5zdGFuY2UpOyAvLyBBcHAgaXMgYSBjbGFzcyBpbnN0YW5jZSB3aXRoIGEgdmlldyBtZXRob2RcbiAgbW91bnQoJyNhcHAnLCA8QXBwPjxkaXY+SGVsbG8gd29ybGQ8L2Rpdj48L0FwcD4pOyAvLyBBcHAgaXMgYSBWbm9kZSBjb21wb25lbnQgKFZub2RlIHdpdGggdGFnIF9fY29tcG9uZW50X18pXG4qL1xuXG5leHBvcnQgZnVuY3Rpb24gbW91bnQoY29udGFpbmVyOiBEb21FbGVtZW50IHwgc3RyaW5nLCBjb21wb25lbnQ6IFZhbHlyaWFuQ29tcG9uZW50IHwgSVZub2RlKTogdm9pZCB8IHN0cmluZyB7XG4gIGxldCBhcHBDb250YWluZXIgPSBudWxsO1xuXG4gIGlmIChpc05vZGVKcykge1xuICAgIGFwcENvbnRhaW5lciA9IHR5cGVvZiBjb250YWluZXIgPT09IFwic3RyaW5nXCIgPyBjcmVhdGVEb21FbGVtZW50KGNvbnRhaW5lciA9PT0gXCJzdmdcIiA/IFwic3ZnXCIgOiBcImRpdlwiLCBjb250YWluZXIgPT09IFwic3ZnXCIpIDogY29udGFpbmVyO1xuICB9IGVsc2Uge1xuICAgIGFwcENvbnRhaW5lciA9IHR5cGVvZiBjb250YWluZXIgPT09IFwic3RyaW5nXCIgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbnRhaW5lcilbMF0gOiBjb250YWluZXI7XG4gIH1cblxuICBpZiAoIWFwcENvbnRhaW5lcikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvbnRhaW5lciBub3QgZm91bmRcIik7XG4gIH1cblxuICBsZXQgdm5vZGVDb21wb25lbnQ6IFZub2RlQ29tcG9uZW50IHwgSVZub2RlO1xuXG4gIGlmIChpc1Zub2RlQ29tcG9uZW50KGNvbXBvbmVudCkpIHtcbiAgICB2bm9kZUNvbXBvbmVudCA9IGNvbXBvbmVudDtcbiAgfSBlbHNlIGlmIChpc0NvbXBvbmVudChjb21wb25lbnQpKSB7XG4gICAgdm5vZGVDb21wb25lbnQgPSB2KGNvbXBvbmVudCwge30pO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvbXBvbmVudCBtdXN0IGJlIGEgVmFseXJpYW4gQ29tcG9uZW50IG9yIGEgVm5vZGUgY29tcG9uZW50XCIpO1xuICB9XG5cbiAgaWYgKGNvbXBvbmVudFtWYWx5cmlhblN5bWJvbF0pIHtcbiAgICB1bm1vdW50KGNvbXBvbmVudCk7XG4gIH0gZWxzZSB7XG4gICAgY29tcG9uZW50W1ZhbHlyaWFuU3ltYm9sXSA9IHtcbiAgICAgIGlzTW91bnRlZDogZmFsc2UsXG4gICAgICBldmVudExpc3RlbmVyTmFtZXM6IHt9LFxuICAgICAgb25DbGVhbnVwOiBbXSxcbiAgICAgIG9uTW91bnQ6IFtdLFxuICAgICAgb25VcGRhdGU6IFtdLFxuICAgICAgb25Vbm1vdW50OiBbXVxuICAgIH07XG4gICAgZnVuY3Rpb24gZXZlbnRMaXN0ZW5lcihlOiBFdmVudCkge1xuICAgICAgbGV0IGRvbSA9IGUudGFyZ2V0IGFzIERvbUVsZW1lbnQgJiBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xuICAgICAgbGV0IG5hbWUgPSBgdi1vbiR7ZS50eXBlfWA7XG4gICAgICB3aGlsZSAoZG9tKSB7XG4gICAgICAgIGlmIChkb21bbmFtZV0pIHtcbiAgICAgICAgICBkb21bbmFtZV0oZSwgZG9tKTtcbiAgICAgICAgICBpZiAoIWUuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgICAgICAgdXBkYXRlKGNvbXBvbmVudCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBkb20gPSBkb20ucGFyZW50Tm9kZSBhcyBEb21FbGVtZW50O1xuICAgICAgfVxuICAgIH1cbiAgICBjb21wb25lbnRbVmFseXJpYW5TeW1ib2xdLmV2ZW50TGlzdGVuZXIgPSBldmVudExpc3RlbmVyO1xuICB9XG5cbiAgY29tcG9uZW50W1ZhbHlyaWFuU3ltYm9sXS5jb21wb25lbnQgPSB2bm9kZUNvbXBvbmVudDtcbiAgY29tcG9uZW50W1ZhbHlyaWFuU3ltYm9sXS5jb250YWluZXIgPSBhcHBDb250YWluZXI7XG4gIGNvbXBvbmVudFtWYWx5cmlhblN5bWJvbF0ubWFpblZub2RlID0gZG9tVG9Wbm9kZShhcHBDb250YWluZXIpO1xuXG4gIC8vIHVwZGF0ZVxuICByZXR1cm4gdXBkYXRlKGNvbXBvbmVudCk7XG59XG5cbmZ1bmN0aW9uIGNhbGxDbGVhbnVwKHZhbHlyaWFuQXBwOiBWYWx5cmlhbkFwcCkge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHlyaWFuQXBwLm9uQ2xlYW51cC5sZW5ndGg7IGkrKykge1xuICAgIHZhbHlyaWFuQXBwLm9uQ2xlYW51cFtpXSgpO1xuICB9XG4gIHZhbHlyaWFuQXBwLm9uQ2xlYW51cCA9IFtdO1xufVxuXG5mdW5jdGlvbiBjYWxsVW5tb3VudCh2YWx5cmlhbkFwcDogVmFseXJpYW5BcHApIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx5cmlhbkFwcC5vblVubW91bnQubGVuZ3RoOyBpKyspIHtcbiAgICB2YWx5cmlhbkFwcC5vblVubW91bnRbaV0oKTtcbiAgfVxuICB2YWx5cmlhbkFwcC5vblVubW91bnQgPSBbXTtcbn1cblxuZnVuY3Rpb24gY2FsbE1vdW50KHZhbHlyaWFuQXBwOiBWYWx5cmlhbkFwcCkge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHlyaWFuQXBwLm9uTW91bnQubGVuZ3RoOyBpKyspIHtcbiAgICB2YWx5cmlhbkFwcC5vbk1vdW50W2ldKCk7XG4gIH1cbiAgdmFseXJpYW5BcHAub25Nb3VudCA9IFtdO1xufVxuXG5mdW5jdGlvbiBjYWxsVXBkYXRlKHZhbHlyaWFuQXBwOiBWYWx5cmlhbkFwcCkge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHlyaWFuQXBwLm9uVXBkYXRlLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFseXJpYW5BcHAub25VcGRhdGVbaV0oKTtcbiAgfVxuICB2YWx5cmlhbkFwcC5vblVwZGF0ZSA9IFtdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlKGNvbXBvbmVudD86IFZhbHlyaWFuQ29tcG9uZW50IHwgSVZub2RlKTogdm9pZCB8IHN0cmluZyB7XG4gIGlmIChjb21wb25lbnQgJiYgY29tcG9uZW50W1ZhbHlyaWFuU3ltYm9sXSkge1xuICAgIGxldCB2YWx5cmlhbkFwcCA9IGNvbXBvbmVudFtWYWx5cmlhblN5bWJvbF07XG4gICAgY3VycmVudC5hcHAgPSB2YWx5cmlhbkFwcDtcbiAgICB2YWx5cmlhbkFwcC5vbkNsZWFudXAubGVuZ3RoICYmIGNhbGxDbGVhbnVwKHZhbHlyaWFuQXBwKTtcbiAgICBsZXQgb2xkVm5vZGU6IFZub2RlV2l0aERvbSB8IG51bGwgPSB2YWx5cmlhbkFwcC5tYWluVm5vZGUgYXMgVm5vZGVXaXRoRG9tO1xuICAgIHZhbHlyaWFuQXBwLm1haW5Wbm9kZSA9IG5ldyBWbm9kZSh2YWx5cmlhbkFwcC5tYWluVm5vZGUudGFnLCB2YWx5cmlhbkFwcC5tYWluVm5vZGUucHJvcHMsIFt2YWx5cmlhbkFwcC5jb21wb25lbnRdKSBhcyBWbm9kZVdpdGhEb207XG4gICAgdmFseXJpYW5BcHAubWFpblZub2RlLmRvbSA9IG9sZFZub2RlLmRvbTtcbiAgICBwYXRjaCh2YWx5cmlhbkFwcC5tYWluVm5vZGUsIG9sZFZub2RlLCB2YWx5cmlhbkFwcCk7XG4gICAgb2xkVm5vZGUgPSBudWxsO1xuICAgIGlmICh2YWx5cmlhbkFwcC5pc01vdW50ZWQgPT09IGZhbHNlKSB7XG4gICAgICB2YWx5cmlhbkFwcC5vbk1vdW50Lmxlbmd0aCAmJiBjYWxsTW91bnQodmFseXJpYW5BcHApO1xuICAgICAgdmFseXJpYW5BcHAuaXNNb3VudGVkID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFseXJpYW5BcHAub25VcGRhdGUubGVuZ3RoICYmIGNhbGxVcGRhdGUodmFseXJpYW5BcHApO1xuICAgIH1cblxuICAgIGlmIChpc05vZGVKcykge1xuICAgICAgcmV0dXJuIHZhbHlyaWFuQXBwLm1haW5Wbm9kZS5kb20uaW5uZXJIVE1MO1xuICAgIH1cbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdW5tb3VudChjb21wb25lbnQ/OiBWYWx5cmlhbkNvbXBvbmVudCB8IElWbm9kZSk6IHZvaWQgfCBzdHJpbmcge1xuICBpZiAoIWNvbXBvbmVudCB8fCAhY29tcG9uZW50W1ZhbHlyaWFuU3ltYm9sXSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGxldCB2YWx5cmlhbkFwcCA9IGNvbXBvbmVudFtWYWx5cmlhblN5bWJvbF0gYXMgTW91bnRlZFZhbHlyaWFuQXBwO1xuXG4gIGlmICh2YWx5cmlhbkFwcC5pc01vdW50ZWQpIHtcbiAgICB2YWx5cmlhbkFwcC5vbkNsZWFudXAubGVuZ3RoICYmIGNhbGxDbGVhbnVwKHZhbHlyaWFuQXBwKTtcbiAgICB2YWx5cmlhbkFwcC5vblVubW91bnQubGVuZ3RoICYmIGNhbGxVbm1vdW50KHZhbHlyaWFuQXBwKTtcbiAgICBsZXQgb2xkVm5vZGU6IFZub2RlV2l0aERvbSB8IG51bGwgPSB2YWx5cmlhbkFwcC5tYWluVm5vZGUgYXMgVm5vZGVXaXRoRG9tO1xuICAgIHZhbHlyaWFuQXBwLm1haW5Wbm9kZSA9IG5ldyBWbm9kZSh2YWx5cmlhbkFwcC5tYWluVm5vZGUudGFnLCB2YWx5cmlhbkFwcC5tYWluVm5vZGUucHJvcHMsIFtdKSBhcyBWbm9kZVdpdGhEb207XG4gICAgdmFseXJpYW5BcHAubWFpblZub2RlLmRvbSA9IG9sZFZub2RlLmRvbTtcbiAgICB2YWx5cmlhbkFwcC5tYWluVm5vZGUuaXNTVkcgPSBvbGRWbm9kZS5pc1NWRztcbiAgICBwYXRjaCh2YWx5cmlhbkFwcC5tYWluVm5vZGUsIG9sZFZub2RlLCB2YWx5cmlhbkFwcCk7XG4gICAgb2xkVm5vZGUgPSBudWxsO1xuXG4gICAgaWYgKGlzTm9kZUpzKSB7XG4gICAgICByZXR1cm4gdmFseXJpYW5BcHAubWFpblZub2RlLmRvbS5pbm5lckhUTUw7XG4gICAgfVxuXG4gICAgKHZhbHlyaWFuQXBwIGFzIGFueSkgPSBudWxsO1xuICAgIFJlZmxlY3QuZGVsZXRlUHJvcGVydHkoY29tcG9uZW50LCBWYWx5cmlhblN5bWJvbCk7XG4gIH1cbn1cblxubGV0IGVtcHR5Vm5vZGUgPSBuZXcgVm5vZGUoXCJfX2VtcHR5X19cIiwge30sIFtdKTtcblxuZnVuY3Rpb24gb25yZW1vdmUodm5vZGU6IElWbm9kZSkge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHZub2RlLmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgdm5vZGUuY2hpbGRyZW5baV0udGFnICE9PSBUZXh0U3RyaW5nICYmIG9ucmVtb3ZlKHZub2RlLmNoaWxkcmVuW2ldKTtcbiAgfVxuXG4gIHZub2RlLnByb3BzLm9ucmVtb3ZlICYmIHZub2RlLnByb3BzLm9ucmVtb3ZlKHZub2RlKTtcbn1cblxuZnVuY3Rpb24gc2hhcmVkU2V0QXR0cmlidXRlKHByb3A6IHN0cmluZywgdmFsdWU6IGFueSwgdm5vZGU6IFZub2RlV2l0aERvbSwgb2xkVm5vZGU/OiBWbm9kZVdpdGhEb20pOiB2b2lkIHwgYm9vbGVhbiB7XG4gIC8vIEl0IGlzIGEgcmVzZXJ2ZWQgcHJvcFxuICBpZiAocmVzZXJ2ZWRQcm9wc1twcm9wXSkge1xuICAgIC8vIElmIGl0IGlzIGEgZGlyZWN0aXZlIG5hbWUgY2FsbCB0aGUgZGlyZWN0aXZlXG4gICAgaWYgKGRpcmVjdGl2ZXNbcHJvcF0pIHtcbiAgICAgIHJldHVybiBkaXJlY3RpdmVzW3Byb3BdKHZub2RlLnByb3BzW3Byb3BdLCB2bm9kZSwgb2xkVm5vZGUpO1xuICAgIH1cblxuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIEl0IGlzIG5vdCBhIHJlc2VydmVkIHByb3Agc28gd2UgYWRkIGl0IHRvIHRoZSBkb21cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgbGV0IHZhbHlyaWFuQXBwID0gY3VycmVudC5hcHAgYXMgTW91bnRlZFZhbHlyaWFuQXBwO1xuICAgIGlmIChwcm9wIGluIHZhbHlyaWFuQXBwLmV2ZW50TGlzdGVuZXJOYW1lcyA9PT0gZmFsc2UpIHtcbiAgICAgIHZhbHlyaWFuQXBwLmV2ZW50TGlzdGVuZXJOYW1lc1twcm9wXSA9IHRydWU7XG4gICAgICB2YWx5cmlhbkFwcC5jb250YWluZXIuYWRkRXZlbnRMaXN0ZW5lcihwcm9wLnNsaWNlKDIpLCB2YWx5cmlhbkFwcC5ldmVudExpc3RlbmVyKTtcbiAgICB9XG4gICAgdm5vZGUuZG9tW2B2LSR7cHJvcH1gXSA9IHZhbHVlO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmIChwcm9wIGluIHZub2RlLmRvbSAmJiB2bm9kZS5pc1NWRyA9PT0gZmFsc2UpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG4gICAgaWYgKHZub2RlLmRvbVtwcm9wXSAhPSB2YWx1ZSkge1xuICAgICAgdm5vZGUuZG9tW3Byb3BdID0gdmFsdWU7XG4gICAgfVxuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIFVzZSBzZXQgYXR0cmlidXRlXG4gIGlmICghb2xkVm5vZGUgfHwgb2xkVm5vZGUucHJvcHNbcHJvcF0gIT09IHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlID09PSBmYWxzZSkge1xuICAgICAgdm5vZGUuZG9tLnJlbW92ZUF0dHJpYnV0ZShwcm9wKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdm5vZGUuZG9tLnNldEF0dHJpYnV0ZShwcm9wLCB2YWx1ZSk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZXRBdHRyaWJ1dGUobmFtZTogc3RyaW5nLCB2YWx1ZTogYW55LCB2bm9kZTogVm5vZGVXaXRoRG9tLCBvbGRWbm9kZT86IFZub2RlV2l0aERvbSkge1xuICB2bm9kZS5wcm9wc1tuYW1lXSA9IHZhbHVlO1xuXG4gIHNoYXJlZFNldEF0dHJpYnV0ZShuYW1lLCB2YWx1ZSwgdm5vZGUsIG9sZFZub2RlKTtcbn1cblxuZnVuY3Rpb24gc2V0QXR0cmlidXRlcyh2bm9kZTogVm5vZGVXaXRoRG9tLCBvbGRWbm9kZT86IFZub2RlV2l0aERvbSkge1xuICBmb3IgKGxldCBwcm9wIGluIHZub2RlLnByb3BzKSB7XG4gICAgaWYgKHNoYXJlZFNldEF0dHJpYnV0ZShwcm9wLCB2bm9kZS5wcm9wc1twcm9wXSwgdm5vZGUsIG9sZFZub2RlKSA9PT0gZmFsc2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gIH1cblxuICBpZiAob2xkVm5vZGUpIHtcbiAgICBmb3IgKGxldCBwcm9wIGluIG9sZFZub2RlLnByb3BzKSB7XG4gICAgICBpZiAocHJvcCBpbiB2bm9kZS5wcm9wcyA9PT0gZmFsc2UgJiYgdHlwZW9mIG9sZFZub2RlLnByb3BzW3Byb3BdICE9PSBcImZ1bmN0aW9uXCIgJiYgcHJvcCBpbiByZXNlcnZlZFByb3BzID09PSBmYWxzZSkge1xuICAgICAgICBpZiAocHJvcCBpbiBvbGRWbm9kZS5kb20gJiYgdm5vZGUuaXNTVkcgPT09IGZhbHNlKSB7XG4gICAgICAgICAgb2xkVm5vZGUuZG9tW3Byb3BdID0gbnVsbDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBvbGRWbm9kZS5kb20ucmVtb3ZlQXR0cmlidXRlKHByb3ApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBjb21wbGV4aXR5XG5mdW5jdGlvbiBwYXRjaChuZXdWbm9kZTogVm5vZGVXaXRoRG9tLCBvbGRWbm9kZTogVm5vZGVXaXRoRG9tIHwgSVZub2RlID0gZW1wdHlWbm9kZSwgdmFseXJpYW5BcHA6IE1vdW50ZWRWYWx5cmlhbkFwcCkge1xuICBjdXJyZW50LnZub2RlID0gbmV3Vm5vZGU7XG4gIGN1cnJlbnQub2xkVm5vZGUgPSBvbGRWbm9kZSA9PT0gZW1wdHlWbm9kZSA/IFVuZCA6IChvbGRWbm9kZSBhcyBWbm9kZVdpdGhEb20pO1xuICBsZXQgbmV3VHJlZSA9IG5ld1Zub2RlLmNoaWxkcmVuO1xuICBsZXQgb2xkVHJlZSA9IG9sZFZub2RlLmNoaWxkcmVuO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbmV3VHJlZS5sZW5ndGg7IGkrKykge1xuICAgIGxldCBjaGlsZFZub2RlID0gbmV3VHJlZVtpXTtcbiAgICBpZiAoY2hpbGRWbm9kZSBpbnN0YW5jZW9mIFZub2RlKSB7XG4gICAgICBpZiAoY2hpbGRWbm9kZS50YWcgIT09IFRleHRTdHJpbmcpIHtcbiAgICAgICAgaWYgKGNoaWxkVm5vZGUudGFnID09PSBDb21wb25lbnRTdHJpbmcpIHtcbiAgICAgICAgICBsZXQgY29tcG9uZW50ID0gY2hpbGRWbm9kZS5jb21wb25lbnQgYXMgVmFseXJpYW5Db21wb25lbnQ7XG4gICAgICAgICAgY3VycmVudC5jb21wb25lbnQgPSBjb21wb25lbnQ7XG4gICAgICAgICAgbGV0IHJlc3VsdCA9IChcInZpZXdcIiBpbiBjb21wb25lbnQgPyBjb21wb25lbnQudmlldyA6IGNvbXBvbmVudCkuY2FsbChjb21wb25lbnQsIGNoaWxkVm5vZGUucHJvcHMsIC4uLmNoaWxkVm5vZGUuY2hpbGRyZW4pO1xuXG4gICAgICAgICAgbmV3VHJlZS5zcGxpY2UoaS0tLCAxLCByZXN1bHQpO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNoaWxkVm5vZGUuaXNTVkcgPSBuZXdWbm9kZS5pc1NWRyB8fCBjaGlsZFZub2RlLnRhZyA9PT0gXCJzdmdcIjtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGRWbm9kZSkpIHtcbiAgICAgIG5ld1RyZWUuc3BsaWNlKGktLSwgMSwgLi4uY2hpbGRWbm9kZSk7XG4gICAgfSBlbHNlIGlmIChjaGlsZFZub2RlID09PSBudWxsIHx8IGNoaWxkVm5vZGUgPT09IFVuZCkge1xuICAgICAgbmV3VHJlZS5zcGxpY2UoaS0tLCAxKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbmV3VHJlZVtpXSA9IG5ldyBWbm9kZShUZXh0U3RyaW5nLCB7fSwgW10pO1xuICAgICAgbmV3VHJlZVtpXS5ub2RlVmFsdWUgPSBjaGlsZFZub2RlO1xuICAgIH1cbiAgfVxuXG4gIGxldCBvbGRUcmVlTGVuZ3RoID0gb2xkVHJlZS5sZW5ndGg7XG4gIGxldCBuZXdUcmVlTGVuZ3RoID0gbmV3VHJlZS5sZW5ndGg7XG5cbiAgLy8gSWYgbmV3IHRyZWUgaXMgZW1wdHksIHJlbW92ZSBhbGwgb2xkIG5vZGVzXG4gIGlmIChuZXdUcmVlTGVuZ3RoID09PSAwKSB7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvbGRUcmVlTGVuZ3RoOyBpKyspIHtcbiAgICAgIG9ucmVtb3ZlKG9sZFRyZWVbaV0pO1xuICAgIH1cblxuICAgIG5ld1Zub2RlLmRvbS50ZXh0Q29udGVudCA9IFwiXCI7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gSWYgdGhlIHRyZWUgaXMga2V5ZWQgbGlzdCBhbmQgaXMgbm90IGZpcnN0IHJlbmRlciBhbmQgb2xkIHRyZWUgaXMga2V5ZWQgbGlzdCB0b29cbiAgaWYgKG9sZFRyZWVMZW5ndGggJiYgXCJrZXlcIiBpbiBuZXdUcmVlWzBdLnByb3BzICYmIFwia2V5XCIgaW4gb2xkVHJlZVswXS5wcm9wcykge1xuICAgIGxldCBvbGRLZXllZExpc3QgPSBvbGRUcmVlLnJlZHVjZSgoYWNjLCB2bm9kZSwgaSkgPT4ge1xuICAgICAgYWNjW3Zub2RlLnByb3BzLmtleV0gPSBpO1xuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCB7fSBhcyB7IFtrZXk6IHN0cmluZ106IG51bWJlciB9KTtcbiAgICBsZXQgbmV3S2V5ZWRMaXN0ID0gbmV3VHJlZS5yZWR1Y2UoKGFjYywgdm5vZGUsIGkpID0+IHtcbiAgICAgIGFjY1t2bm9kZS5wcm9wcy5rZXldID0gaTtcbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30gYXMgeyBba2V5OiBzdHJpbmddOiBudW1iZXIgfSk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5ld1RyZWVMZW5ndGg7IGkrKykge1xuICAgICAgbGV0IGNoaWxkVm5vZGUgPSBuZXdUcmVlW2ldO1xuICAgICAgbGV0IG9sZENoaWxkVm5vZGUgPSBvbGRUcmVlW29sZEtleWVkTGlzdFtjaGlsZFZub2RlLnByb3BzLmtleV1dO1xuICAgICAgbGV0IHNob3VsZFBhdGNoID0gdHJ1ZTtcblxuICAgICAgaWYgKG9sZENoaWxkVm5vZGUpIHtcbiAgICAgICAgY2hpbGRWbm9kZS5kb20gPSBvbGRDaGlsZFZub2RlLmRvbTtcbiAgICAgICAgaWYgKFwidi1vbmNlXCIgaW4gY2hpbGRWbm9kZS5wcm9wcyB8fCAoY2hpbGRWbm9kZS5wcm9wcy5zaG91bGR1cGRhdGUgJiYgY2hpbGRWbm9kZS5wcm9wcy5zaG91bGR1cGRhdGUoY2hpbGRWbm9kZSwgb2xkQ2hpbGRWbm9kZSkgPT09IGZhbHNlKSkge1xuICAgICAgICAgIC8vIHNraXAgdGhpcyBwYXRjaFxuICAgICAgICAgIGNoaWxkVm5vZGUuY2hpbGRyZW4gPSBvbGRDaGlsZFZub2RlLmNoaWxkcmVuO1xuICAgICAgICAgIHNob3VsZFBhdGNoID0gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2V0QXR0cmlidXRlcyhjaGlsZFZub2RlLCBvbGRDaGlsZFZub2RlKTtcbiAgICAgICAgICBpZiAodmFseXJpYW5BcHAuaXNNb3VudGVkKSB7XG4gICAgICAgICAgICBjaGlsZFZub2RlLnByb3BzLm9udXBkYXRlICYmIGNoaWxkVm5vZGUucHJvcHMub251cGRhdGUoY2hpbGRWbm9kZSwgb2xkQ2hpbGRWbm9kZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNoaWxkVm5vZGUucHJvcHMub25jcmVhdGUgJiYgY2hpbGRWbm9kZS5wcm9wcy5vbmNyZWF0ZShjaGlsZFZub2RlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNoaWxkVm5vZGUuZG9tID0gY3JlYXRlRG9tRWxlbWVudChjaGlsZFZub2RlLnRhZywgY2hpbGRWbm9kZS5pc1NWRyk7XG4gICAgICAgIHNldEF0dHJpYnV0ZXMoY2hpbGRWbm9kZSk7XG4gICAgICAgIGNoaWxkVm5vZGUucHJvcHMub25jcmVhdGUgJiYgY2hpbGRWbm9kZS5wcm9wcy5vbmNyZWF0ZShjaGlsZFZub2RlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKG5ld1Zub2RlLmRvbS5jaGlsZE5vZGVzW2ldID09PSBVbmQpIHtcbiAgICAgICAgbmV3Vm5vZGUuZG9tLmFwcGVuZENoaWxkKGNoaWxkVm5vZGUuZG9tKTtcbiAgICAgIH0gZWxzZSBpZiAobmV3Vm5vZGUuZG9tLmNoaWxkTm9kZXNbaV0gIT09IGNoaWxkVm5vZGUuZG9tKSB7XG4gICAgICAgIG9sZFRyZWVbaV0gJiYgbmV3S2V5ZWRMaXN0W29sZFRyZWVbaV0ucHJvcHMua2V5XSA9PT0gVW5kICYmIG9ucmVtb3ZlKG9sZFRyZWVbaV0pO1xuICAgICAgICBuZXdWbm9kZS5kb20ucmVwbGFjZUNoaWxkKGNoaWxkVm5vZGUuZG9tLCBuZXdWbm9kZS5kb20uY2hpbGROb2Rlc1tpXSk7XG4gICAgICB9XG5cbiAgICAgIHNob3VsZFBhdGNoICYmIHBhdGNoKGNoaWxkVm5vZGUsIG9sZENoaWxkVm5vZGUsIHZhbHlyaWFuQXBwKTtcbiAgICB9XG5cbiAgICAvLyBGb3IgdGhlIHJlc3Qgb2YgdGhlIGNoaWxkcmVuLCB3ZSBzaG91bGQgcmVtb3ZlIHRoZW1cbiAgICBmb3IgKGxldCBpID0gbmV3VHJlZUxlbmd0aDsgaSA8IG9sZFRyZWVMZW5ndGg7IGkrKykge1xuICAgICAgaWYgKG5ld0tleWVkTGlzdFtvbGRUcmVlW2ldLnByb3BzLmtleV0gPT09IFVuZCkge1xuICAgICAgICBsZXQgb2xkQ2hpbGRWbm9kZSA9IG9sZFRyZWVbaV07XG4gICAgICAgIG9ucmVtb3ZlKG9sZENoaWxkVm5vZGUpO1xuICAgICAgICBvbGRDaGlsZFZub2RlLmRvbS5wYXJlbnROb2RlICYmIG9sZENoaWxkVm5vZGUuZG9tLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQob2xkQ2hpbGRWbm9kZS5kb20pO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIElmIG5ldyB0cmVlIGFuZCBvbGQgdHJlZSBoYXZlIG1vcmUgdGhhbiBvbmUgY2hpbGQsIHdlIHNob3VsZCB1cGRhdGUgdGhlIGRvbVxuICBmb3IgKGxldCBpID0gMDsgaSA8IG5ld1RyZWVMZW5ndGg7IGkrKykge1xuICAgIGxldCBuZXdDaGlsZFZub2RlID0gbmV3VHJlZVtpXTtcblxuICAgIC8vIE9sZCBjaGlsZCBleGlzdHNcbiAgICBpZiAoaSA8IG9sZFRyZWVMZW5ndGgpIHtcbiAgICAgIGxldCBvbGRDaGlsZFZub2RlID0gb2xkVHJlZVtpXTtcbiAgICAgIC8vIE5ldyBjaGlsZCBpcyBhIHRleHQgbm9kZVxuICAgICAgaWYgKG5ld0NoaWxkVm5vZGUudGFnID09PSBUZXh0U3RyaW5nKSB7XG4gICAgICAgIC8vIE9sZCBjaGlsZCBpcyBhIHRleHQgbm9kZVxuICAgICAgICBpZiAob2xkQ2hpbGRWbm9kZS50YWcgPT09IFRleHRTdHJpbmcpIHtcbiAgICAgICAgICBuZXdDaGlsZFZub2RlLmRvbSA9IG9sZENoaWxkVm5vZGUuZG9tO1xuICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcWVxZXFcbiAgICAgICAgICBpZiAobmV3Q2hpbGRWbm9kZS5kb20ubm9kZVZhbHVlICE9IG5ld0NoaWxkVm5vZGUubm9kZVZhbHVlKSB7XG4gICAgICAgICAgICBuZXdDaGlsZFZub2RlLmRvbS5ub2RlVmFsdWUgPSBuZXdDaGlsZFZub2RlLm5vZGVWYWx1ZSBhcyBzdHJpbmc7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gT2xkIGNoaWxkIGlzIGEgbm9ybWFsIG5vZGVcbiAgICAgICAgbmV3Q2hpbGRWbm9kZS5kb20gPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShuZXdDaGlsZFZub2RlLm5vZGVWYWx1ZSBhcyBzdHJpbmcpIGFzIHVua25vd24gYXMgRG9tRWxlbWVudDtcbiAgICAgICAgb25yZW1vdmUob2xkQ2hpbGRWbm9kZSk7XG4gICAgICAgIG5ld1Zub2RlLmRvbS5yZXBsYWNlQ2hpbGQobmV3Q2hpbGRWbm9kZS5kb20sIG9sZENoaWxkVm5vZGUuZG9tKTtcblxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgLy8gTmV3IGNoaWxkIGlzIGEgbm9ybWFsIG5vZGVcbiAgICAgIC8vIE9sZCBjaGlsZCBpcyB0aGUgc2FtZSB0eXBlIGFzIG5ldyBjaGlsZFxuICAgICAgaWYgKG9sZENoaWxkVm5vZGUudGFnID09PSBuZXdDaGlsZFZub2RlLnRhZykge1xuICAgICAgICBuZXdDaGlsZFZub2RlLmRvbSA9IG9sZENoaWxkVm5vZGUuZG9tO1xuICAgICAgICAvLyBJZiB3ZSBoYXZlIGEgdi1vbmNlIGRpcmVjdGl2ZSBvciBhIHNob3VsZHVwZGF0ZSBtZXRob2QgdGhhdCByZXR1cm5zIGZhbHNlLCB3ZSBza2lwIHRoZSB1cGRhdGVcbiAgICAgICAgaWYgKG5ld0NoaWxkVm5vZGUucHJvcHNbXCJ2LW9uY2VcIl0gfHwgKG5ld0NoaWxkVm5vZGUucHJvcHMuc2hvdWxkdXBkYXRlICYmIG5ld0NoaWxkVm5vZGUucHJvcHMuc2hvdWxkdXBkYXRlKG5ld0NoaWxkVm5vZGUsIG9sZENoaWxkVm5vZGUpID09PSBmYWxzZSkpIHtcbiAgICAgICAgICBuZXdDaGlsZFZub2RlLmNoaWxkcmVuID0gb2xkQ2hpbGRWbm9kZS5jaGlsZHJlbjtcbiAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFdlIHVwZGF0ZSB0aGUgZG9tIGVsZW1lbnRcbiAgICAgICAgc2V0QXR0cmlidXRlcyhuZXdDaGlsZFZub2RlLCBvbGRDaGlsZFZub2RlKTtcbiAgICAgICAgaWYgKHZhbHlyaWFuQXBwLmlzTW91bnRlZCkge1xuICAgICAgICAgIG5ld0NoaWxkVm5vZGUucHJvcHMub251cGRhdGUgJiYgbmV3Q2hpbGRWbm9kZS5wcm9wcy5vbnVwZGF0ZShuZXdDaGlsZFZub2RlLCBvbGRDaGlsZFZub2RlKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBuZXdDaGlsZFZub2RlLnByb3BzLm9uY3JlYXRlICYmIG5ld0NoaWxkVm5vZGUucHJvcHMub25jcmVhdGUobmV3Q2hpbGRWbm9kZSk7XG4gICAgICAgIH1cblxuICAgICAgICBwYXRjaChuZXdDaGlsZFZub2RlLCBvbGRDaGlsZFZub2RlLCB2YWx5cmlhbkFwcCk7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICAvLyBPbGQgY2hpbGQgaXMgb2YgYSBkaWZmZXJlbnQgdHlwZSB0aGFuIG5ldyBjaGlsZFxuICAgICAgbmV3Q2hpbGRWbm9kZS5kb20gPSBjcmVhdGVEb21FbGVtZW50KG5ld0NoaWxkVm5vZGUudGFnLCBuZXdDaGlsZFZub2RlLmlzU1ZHKTtcbiAgICAgIHNldEF0dHJpYnV0ZXMobmV3Q2hpbGRWbm9kZSk7XG4gICAgICBvbGRDaGlsZFZub2RlLnRhZyAhPT0gVGV4dFN0cmluZyAmJiBvbnJlbW92ZShvbGRDaGlsZFZub2RlKTtcbiAgICAgIG5ld0NoaWxkVm5vZGUucHJvcHMub25jcmVhdGUgJiYgbmV3Q2hpbGRWbm9kZS5wcm9wcy5vbmNyZWF0ZShuZXdDaGlsZFZub2RlKTtcbiAgICAgIG5ld1Zub2RlLmRvbS5yZXBsYWNlQ2hpbGQobmV3Q2hpbGRWbm9kZS5kb20sIG9sZENoaWxkVm5vZGUuZG9tKTtcbiAgICAgIHBhdGNoKG5ld0NoaWxkVm5vZGUsIGVtcHR5Vm5vZGUsIHZhbHlyaWFuQXBwKTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIC8vIE9sZCBjaGlsZCBkb2VzIG5vdCBleGlzdHNcbiAgICAvLyBOZXcgY2hpbGQgaXMgYSB0ZXh0IG5vZGVcbiAgICBpZiAobmV3Q2hpbGRWbm9kZS50YWcgPT09IFRleHRTdHJpbmcpIHtcbiAgICAgIG5ld0NoaWxkVm5vZGUuZG9tID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUobmV3Q2hpbGRWbm9kZS5ub2RlVmFsdWUgYXMgc3RyaW5nKSBhcyB1bmtub3duIGFzIERvbUVsZW1lbnQ7XG4gICAgICBuZXdWbm9kZS5kb20uYXBwZW5kQ2hpbGQobmV3Q2hpbGRWbm9kZS5kb20pO1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgLy8gTmV3IGNoaWxkIGlzIGEgbm9ybWFsIG5vZGVcbiAgICBuZXdDaGlsZFZub2RlLmRvbSA9IGNyZWF0ZURvbUVsZW1lbnQobmV3Q2hpbGRWbm9kZS50YWcsIG5ld0NoaWxkVm5vZGUuaXNTVkcpO1xuICAgIHNldEF0dHJpYnV0ZXMobmV3Q2hpbGRWbm9kZSk7XG4gICAgbmV3Vm5vZGUuZG9tLmFwcGVuZENoaWxkKG5ld0NoaWxkVm5vZGUuZG9tKTtcbiAgICBuZXdDaGlsZFZub2RlLnByb3BzLm9uY3JlYXRlICYmIG5ld0NoaWxkVm5vZGUucHJvcHMub25jcmVhdGUobmV3Q2hpbGRWbm9kZSk7XG4gICAgcGF0Y2gobmV3Q2hpbGRWbm9kZSwgZW1wdHlWbm9kZSwgdmFseXJpYW5BcHApO1xuICB9XG5cbiAgLy8gRm9yIHRoZSByZXN0IG9mIHRoZSBjaGlsZHJlbiwgd2Ugc2hvdWxkIHJlbW92ZSB0aGVtXG4gIGZvciAobGV0IGkgPSBuZXdUcmVlTGVuZ3RoOyBpIDwgb2xkVHJlZUxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IG9sZENoaWxkVm5vZGUgPSBvbGRUcmVlW2ldO1xuICAgIG9sZENoaWxkVm5vZGUudGFnICE9PSBUZXh0U3RyaW5nICYmIG9ucmVtb3ZlKG9sZENoaWxkVm5vZGUpO1xuICAgIG9sZENoaWxkVm5vZGUuZG9tLnBhcmVudE5vZGUgJiYgb2xkQ2hpbGRWbm9kZS5kb20ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvbGRDaGlsZFZub2RlLmRvbSk7XG4gIH1cbn1cblxuLyoqKiBEaXJlY3RpdmVzICoqKi9cblxuZXhwb3J0IGZ1bmN0aW9uIGRpcmVjdGl2ZShuYW1lOiBzdHJpbmcsIGRpcmVjdGl2ZTogRGlyZWN0aXZlKSB7XG4gIGxldCBmdWxsTmFtZSA9IGB2LSR7bmFtZX1gO1xuICBkaXJlY3RpdmVzW2Z1bGxOYW1lXSA9IGRpcmVjdGl2ZTtcbiAgcmVzZXJ2ZWRQcm9wc1tmdWxsTmFtZV0gPSB0cnVlO1xufVxuXG5mdW5jdGlvbiBoaWRlRGlyZWN0aXZlKHRlc3Q6IGJvb2xlYW4pOiBEaXJlY3RpdmUge1xuICByZXR1cm4gKGJvb2w6IGJvb2xlYW4sIHZub2RlOiBJVm5vZGUsIG9sZFZub2RlPzogSVZub2RlKSA9PiB7XG4gICAgbGV0IHZhbHVlID0gdGVzdCA/IGJvb2wgOiAhYm9vbDtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIGxldCBuZXdkb20gPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtcbiAgICAgIGlmIChvbGRWbm9kZSAmJiBvbGRWbm9kZS5kb20gJiYgb2xkVm5vZGUuZG9tLnBhcmVudE5vZGUpIHtcbiAgICAgICAgb2xkVm5vZGUudGFnICE9PSBUZXh0U3RyaW5nICYmIG9ucmVtb3ZlKG9sZFZub2RlKTtcbiAgICAgICAgb2xkVm5vZGUuZG9tLnBhcmVudE5vZGUucmVwbGFjZUNoaWxkKG5ld2RvbSwgb2xkVm5vZGUuZG9tKTtcbiAgICAgIH1cbiAgICAgIHZub2RlLnRhZyA9IFRleHRTdHJpbmc7XG4gICAgICB2bm9kZS5jaGlsZHJlbiA9IFtdO1xuICAgICAgdm5vZGUucHJvcHMgPSB7fTtcbiAgICAgIHZub2RlLmRvbSA9IG5ld2RvbSBhcyB1bmtub3duIGFzIERvbUVsZW1lbnQ7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9O1xufVxuXG5jb25zdCBkaXJlY3RpdmVzOiBEaXJlY3RpdmVzID0ge1xuICBcInYtaWZcIjogaGlkZURpcmVjdGl2ZShmYWxzZSksXG4gIFwidi11bmxlc3NcIjogaGlkZURpcmVjdGl2ZSh0cnVlKSxcbiAgXCJ2LWZvclwiOiAoc2V0OiB1bmtub3duW10sIHZub2RlOiBWbm9kZVdpdGhEb20pID0+IHtcbiAgICB2bm9kZS5jaGlsZHJlbiA9IHNldC5tYXAodm5vZGUuY2hpbGRyZW5bMF0gYXMgKHZhbHVlOiB1bmtub3duKSA9PiBGdW5jdGlvbik7XG4gIH0sXG4gIFwidi1zaG93XCI6IChib29sOiBib29sZWFuLCB2bm9kZTogVm5vZGVXaXRoRG9tKSA9PiB7XG4gICAgKHZub2RlLmRvbSBhcyB1bmtub3duIGFzIHsgc3R5bGU6IHsgZGlzcGxheTogc3RyaW5nIH0gfSkuc3R5bGUuZGlzcGxheSA9IGJvb2wgPyBcIlwiIDogXCJub25lXCI7XG4gIH0sXG4gIFwidi1jbGFzc1wiOiAoY2xhc3NlczogeyBbeDogc3RyaW5nXTogYm9vbGVhbiB9LCB2bm9kZTogVm5vZGVXaXRoRG9tKSA9PiB7XG4gICAgZm9yIChsZXQgbmFtZSBpbiBjbGFzc2VzKSB7XG4gICAgICAodm5vZGUuZG9tIGFzIERvbUVsZW1lbnQpLmNsYXNzTGlzdC50b2dnbGUobmFtZSwgY2xhc3Nlc1tuYW1lXSk7XG4gICAgfVxuICB9LFxuICBcInYtaHRtbFwiOiAoaHRtbDogc3RyaW5nLCB2bm9kZTogVm5vZGVXaXRoRG9tKSA9PiB7XG4gICAgdm5vZGUuY2hpbGRyZW4gPSBbdHJ1c3QoaHRtbCldO1xuICB9LFxuICBcInYtbW9kZWxcIjogKFttb2RlbCwgcHJvcGVydHksIGV2ZW50XTogYW55W10sIHZub2RlOiBWbm9kZVdpdGhEb20sIG9sZFZub2RlPzogVm5vZGVXaXRoRG9tKSA9PiB7XG4gICAgbGV0IHZhbHVlO1xuICAgIGxldCBoYW5kbGVyO1xuICAgIGlmICh2bm9kZS5uYW1lID09PSBcImlucHV0XCIpIHtcbiAgICAgIGV2ZW50ID0gZXZlbnQgfHwgXCJvbmlucHV0XCI7XG4gICAgICBzd2l0Y2ggKHZub2RlLnByb3BzLnR5cGUpIHtcbiAgICAgICAgY2FzZSBcImNoZWNrYm94XCI6IHtcbiAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShtb2RlbFtwcm9wZXJ0eV0pKSB7XG4gICAgICAgICAgICBoYW5kbGVyID0gKGU6IEV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgIGxldCB2YWwgPSAoZS50YXJnZXQgYXMgRG9tRWxlbWVudCAmIFJlY29yZDxzdHJpbmcsIGFueT4pLnZhbHVlO1xuICAgICAgICAgICAgICBsZXQgaWR4ID0gbW9kZWxbcHJvcGVydHldLmluZGV4T2YodmFsKTtcbiAgICAgICAgICAgICAgaWYgKGlkeCA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICBtb2RlbFtwcm9wZXJ0eV0ucHVzaCh2YWwpO1xuICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1vZGVsW3Byb3BlcnR5XS5zcGxpY2UoaWR4LCAxKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHZhbHVlID0gbW9kZWxbcHJvcGVydHldLmluZGV4T2Yodm5vZGUuZG9tLnZhbHVlKSAhPT0gLTE7XG4gICAgICAgICAgfSBlbHNlIGlmIChcInZhbHVlXCIgaW4gdm5vZGUucHJvcHMpIHtcbiAgICAgICAgICAgIGhhbmRsZXIgPSAoKSA9PiB7XG4gICAgICAgICAgICAgIGlmIChtb2RlbFtwcm9wZXJ0eV0gPT09IHZub2RlLnByb3BzLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgbW9kZWxbcHJvcGVydHldID0gbnVsbDtcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBtb2RlbFtwcm9wZXJ0eV0gPSB2bm9kZS5wcm9wcy52YWx1ZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHZhbHVlID0gbW9kZWxbcHJvcGVydHldID09PSB2bm9kZS5wcm9wcy52YWx1ZTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaGFuZGxlciA9ICgpID0+IChtb2RlbFtwcm9wZXJ0eV0gPSAhbW9kZWxbcHJvcGVydHldKTtcbiAgICAgICAgICAgIHZhbHVlID0gbW9kZWxbcHJvcGVydHldO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzZXRBdHRyaWJ1dGUoXCJjaGVja2VkXCIsIHZhbHVlLCB2bm9kZSwgb2xkVm5vZGUpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCJyYWRpb1wiOiB7XG4gICAgICAgICAgc2V0QXR0cmlidXRlKFwiY2hlY2tlZFwiLCBtb2RlbFtwcm9wZXJ0eV0gPT09IHZub2RlLmRvbS52YWx1ZSwgdm5vZGUsIG9sZFZub2RlKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgbW9kZWxbcHJvcGVydHldLCB2bm9kZSwgb2xkVm5vZGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh2bm9kZS5uYW1lID09PSBcInNlbGVjdFwiKSB7XG4gICAgICBldmVudCA9IGV2ZW50IHx8IFwib25jbGlja1wiO1xuICAgICAgaWYgKHZub2RlLnByb3BzLm11bHRpcGxlKSB7XG4gICAgICAgIGhhbmRsZXIgPSAoZTogRXZlbnQgJiBSZWNvcmQ8c3RyaW5nLCBhbnk+KSA9PiB7XG4gICAgICAgICAgbGV0IHZhbCA9IChlLnRhcmdldCBhcyBEb21FbGVtZW50ICYgUmVjb3JkPHN0cmluZywgYW55PikudmFsdWU7XG4gICAgICAgICAgaWYgKGUuY3RybEtleSkge1xuICAgICAgICAgICAgbGV0IGlkeCA9IG1vZGVsW3Byb3BlcnR5XS5pbmRleE9mKHZhbCk7XG4gICAgICAgICAgICBpZiAoaWR4ID09PSAtMSkge1xuICAgICAgICAgICAgICBtb2RlbFtwcm9wZXJ0eV0ucHVzaCh2YWwpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgbW9kZWxbcHJvcGVydHldLnNwbGljZShpZHgsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBtb2RlbFtwcm9wZXJ0eV0uc3BsaWNlKDAsIG1vZGVsW3Byb3BlcnR5XS5sZW5ndGgpO1xuICAgICAgICAgICAgbW9kZWxbcHJvcGVydHldLnB1c2godmFsKTtcbiAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHZub2RlLmNoaWxkcmVuLmZvckVhY2goKGNoaWxkOiBJVm5vZGUpID0+IHtcbiAgICAgICAgICBpZiAoY2hpbGQudGFnID09PSBcIm9wdGlvblwiKSB7XG4gICAgICAgICAgICBsZXQgdmFsdWUgPSBcInZhbHVlXCIgaW4gY2hpbGQucHJvcHMgPyBjaGlsZC5wcm9wcy52YWx1ZSA6IGNoaWxkLmNoaWxkcmVuLmpvaW4oXCJcIikudHJpbSgpO1xuICAgICAgICAgICAgY2hpbGQucHJvcHMuc2VsZWN0ZWQgPSBtb2RlbFtwcm9wZXJ0eV0uaW5kZXhPZih2YWx1ZSkgIT09IC0xO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2bm9kZS5jaGlsZHJlbi5mb3JFYWNoKChjaGlsZDogSVZub2RlKSA9PiB7XG4gICAgICAgICAgaWYgKGNoaWxkLnRhZyA9PT0gXCJvcHRpb25cIikge1xuICAgICAgICAgICAgbGV0IHZhbHVlID0gXCJ2YWx1ZVwiIGluIGNoaWxkLnByb3BzID8gY2hpbGQucHJvcHMudmFsdWUgOiBjaGlsZC5jaGlsZHJlbi5qb2luKFwiXCIpLnRyaW0oKTtcbiAgICAgICAgICAgIGNoaWxkLnByb3BzLnNlbGVjdGVkID0gdmFsdWUgPT09IG1vZGVsW3Byb3BlcnR5XTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodm5vZGUubmFtZSA9PT0gXCJ0ZXh0YXJlYVwiKSB7XG4gICAgICBldmVudCA9IGV2ZW50IHx8IFwib25pbnB1dFwiO1xuICAgICAgdm5vZGUuY2hpbGRyZW4gPSBbbW9kZWxbcHJvcGVydHldXTtcbiAgICB9XG5cbiAgICBpZiAoIXZub2RlLnByb3BzW2V2ZW50XSkge1xuICAgICAgaWYgKCFoYW5kbGVyKSB7XG4gICAgICAgIGhhbmRsZXIgPSAoZTogRXZlbnQpID0+IChtb2RlbFtwcm9wZXJ0eV0gPSAoZS50YXJnZXQgYXMgRG9tRWxlbWVudCAmIFJlY29yZDxzdHJpbmcsIGFueT4pLnZhbHVlKTtcbiAgICAgIH1cbiAgICAgIHNldEF0dHJpYnV0ZShldmVudCwgaGFuZGxlciwgdm5vZGUsIG9sZFZub2RlKTtcbiAgICB9XG4gIH1cbn07XG5cbi8qKiogUGx1Z2lucyAqKiovXG5jb25zdCBwbHVnaW5zID0gbmV3IE1hcDxQbHVnaW4sIGFueT4oKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZShwbHVnaW46IFBsdWdpbiwgb3B0aW9ucz86IFJlY29yZDxzdHJpbmcgfCBudW1iZXIgfCBzeW1ib2wsIGFueT4pOiB2b2lkIHwgYW55IHtcbiAgaWYgKHBsdWdpbnMuaGFzKHBsdWdpbikpIHtcbiAgICByZXR1cm4gcGx1Z2lucy5nZXQocGx1Z2luKTtcbiAgfVxuXG4gIGxldCByZXN1bHQgPSBwbHVnaW4odiwgb3B0aW9ucyk7XG4gIHBsdWdpbnMuc2V0KHBsdWdpbiwgcmVzdWx0KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqKiBIeXBlcnNjcmlwdCAqKiovXG5cbmV4cG9ydCBjb25zdCB2OiBWYWx5cmlhbiA9IGZ1bmN0aW9uIHYodGFnT3JDb21wb25lbnQ6IHN0cmluZyB8IFZhbHlyaWFuQ29tcG9uZW50LCBwcm9wczogUHJvcHMsIC4uLmNoaWxkcmVuOiBDaGlsZHJlbik6IElWbm9kZSB8IFZub2RlQ29tcG9uZW50IHtcbiAgaWYgKHR5cGVvZiB0YWdPckNvbXBvbmVudCA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBuZXcgVm5vZGUodGFnT3JDb21wb25lbnQsIHByb3BzIHx8IHt9LCBjaGlsZHJlbik7XG4gIH1cblxuICBjb25zdCB2bm9kZSA9IG5ldyBWbm9kZShcIl9fY29tcG9uZW50X19cIiwgcHJvcHMgfHwge30sIGNoaWxkcmVuKTtcbiAgdm5vZGUuY29tcG9uZW50ID0gdGFnT3JDb21wb25lbnQ7XG4gIHJldHVybiB2bm9kZSBhcyBWbm9kZUNvbXBvbmVudDtcbn07XG5cbnYuZnJhZ21lbnQgPSAocHJvcHM6IFByb3BzLCAuLi5jaGlsZHJlbjogQ2hpbGRyZW4pOiBDaGlsZHJlbiA9PiB7XG4gIHJldHVybiBjaGlsZHJlbjtcbn07XG5cbi8qKiogViBwcm9wZXJ0aWVzIGFuZCBtZXRob2RzICoqKi9cbi8vIFRoaXMgaXMgaW50ZW5kZWQgdG8gbWFrZSB0aGUgcHJvcGVydGllcyBhbmQgbWV0aG9kcyBhdmFpbGFibGUgZm9yIHBsdWdpbnNcbnYuY3VycmVudCA9IGN1cnJlbnQ7XG5cbnYuZGlyZWN0aXZlcyA9IGRpcmVjdGl2ZXM7XG5cbnYucmVzZXJ2ZWRQcm9wcyA9IHJlc2VydmVkUHJvcHM7XG5cbnYuaXNWbm9kZSA9IGlzVm5vZGU7XG52LmlzQ29tcG9uZW50ID0gaXNDb21wb25lbnQ7XG52LmlzVm5vZGVDb21wb25lbnQgPSBpc1Zub2RlQ29tcG9uZW50O1xuXG52LmlzTm9kZUpzID0gaXNOb2RlSnM7XG52LnRydXN0ID0gdHJ1c3Q7XG5cbnYub25DbGVhbnVwID0gb25DbGVhbnVwO1xudi5vblVubW91bnQgPSBvblVubW91bnQ7XG52Lm9uTW91bnQgPSBvbk1vdW50O1xudi5vblVwZGF0ZSA9IG9uVXBkYXRlO1xuXG52Lm1vdW50ID0gbW91bnQ7XG52LnVubW91bnQgPSB1bm1vdW50O1xudi51cGRhdGUgPSB1cGRhdGU7XG5cbnYuc2V0QXR0cmlidXRlID0gc2V0QXR0cmlidXRlO1xudi5kaXJlY3RpdmUgPSBkaXJlY3RpdmU7XG52LnVzZSA9IHVzZTtcbiJdfQ==