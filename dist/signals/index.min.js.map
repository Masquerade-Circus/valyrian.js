//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzaWduYWxzX2V4cG9ydHMiLCJfX2V4cG9ydCIsImNyZWF0ZUVmZmVjdCIsImNyZWF0ZVNpZ25hbCIsImNyZWF0ZVNpZ25hbFN0b3JlIiwiX19FWFBPUlRTX18iLCJpbXBvcnRfdmFseXJpYW4iLCJyZXF1aXJlIiwiaW1wb3J0X3V0aWxzIiwiZWZmZWN0U3RhY2siLCJpbml0aWFsVmFsdWUiLCJ2YWx1ZSIsInN1YnNjcmliZXJzIiwiU2V0IiwiZG9tV2l0aFZub2Rlc1RvVXBkYXRlIiwiV2Vha1NldCIsInJ1blN1YnNjcmliZXJzIiwiZm9yRWFjaCIsInN1YnNjcmliZXIiLCJjdXJyZW50RWZmZWN0IiwibGVuZ3RoIiwiaGFzIiwiYWRkIiwiY3VycmVudFZub2RlIiwiY3VycmVudCIsInZub2RlIiwiZG9tIiwiaGFzUGFyZW50IiwicGFyZW50IiwicGFyZW50RWxlbWVudCIsInN1YnNjcmlwdGlvbiIsInVwZGF0ZVZub2RlIiwicGFyZW50Tm9kZSIsImRlbGV0ZSIsIm5ld1ZhbHVlIiwicmVzb2x2ZWRWYWx1ZSIsImV2ZW50IiwiZGVmYXVsdFByZXZlbnRlZCIsInByZXZlbnREZWZhdWx0IiwiaGFzQ2hhbmdlZCIsImVmZmVjdCIsInJ1bkVmZmVjdCIsInB1c2giLCJwb3AiLCJpbml0aWFsU3RhdGUiLCJzdGF0ZSIsInBhdGgiLCJnZXQiLCJzZXQiXSwic291cmNlcyI6WyIuLi8uLi9saWIvc2lnbmFscy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjdXJyZW50LCBEb21FbGVtZW50LCB1cGRhdGVWbm9kZSwgVm5vZGVXaXRoRG9tIH0gZnJvbSBcInZhbHlyaWFuLmpzXCI7XG5pbXBvcnQgeyBnZXQsIHNldCwgaGFzQ2hhbmdlZCB9IGZyb20gXCJ2YWx5cmlhbi5qcy91dGlsc1wiO1xuXG5jb25zdCBlZmZlY3RTdGFjazogRnVuY3Rpb25bXSA9IFtdO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbmV4cG9ydCB0eXBlIFNpZ25hbDxUPiA9IFsoKSA9PiBULCAobmV3VmFsdWU6IFQgfCAoKGN1cnJlbnQ6IFQpID0+IFQpKSA9PiB2b2lkLCAoKSA9PiB2b2lkXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNpZ25hbDxUPihpbml0aWFsVmFsdWU6IFQpOiBTaWduYWw8VD4ge1xuICBsZXQgdmFsdWUgPSBpbml0aWFsVmFsdWU7XG4gIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxGdW5jdGlvbj4oKTtcbiAgY29uc3QgZG9tV2l0aFZub2Rlc1RvVXBkYXRlID0gbmV3IFdlYWtTZXQ8RG9tRWxlbWVudD4oKTtcblxuICBjb25zdCBydW5TdWJzY3JpYmVycyA9ICgpID0+IHN1YnNjcmliZXJzLmZvckVhY2goKHN1YnNjcmliZXIpID0+IHN1YnNjcmliZXIoKSk7XG5cbiAgY29uc3QgcmVhZCA9ICgpID0+IHtcbiAgICBjb25zdCBjdXJyZW50RWZmZWN0ID0gZWZmZWN0U3RhY2tbZWZmZWN0U3RhY2subGVuZ3RoIC0gMV07XG4gICAgaWYgKGN1cnJlbnRFZmZlY3QgJiYgIXN1YnNjcmliZXJzLmhhcyhjdXJyZW50RWZmZWN0KSkge1xuICAgICAgc3Vic2NyaWJlcnMuYWRkKGN1cnJlbnRFZmZlY3QpO1xuICAgIH1cblxuICAgIGNvbnN0IGN1cnJlbnRWbm9kZSA9IGN1cnJlbnQudm5vZGUgYXMgVm5vZGVXaXRoRG9tO1xuICAgIGlmIChjdXJyZW50Vm5vZGUgJiYgIWRvbVdpdGhWbm9kZXNUb1VwZGF0ZS5oYXMoY3VycmVudFZub2RlLmRvbSkpIHtcbiAgICAgIGxldCBoYXNQYXJlbnQgPSBmYWxzZTtcbiAgICAgIGxldCBwYXJlbnQgPSBjdXJyZW50Vm5vZGUuZG9tLnBhcmVudEVsZW1lbnQgYXMgRG9tRWxlbWVudDtcbiAgICAgIHdoaWxlIChwYXJlbnQpIHtcbiAgICAgICAgaWYgKGRvbVdpdGhWbm9kZXNUb1VwZGF0ZS5oYXMocGFyZW50KSkge1xuICAgICAgICAgIGhhc1BhcmVudCA9IHRydWU7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcGFyZW50ID0gcGFyZW50LnBhcmVudEVsZW1lbnQgYXMgRG9tRWxlbWVudDtcbiAgICAgIH1cblxuICAgICAgaWYgKGhhc1BhcmVudCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRvbSA9IGN1cnJlbnRWbm9kZS5kb207XG4gICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSAoKSA9PiB7XG4gICAgICAgIHVwZGF0ZVZub2RlKGRvbS52bm9kZSk7XG4gICAgICAgIGlmICghZG9tLnBhcmVudE5vZGUpIHtcbiAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoc3Vic2NyaXB0aW9uKTtcbiAgICAgICAgICBkb21XaXRoVm5vZGVzVG9VcGRhdGUuZGVsZXRlKGRvbSk7XG4gICAgICAgIH1cbiAgICAgIH07XG5cbiAgICAgIHN1YnNjcmliZXJzLmFkZChzdWJzY3JpcHRpb24pO1xuICAgICAgZG9tV2l0aFZub2Rlc1RvVXBkYXRlLmFkZChkb20pO1xuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZTtcbiAgfTtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgY29uc3Qgd3JpdGUgPSAobmV3VmFsdWU6IFQgfCAoKGN1cnJlbnQ6IFQpID0+IFQpKSA9PiB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgY29uc3QgcmVzb2x2ZWRWYWx1ZSA9IHR5cGVvZiBuZXdWYWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gKG5ld1ZhbHVlIGFzIChjdXJyZW50OiBUKSA9PiBUKSh2YWx1ZSkgOiBuZXdWYWx1ZTtcblxuICAgIGlmIChjdXJyZW50LmV2ZW50ICYmICFjdXJyZW50LmV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHtcbiAgICAgIGN1cnJlbnQuZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICBpZiAoIWhhc0NoYW5nZWQodmFsdWUsIHJlc29sdmVkVmFsdWUpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFsdWUgPSByZXNvbHZlZFZhbHVlO1xuXG4gICAgcnVuU3Vic2NyaWJlcnMoKTtcbiAgfTtcblxuICByZXR1cm4gW3JlYWQsIHdyaXRlLCBydW5TdWJzY3JpYmVyc107XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFZmZlY3QoZWZmZWN0OiBGdW5jdGlvbikge1xuICBjb25zdCBydW5FZmZlY3QgPSAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGVmZmVjdFN0YWNrLnB1c2gocnVuRWZmZWN0KTtcbiAgICAgIGVmZmVjdCgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBlZmZlY3RTdGFjay5wb3AoKTtcbiAgICB9XG4gIH07XG5cbiAgcnVuRWZmZWN0KCk7XG59XG5cbi8vIFBhdGggaXMgYSBzdHJpbmcgd2l0aCBkb3Qgbm90YXRpb24sIGUuZzpcbi8vICdhLmIuYycgPT09IG9iai5hLmIuY1xuLy8gJ2EuMC5jJyA9PT0gb2JqLmFbMF0uY1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5leHBvcnQgdHlwZSBTaWduYWxTdG9yZTxUPiA9IFsoKSA9PiBULCAocGF0aDogc3RyaW5nLCBuZXdWYWx1ZTogVCB8ICgoY3VycmVudDogVCkgPT4gVCkgfCBhbnkpID0+IHZvaWRdO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2lnbmFsU3RvcmU8VD4oaW5pdGlhbFN0YXRlOiBUKTogU2lnbmFsU3RvcmU8VD4ge1xuICBjb25zdCBbc3RhdGUsICwgcnVuU3Vic2NyaWJlcnNdID0gY3JlYXRlU2lnbmFsKGluaXRpYWxTdGF0ZSk7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIGNvbnN0IHNldHRlciA9IChwYXRoOiBzdHJpbmcsIG5ld1ZhbHVlOiBUIHwgKChjdXJyZW50OiBUKSA9PiBUKSkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnQgPSBnZXQoaW5pdGlhbFN0YXRlLCBwYXRoKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICBjb25zdCByZXNvbHZlZFZhbHVlID0gdHlwZW9mIG5ld1ZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyAobmV3VmFsdWUgYXMgKGN1cnJlbnQ6IFQpID0+IFQpKGN1cnJlbnQpIDogbmV3VmFsdWU7XG5cbiAgICBpZiAoIWhhc0NoYW5nZWQoY3VycmVudCwgcmVzb2x2ZWRWYWx1ZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzZXQoaW5pdGlhbFN0YXRlLCBwYXRoLCByZXNvbHZlZFZhbHVlKTtcbiAgICBydW5TdWJzY3JpYmVycygpO1xuICB9O1xuXG4gIHJldHVybiBbc3RhdGUsIHNldHRlcl07XG59XG4iXSwibWFwcGluZ3MiOiJnSkFBQUEsRUFBQSxHLHlEQUFBQyxDQUFBRCxFQUFBLENBQUFFLGFBQUEsSUFBQUEsRUFBQUMsYUFBQSxJQUFBQSxFQUFBQyxrQkFBQSxJQUFBQSxJQUFBLEksRUFBQUMsRyxFQUFBTCxFLDBNQUFBTSxFQUErREMsUUFBQSxlQUMvREMsRUFBcUNELFFBQUEscUJBRS9CRSxFQUEwQixHQUt6QixTQUFTTixFQUFnQk8sR0FDOUIsSUFBSUMsRUFBUUQsRUFDWixNQUFNRSxFQUFjLElBQUlDLElBQ2xCQyxFQUF3QixJQUFJQyxRQUU1QkMsRUFBaUIsSUFBTUosRUFBWUssUUFBU0MsR0FBZUEsS0EwRGpFLE1BQU8sQ0F4RE0sS0FDWCxNQUFNQyxFQUFnQlYsRUFBWUEsRUFBWVcsT0FBUyxHQUNuREQsSUFBa0JQLEVBQVlTLElBQUlGLElBQ3BDUCxFQUFZVSxJQUFJSCxHQUdsQixNQUFNSSxFQUFlakIsRUFBQWtCLFFBQVFDLE1BQzdCLEdBQUlGLElBQWlCVCxFQUFzQk8sSUFBSUUsRUFBYUcsS0FBTSxDQUNoRSxJQUFJQyxHQUFZLEVBQ1pDLEVBQVNMLEVBQWFHLElBQUlHLGNBQzlCLEtBQU9ELEdBQVEsQ0FDYixHQUFJZCxFQUFzQk8sSUFBSU8sR0FBUyxDQUNyQ0QsR0FBWSxFQUNaLEtBQ0YsQ0FDQUMsRUFBU0EsRUFBT0MsYUFDbEIsQ0FFQSxHQUFJRixFQUNGLE9BQU9oQixFQUdULE1BQU1lLEVBQU1ILEVBQWFHLElBQ25CSSxFQUFlLE1BQ25CLEVBQUF4QixFQUFBeUIsYUFBWUwsRUFBSUQsT0FDWEMsRUFBSU0sYUFDUHBCLEVBQVlxQixPQUFPSCxHQUNuQmhCLEVBQXNCbUIsT0FBT1AsR0FDL0IsRUFHRmQsRUFBWVUsSUFBSVEsR0FDaEJoQixFQUFzQlEsSUFBSUksRUFDNUIsQ0FFQSxPQUFPZixDQUFBLEVBSU11QixJQUViLE1BQU1DLEVBQW9DLG1CQUFiRCxFQUEyQkEsRUFBK0J2QixHQUFTdUIsRUFFNUY1QixFQUFBa0IsUUFBUVksUUFBVTlCLEVBQUFrQixRQUFRWSxNQUFNQyxrQkFDbEMvQixFQUFBa0IsUUFBUVksTUFBTUUsa0JBR1osRUFBQzlCLEVBQUErQixZQUFXNUIsRUFBT3dCLEtBSXZCeEIsRUFBUXdCLEVBRVJuQixJQUFlLEVBR0lBLEVBQ3ZCLENBRU8sU0FBU2QsRUFBYXNDLEdBQzNCLE1BQU1DLEVBQVksS0FDaEIsSUFDRWhDLEVBQVlpQyxLQUFLRCxHQUNqQkQsR0FDRixTQUNFL0IsRUFBWWtDLEtBQ2QsR0FHRkYsR0FDRixDQVFPLFNBQVNyQyxFQUFxQndDLEdBQ25DLE1BQU9DLEVBQU8sQ0FBRTdCLEdBQWtCYixFQUFheUMsR0FnQi9DLE1BQU8sQ0FBQ0MsRUFiTyxDQUFDQyxFQUFjWixLQUM1QixNQUFNVixLQUFVaEIsRUFBQXVDLEtBQUlILEVBQWNFLEdBRTVCWCxFQUFvQyxtQkFBYkQsRUFBMkJBLEVBQStCVixHQUFXVSxHQUU5RixFQUFDMUIsRUFBQStCLFlBQVdmLEVBQVNXLE1BSXpCLEVBQUEzQixFQUFBd0MsS0FBSUosRUFBY0UsRUFBTVgsR0FDeEJuQixJQUFlLEVBSW5CLEMifQ==