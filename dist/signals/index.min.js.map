//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzaWduYWxzX2V4cG9ydHMiLCJfX2V4cG9ydCIsImNyZWF0ZUVmZmVjdCIsImNyZWF0ZVNpZ25hbCIsImNyZWF0ZVNpZ25hbFN0b3JlIiwiX19FWFBPUlRTX18iLCJpbXBvcnRfdmFseXJpYW4iLCJyZXF1aXJlIiwiaW1wb3J0X3V0aWxzIiwiZWZmZWN0U3RhY2siLCJpbml0aWFsVmFsdWUiLCJ2YWx1ZSIsInN1YnNjcmliZXJzIiwiU2V0IiwiZG9tV2l0aFZub2Rlc1RvVXBkYXRlIiwiV2Vha1NldCIsInJ1blN1YnNjcmliZXJzIiwiZm9yRWFjaCIsInN1YnNjcmliZXIiLCJjdXJyZW50RWZmZWN0IiwibGVuZ3RoIiwiaGFzIiwiYWRkIiwiY3VycmVudFZub2RlIiwiY3VycmVudCIsInZub2RlIiwiZG9tIiwic3Vic2NyaXB0aW9uIiwicGFyZW50Tm9kZSIsImRlbGV0ZSIsInVwZGF0ZVZub2RlIiwibmV3VmFsdWUiLCJyZXNvbHZlZFZhbHVlIiwiZXZlbnQiLCJkZWZhdWx0UHJldmVudGVkIiwicHJldmVudERlZmF1bHQiLCJoYXNDaGFuZ2VkIiwiZWZmZWN0RGVwcyIsIldlYWtNYXAiLCJlZmZlY3QiLCJkZXBlbmRlbmNpZXMiLCJydW5FZmZlY3QiLCJvbGREZXBzIiwiZ2V0Iiwic29tZSIsImRlcCIsImkiLCJPYmplY3QiLCJpcyIsInNldCIsInB1c2giLCJwb3AiLCJpbml0aWFsU3RhdGUiLCJzdGF0ZSIsInBhdGgiXSwic291cmNlcyI6WyIuLi8uLi9saWIvc2lnbmFscy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjdXJyZW50LCBEb21FbGVtZW50LCB1cGRhdGVWbm9kZSwgVm5vZGUsIFZub2RlV2l0aERvbSB9IGZyb20gXCJ2YWx5cmlhbi5qc1wiO1xuaW1wb3J0IHsgZ2V0LCBzZXQsIGhhc0NoYW5nZWQgfSBmcm9tIFwidmFseXJpYW4uanMvdXRpbHNcIjtcblxuY29uc3QgZWZmZWN0U3RhY2s6IEZ1bmN0aW9uW10gPSBbXTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5leHBvcnQgdHlwZSBTaWduYWw8VD4gPSBbKCkgPT4gVCwgKG5ld1ZhbHVlOiBUIHwgKChjdXJyZW50OiBUKSA9PiBUKSkgPT4gdm9pZCwgKCkgPT4gdm9pZF07XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTaWduYWw8VD4oaW5pdGlhbFZhbHVlOiBUKTogU2lnbmFsPFQ+IHtcbiAgbGV0IHZhbHVlID0gaW5pdGlhbFZhbHVlO1xuICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8RnVuY3Rpb24+KCk7XG4gIGNvbnN0IGRvbVdpdGhWbm9kZXNUb1VwZGF0ZSA9IG5ldyBXZWFrU2V0PERvbUVsZW1lbnQ+KCk7XG5cbiAgY29uc3QgcnVuU3Vic2NyaWJlcnMgPSAoKSA9PiBzdWJzY3JpYmVycy5mb3JFYWNoKChzdWJzY3JpYmVyKSA9PiBzdWJzY3JpYmVyKCkpO1xuXG4gIGNvbnN0IHJlYWQgPSAoKSA9PiB7XG4gICAgY29uc3QgY3VycmVudEVmZmVjdCA9IGVmZmVjdFN0YWNrW2VmZmVjdFN0YWNrLmxlbmd0aCAtIDFdO1xuICAgIGlmIChjdXJyZW50RWZmZWN0ICYmICFzdWJzY3JpYmVycy5oYXMoY3VycmVudEVmZmVjdCkpIHtcbiAgICAgIHN1YnNjcmliZXJzLmFkZChjdXJyZW50RWZmZWN0KTtcbiAgICB9XG5cbiAgICBjb25zdCBjdXJyZW50Vm5vZGUgPSBjdXJyZW50LnZub2RlIGFzIFZub2RlV2l0aERvbTtcbiAgICBpZiAoY3VycmVudFZub2RlICYmICFkb21XaXRoVm5vZGVzVG9VcGRhdGUuaGFzKGN1cnJlbnRWbm9kZS5kb20pKSB7XG4gICAgICBjb25zdCBkb20gPSBjdXJyZW50Vm5vZGUuZG9tO1xuICAgICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gKCkgPT4ge1xuICAgICAgICBpZiAoIWRvbS5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKHN1YnNjcmlwdGlvbik7XG4gICAgICAgICAgZG9tV2l0aFZub2Rlc1RvVXBkYXRlLmRlbGV0ZShkb20pO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB1cGRhdGVWbm9kZShkb20udm5vZGUpO1xuICAgICAgfTtcblxuICAgICAgc3Vic2NyaWJlcnMuYWRkKHN1YnNjcmlwdGlvbik7XG4gICAgICBkb21XaXRoVm5vZGVzVG9VcGRhdGUuYWRkKGRvbSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlO1xuICB9O1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuICBjb25zdCB3cml0ZSA9IChuZXdWYWx1ZTogVCB8ICgoY3VycmVudDogVCkgPT4gVCkpID0+IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICBjb25zdCByZXNvbHZlZFZhbHVlID0gdHlwZW9mIG5ld1ZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyAobmV3VmFsdWUgYXMgKGN1cnJlbnQ6IFQpID0+IFQpKHZhbHVlKSA6IG5ld1ZhbHVlO1xuXG4gICAgaWYgKGN1cnJlbnQuZXZlbnQgJiYgIWN1cnJlbnQuZXZlbnQuZGVmYXVsdFByZXZlbnRlZCkge1xuICAgICAgY3VycmVudC5ldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuICAgIGlmICghaGFzQ2hhbmdlZCh2YWx1ZSwgcmVzb2x2ZWRWYWx1ZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB2YWx1ZSA9IHJlc29sdmVkVmFsdWU7XG5cbiAgICBydW5TdWJzY3JpYmVycygpO1xuICB9O1xuXG4gIHJldHVybiBbcmVhZCwgd3JpdGUsIHJ1blN1YnNjcmliZXJzXTtcbn1cblxuY29uc3QgZWZmZWN0RGVwcyA9IG5ldyBXZWFrTWFwPEZ1bmN0aW9uLCBhbnlbXT4oKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVmZmVjdChlZmZlY3Q6IEZ1bmN0aW9uLCBkZXBlbmRlbmNpZXM/OiBhbnlbXSkge1xuICBjb25zdCBydW5FZmZlY3QgPSAoKSA9PiB7XG4gICAgY29uc3Qgb2xkRGVwcyA9IGVmZmVjdERlcHMuZ2V0KGVmZmVjdCk7XG4gICAgY29uc3QgaGFzQ2hhbmdlZERlcHMgPSAhb2xkRGVwcyB8fCAhZGVwZW5kZW5jaWVzIHx8IGRlcGVuZGVuY2llcy5zb21lKChkZXAsIGkpID0+ICFPYmplY3QuaXMoZGVwLCBvbGREZXBzW2ldKSk7XG5cbiAgICBpZiAoIWhhc0NoYW5nZWREZXBzKSByZXR1cm47XG5cbiAgICBlZmZlY3REZXBzLnNldChlZmZlY3QsIGRlcGVuZGVuY2llcyB8fCBbXSk7XG4gICAgdHJ5IHtcbiAgICAgIGVmZmVjdFN0YWNrLnB1c2gocnVuRWZmZWN0KTtcbiAgICAgIGVmZmVjdCgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBlZmZlY3RTdGFjay5wb3AoKTtcbiAgICB9XG4gIH07XG5cbiAgcnVuRWZmZWN0KCk7XG59XG5cbi8vIFBhdGggaXMgYSBzdHJpbmcgd2l0aCBkb3Qgbm90YXRpb24sIGUuZzpcbi8vICdhLmIuYycgPT09IG9iai5hLmIuY1xuLy8gJ2EuMC5jJyA9PT0gb2JqLmFbMF0uY1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5leHBvcnQgdHlwZSBTaWduYWxTdG9yZTxUPiA9IFsoKSA9PiBULCAocGF0aDogc3RyaW5nLCBuZXdWYWx1ZTogVCB8ICgoY3VycmVudDogVCkgPT4gVCkgfCBhbnkpID0+IHZvaWRdO1xuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2lnbmFsU3RvcmU8VD4oaW5pdGlhbFN0YXRlOiBUKTogU2lnbmFsU3RvcmU8VD4ge1xuICBjb25zdCBbc3RhdGUsICwgcnVuU3Vic2NyaWJlcnNdID0gY3JlYXRlU2lnbmFsKGluaXRpYWxTdGF0ZSk7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIGNvbnN0IHNldHRlciA9IChwYXRoOiBzdHJpbmcsIG5ld1ZhbHVlOiBUIHwgKChjdXJyZW50OiBUKSA9PiBUKSkgPT4ge1xuICAgIGNvbnN0IGN1cnJlbnQgPSBnZXQoaW5pdGlhbFN0YXRlLCBwYXRoKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICBjb25zdCByZXNvbHZlZFZhbHVlID0gdHlwZW9mIG5ld1ZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyAobmV3VmFsdWUgYXMgKGN1cnJlbnQ6IFQpID0+IFQpKGN1cnJlbnQpIDogbmV3VmFsdWU7XG5cbiAgICBpZiAoIWhhc0NoYW5nZWQoY3VycmVudCwgcmVzb2x2ZWRWYWx1ZSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzZXQoaW5pdGlhbFN0YXRlLCBwYXRoLCByZXNvbHZlZFZhbHVlKTtcbiAgICBydW5TdWJzY3JpYmVycygpO1xuICB9O1xuXG4gIHJldHVybiBbc3RhdGUsIHNldHRlcl07XG59XG4iXSwibWFwcGluZ3MiOiJnSkFBQUEsRUFBQSxHLHlEQUFBQyxDQUFBRCxFQUFBLENBQUFFLGFBQUEsSUFBQUEsRUFBQUMsYUFBQSxJQUFBQSxFQUFBQyxrQkFBQSxJQUFBQSxJQUFBLEksRUFBQUMsRyxFQUFBTCxFLDBNQUFBTSxFQUFzRUMsUUFBQSxlQUN0RUMsRUFBcUNELFFBQUEscUJBRS9CRSxFQUEwQixHQUt6QixTQUFTTixFQUFnQk8sR0FDOUIsSUFBSUMsRUFBUUQsRUFDWixNQUFNRSxFQUFjLElBQUlDLElBQ2xCQyxFQUF3QixJQUFJQyxRQUU1QkMsRUFBaUIsSUFBTUosRUFBWUssUUFBU0MsR0FBZUEsS0E2Q2pFLE1BQU8sQ0EzQ00sS0FDWCxNQUFNQyxFQUFnQlYsRUFBWUEsRUFBWVcsT0FBUyxHQUNuREQsSUFBa0JQLEVBQVlTLElBQUlGLElBQ3BDUCxFQUFZVSxJQUFJSCxHQUdsQixNQUFNSSxFQUFlakIsRUFBQWtCLFFBQVFDLE1BQzdCLEdBQUlGLElBQWlCVCxFQUFzQk8sSUFBSUUsRUFBYUcsS0FBTSxDQUNoRSxNQUFNQSxFQUFNSCxFQUFhRyxJQUNuQkMsRUFBZSxLQUNuQixJQUFLRCxFQUFJRSxXQUdQLE9BRkFoQixFQUFZaUIsT0FBT0YsUUFDbkJiLEVBQXNCZSxPQUFPSCxJQUcvQixFQUFBcEIsRUFBQXdCLGFBQVlKLEVBQUlELE1BQUssRUFHdkJiLEVBQVlVLElBQUlLLEdBQ2hCYixFQUFzQlEsSUFBSUksRUFDNUIsQ0FFQSxPQUFPZixDQUFBLEVBSU1vQixJQUViLE1BQU1DLEVBQW9DLG1CQUFiRCxFQUEyQkEsRUFBK0JwQixHQUFTb0IsRUFFNUZ6QixFQUFBa0IsUUFBUVMsUUFBVTNCLEVBQUFrQixRQUFRUyxNQUFNQyxrQkFDbEM1QixFQUFBa0IsUUFBUVMsTUFBTUUsa0JBR1osRUFBQzNCLEVBQUE0QixZQUFXekIsRUFBT3FCLEtBSXZCckIsRUFBUXFCLEVBRVJoQixJQUFlLEVBR0lBLEVBQ3ZCLENBRUEsSUFBTXFCLEVBQWEsSUFBSUMsUUFFaEIsU0FBU3BDLEVBQWFxQyxFQUFrQkMsR0FDN0MsTUFBTUMsRUFBWSxLQUNoQixNQUFNQyxFQUFVTCxFQUFXTSxJQUFJSixHQUcvQixJQUZ3QkcsSUFBWUYsR0FBZ0JBLEVBQWFJLEtBQUssQ0FBQ0MsRUFBS0MsS0FBT0MsT0FBT0MsR0FBR0gsRUFBS0gsRUFBUUksS0FFMUcsQ0FFQVQsRUFBV1ksSUFBSVYsRUFBUUMsR0FBZ0IsSUFDdkMsSUFDRS9CLEVBQVl5QyxLQUFLVCxHQUNqQkYsR0FDRixTQUNFOUIsRUFBWTBDLEtBQ2QsQ0FScUIsQ0FRckIsRUFHRlYsR0FDRixDQVFPLFNBQVNyQyxFQUFxQmdELEdBQ25DLE1BQU9DLEVBQU8sQ0FBRXJDLEdBQWtCYixFQUFhaUQsR0FnQi9DLE1BQU8sQ0FBQ0MsRUFiTyxDQUFDQyxFQUFjdkIsS0FDNUIsTUFBTVAsS0FBVWhCLEVBQUFtQyxLQUFJUyxFQUFjRSxHQUU1QnRCLEVBQW9DLG1CQUFiRCxFQUEyQkEsRUFBK0JQLEdBQVdPLEdBRTlGLEVBQUN2QixFQUFBNEIsWUFBV1osRUFBU1EsTUFJekIsRUFBQXhCLEVBQUF5QyxLQUFJRyxFQUFjRSxFQUFNdEIsR0FDeEJoQixJQUFlLEVBSW5CLEMifQ==