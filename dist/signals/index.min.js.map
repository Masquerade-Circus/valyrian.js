//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzaWduYWxzX2V4cG9ydHMiLCJfX2V4cG9ydCIsImNyZWF0ZUVmZmVjdCIsImNyZWF0ZVNpZ25hbCIsImNyZWF0ZVNpZ25hbFN0b3JlIiwiX19FWFBPUlRTX18iLCJpbXBvcnRfdmFseXJpYW4iLCJyZXF1aXJlIiwiaW1wb3J0X3V0aWxzIiwiZWZmZWN0U3RhY2siLCJpbml0aWFsVmFsdWUiLCJ2YWx1ZSIsInN1YnNjcmliZXJzIiwiU2V0Iiwidm5vZGVzVG9VcGRhdGUiLCJXZWFrU2V0IiwicnVuU3Vic2NyaWJlcnMiLCJmb3JFYWNoIiwic3Vic2NyaWJlciIsImN1cnJlbnRFZmZlY3QiLCJsZW5ndGgiLCJoYXMiLCJhZGQiLCJjdXJyZW50Vm5vZGUiLCJjdXJyZW50Iiwidm5vZGUiLCJzdWJzY3JpcHRpb24iLCJkb20iLCJkZWxldGUiLCJ1cGRhdGVWbm9kZSIsIm5ld1ZhbHVlIiwicmVzb2x2ZWRWYWx1ZSIsImV2ZW50IiwiZGVmYXVsdFByZXZlbnRlZCIsInByZXZlbnREZWZhdWx0IiwiaGFzQ2hhbmdlZCIsImVmZmVjdCIsInJ1bkVmZmVjdCIsInB1c2giLCJwb3AiLCJpbml0aWFsU3RhdGUiLCJzdGF0ZSIsIl8iLCJwYXRoIiwiZ2V0Iiwic2V0Il0sInNvdXJjZXMiOlsiLi4vLi4vbGliL3NpZ25hbHMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3VycmVudCwgdXBkYXRlVm5vZGUsIFZub2RlLCBWbm9kZVdpdGhEb20gfSBmcm9tIFwidmFseXJpYW4uanNcIjtcbmltcG9ydCB7IGdldCwgc2V0LCBoYXNDaGFuZ2VkIH0gZnJvbSBcInZhbHlyaWFuLmpzL3V0aWxzXCI7XG5cbmNvbnN0IGVmZmVjdFN0YWNrOiBGdW5jdGlvbltdID0gW107XG5cbmV4cG9ydCB0eXBlIFNpZ25hbDxUPiA9IFsoKSA9PiBULCAobmV3VmFsdWU6IFQgfCAoKGN1cnJlbnQ6IFQpID0+IFQpKSA9PiB2b2lkLCAoKSA9PiB2b2lkXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNpZ25hbDxUPihpbml0aWFsVmFsdWU6IFQpOiBTaWduYWw8VD4ge1xuICBsZXQgdmFsdWUgPSBpbml0aWFsVmFsdWU7XG4gIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxGdW5jdGlvbj4oKTtcbiAgY29uc3Qgdm5vZGVzVG9VcGRhdGUgPSBuZXcgV2Vha1NldDxWbm9kZT4oKTtcblxuICBjb25zdCBydW5TdWJzY3JpYmVycyA9ICgpID0+IHN1YnNjcmliZXJzLmZvckVhY2goKHN1YnNjcmliZXIpID0+IHN1YnNjcmliZXIoKSk7XG5cbiAgY29uc3QgcmVhZCA9ICgpID0+IHtcbiAgICBjb25zdCBjdXJyZW50RWZmZWN0ID0gZWZmZWN0U3RhY2tbZWZmZWN0U3RhY2subGVuZ3RoIC0gMV07XG4gICAgaWYgKGN1cnJlbnRFZmZlY3QgJiYgIXN1YnNjcmliZXJzLmhhcyhjdXJyZW50RWZmZWN0KSkge1xuICAgICAgc3Vic2NyaWJlcnMuYWRkKGN1cnJlbnRFZmZlY3QpO1xuICAgIH1cblxuICAgIGNvbnN0IGN1cnJlbnRWbm9kZSA9IGN1cnJlbnQudm5vZGUgYXMgVm5vZGVXaXRoRG9tO1xuICAgIGlmIChjdXJyZW50Vm5vZGUgJiYgIXZub2Rlc1RvVXBkYXRlLmhhcyhjdXJyZW50Vm5vZGUpKSB7XG4gICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSAoKSA9PiB7XG4gICAgICAgIGlmICghY3VycmVudFZub2RlLmRvbSkge1xuICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShzdWJzY3JpcHRpb24pO1xuICAgICAgICAgIHZub2Rlc1RvVXBkYXRlLmRlbGV0ZShjdXJyZW50Vm5vZGUpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB1cGRhdGVWbm9kZShjdXJyZW50Vm5vZGUpO1xuICAgICAgfTtcblxuICAgICAgc3Vic2NyaWJlcnMuYWRkKHN1YnNjcmlwdGlvbik7XG4gICAgICB2bm9kZXNUb1VwZGF0ZS5hZGQoY3VycmVudFZub2RlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdmFsdWU7XG4gIH07XG5cbiAgY29uc3Qgd3JpdGUgPSAobmV3VmFsdWU6IFQgfCAoKGN1cnJlbnQ6IFQpID0+IFQpKSA9PiB7XG4gICAgY29uc3QgcmVzb2x2ZWRWYWx1ZSA9IHR5cGVvZiBuZXdWYWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gKG5ld1ZhbHVlIGFzIChjdXJyZW50OiBUKSA9PiBUKSh2YWx1ZSkgOiBuZXdWYWx1ZTtcblxuICAgIGlmIChjdXJyZW50LmV2ZW50ICYmICFjdXJyZW50LmV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHtcbiAgICAgIGN1cnJlbnQuZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICBpZiAoIWhhc0NoYW5nZWQodmFsdWUsIHJlc29sdmVkVmFsdWUpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdmFsdWUgPSByZXNvbHZlZFZhbHVlO1xuXG4gICAgcnVuU3Vic2NyaWJlcnMoKTtcbiAgfTtcblxuICByZXR1cm4gW3JlYWQsIHdyaXRlLCBydW5TdWJzY3JpYmVyc107XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFZmZlY3QoZWZmZWN0OiBGdW5jdGlvbikge1xuICBjb25zdCBydW5FZmZlY3QgPSAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGVmZmVjdFN0YWNrLnB1c2gocnVuRWZmZWN0KTtcbiAgICAgIGVmZmVjdCgpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBlZmZlY3RTdGFjay5wb3AoKTtcbiAgICB9XG4gIH07XG5cbiAgcnVuRWZmZWN0KCk7XG59XG5cbi8vIFBhdGggaXMgYSBzdHJpbmcgd2l0aCBkb3Qgbm90YXRpb24sIGUuZzpcbi8vICdhLmIuYycgPT09IG9iai5hLmIuY1xuLy8gJ2EuMC5jJyA9PT0gb2JqLmFbMF0uY1xuZXhwb3J0IHR5cGUgU2lnbmFsU3RvcmU8VD4gPSBbKCkgPT4gVCwgKHBhdGg6IHN0cmluZywgbmV3VmFsdWU6IFQgfCAoKGN1cnJlbnQ6IFQpID0+IFQpKSA9PiB2b2lkXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNpZ25hbFN0b3JlPFQ+KGluaXRpYWxTdGF0ZTogVCk6IFNpZ25hbFN0b3JlPFQ+IHtcbiAgY29uc3QgW3N0YXRlLCBfLCBydW5TdWJzY3JpYmVyc10gPSBjcmVhdGVTaWduYWwoaW5pdGlhbFN0YXRlKTtcblxuICBjb25zdCBzZXR0ZXIgPSAocGF0aDogc3RyaW5nLCBuZXdWYWx1ZTogVCB8ICgoY3VycmVudDogVCkgPT4gVCkpID0+IHtcbiAgICBjb25zdCBjdXJyZW50ID0gZ2V0KGluaXRpYWxTdGF0ZSwgcGF0aCk7XG4gICAgY29uc3QgcmVzb2x2ZWRWYWx1ZSA9IHR5cGVvZiBuZXdWYWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gKG5ld1ZhbHVlIGFzIChjdXJyZW50OiBUKSA9PiBUKShjdXJyZW50KSA6IG5ld1ZhbHVlO1xuXG4gICAgaWYgKCFoYXNDaGFuZ2VkKGN1cnJlbnQsIHJlc29sdmVkVmFsdWUpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc2V0KGluaXRpYWxTdGF0ZSwgcGF0aCwgcmVzb2x2ZWRWYWx1ZSk7XG4gICAgcnVuU3Vic2NyaWJlcnMoKTtcbiAgfTtcblxuICByZXR1cm4gW3N0YXRlLCBzZXR0ZXJdO1xufVxuIl0sIm1hcHBpbmdzIjoiZ0pBQUFBLEVBQUEsRyx5REFBQUMsQ0FBQUQsRUFBQSxDQUFBRSxhQUFBLElBQUFBLEVBQUFDLGFBQUEsSUFBQUEsRUFBQUMsa0JBQUEsSUFBQUEsSUFBQSxJLEVBQUFDLEcsRUFBQUwsRSwwTUFBQU0sRUFBMERDLFFBQUEsZUFDMURDLEVBQXFDRCxRQUFBLHFCQUUvQkUsRUFBMEIsR0FJekIsU0FBU04sRUFBZ0JPLEdBQzlCLElBQUlDLEVBQVFELEVBQ1osTUFBTUUsRUFBYyxJQUFJQyxJQUNsQkMsRUFBaUIsSUFBSUMsUUFFckJDLEVBQWlCLElBQU1KLEVBQVlLLFFBQVNDLEdBQWVBLEtBMENqRSxNQUFPLENBeENNLEtBQ1gsTUFBTUMsRUFBZ0JWLEVBQVlBLEVBQVlXLE9BQVMsR0FDbkRELElBQWtCUCxFQUFZUyxJQUFJRixJQUNwQ1AsRUFBWVUsSUFBSUgsR0FHbEIsTUFBTUksRUFBZWpCLEVBQUFrQixRQUFRQyxNQUM3QixHQUFJRixJQUFpQlQsRUFBZU8sSUFBSUUsR0FBZSxDQUNyRCxNQUFNRyxFQUFlLEtBQ25CLElBQUtILEVBQWFJLElBR2hCLE9BRkFmLEVBQVlnQixPQUFPRixRQUNuQlosRUFBZWMsT0FBT0wsSUFHeEIsRUFBQWpCLEVBQUF1QixhQUFZTixFQUFZLEVBRzFCWCxFQUFZVSxJQUFJSSxHQUNoQlosRUFBZVEsSUFBSUMsRUFDckIsQ0FFQSxPQUFPWixDQUFBLEVBR01tQixJQUNiLE1BQU1DLEVBQW9DLG1CQUFiRCxFQUEyQkEsRUFBK0JuQixHQUFTbUIsRUFFNUZ4QixFQUFBa0IsUUFBUVEsUUFBVTFCLEVBQUFrQixRQUFRUSxNQUFNQyxrQkFDbEMzQixFQUFBa0IsUUFBUVEsTUFBTUUsa0JBR1osRUFBQzFCLEVBQUEyQixZQUFXeEIsRUFBT29CLEtBSXZCcEIsRUFBUW9CLEVBRVJmLElBQWUsRUFHSUEsRUFDdkIsQ0FFTyxTQUFTZCxFQUFha0MsR0FDM0IsTUFBTUMsRUFBWSxLQUNoQixJQUNFNUIsRUFBWTZCLEtBQUtELEdBQ2pCRCxHQUNGLFNBQ0UzQixFQUFZOEIsS0FDZCxHQUdGRixHQUNGLENBT08sU0FBU2pDLEVBQXFCb0MsR0FDbkMsTUFBT0MsRUFBT0MsRUFBRzFCLEdBQWtCYixFQUFhcUMsR0FjaEQsTUFBTyxDQUFDQyxFQVpPLENBQUNFLEVBQWNiLEtBQzVCLE1BQU1OLEtBQVVoQixFQUFBb0MsS0FBSUosRUFBY0csR0FDNUJaLEVBQW9DLG1CQUFiRCxFQUEyQkEsRUFBK0JOLEdBQVdNLEdBRTlGLEVBQUN0QixFQUFBMkIsWUFBV1gsRUFBU08sTUFJekIsRUFBQXZCLEVBQUFxQyxLQUFJTCxFQUFjRyxFQUFNWixHQUN4QmYsSUFBZSxFQUluQixDIn0=