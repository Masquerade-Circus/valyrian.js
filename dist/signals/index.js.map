{
  "version": 3,
  "sources": ["../../lib/signals/index.ts"],
  "sourcesContent": ["import { current, DomElement, updateVnode, VnodeWithDom } from \"valyrian.js\";\nimport { get, set, hasChanged } from \"valyrian.js/utils\";\n\nconst effectStack: Function[] = [];\n\n// eslint-disable-next-line no-unused-vars\nexport type Signal<T> = [() => T, (newValue: T | ((current: T) => T)) => void, () => void];\n\nexport function createSignal<T>(initialValue: T): Signal<T> {\n  let value = initialValue;\n  const subscribers = new Set<Function>();\n  const domWithVnodesToUpdate = new WeakSet<DomElement>();\n\n  const runSubscribers = () => subscribers.forEach((subscriber) => subscriber());\n\n  const read = () => {\n    const currentEffect = effectStack[effectStack.length - 1];\n    if (currentEffect && !subscribers.has(currentEffect)) {\n      subscribers.add(currentEffect);\n    }\n\n    const currentVnode = current.vnode as VnodeWithDom;\n    if (currentVnode && !domWithVnodesToUpdate.has(currentVnode.dom)) {\n      let hasParent = false;\n      let parent = currentVnode.dom.parentElement as DomElement;\n      while (parent) {\n        if (domWithVnodesToUpdate.has(parent)) {\n          hasParent = true;\n          break;\n        }\n        parent = parent.parentElement as DomElement;\n      }\n\n      if (hasParent) {\n        return value;\n      }\n\n      const dom = currentVnode.dom;\n      const subscription = () => {\n        updateVnode(dom.vnode);\n        if (!dom.parentNode) {\n          subscribers.delete(subscription);\n          domWithVnodesToUpdate.delete(dom);\n        }\n      };\n\n      subscribers.add(subscription);\n      domWithVnodesToUpdate.add(dom);\n    }\n\n    return value;\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  const write = (newValue: T | ((current: T) => T)) => {\n    // eslint-disable-next-line no-unused-vars\n    const resolvedValue = typeof newValue === \"function\" ? (newValue as (current: T) => T)(value) : newValue;\n\n    if (current.event && !current.event.defaultPrevented) {\n      current.event.preventDefault();\n    }\n\n    if (!hasChanged(value, resolvedValue)) {\n      return;\n    }\n\n    value = resolvedValue;\n\n    runSubscribers();\n  };\n\n  return [read, write, runSubscribers];\n}\n\nexport function createEffect(effect: Function) {\n  const runEffect = () => {\n    try {\n      effectStack.push(runEffect);\n      effect();\n    } finally {\n      effectStack.pop();\n    }\n  };\n\n  runEffect();\n}\n\n// Path is a string with dot notation, e.g:\n// 'a.b.c' === obj.a.b.c\n// 'a.0.c' === obj.a[0].c\n// eslint-disable-next-line no-unused-vars\nexport type SignalStore<T> = [() => T, (path: string, newValue: T | ((current: T) => T) | any) => void];\n\nexport function createSignalStore<T>(initialState: T): SignalStore<T> {\n  const [state, , runSubscribers] = createSignal(initialState);\n\n  // eslint-disable-next-line no-unused-vars\n  const setter = (path: string, newValue: T | ((current: T) => T)) => {\n    const current = get(initialState, path);\n    // eslint-disable-next-line no-unused-vars\n    const resolvedValue = typeof newValue === \"function\" ? (newValue as (current: T) => T)(current) : newValue;\n\n    if (!hasChanged(current, resolvedValue)) {\n      return;\n    }\n\n    set(initialState, path, resolvedValue);\n    runSubscribers();\n  };\n\n  return [state, setter];\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+D;AAC/D,mBAAqC;AAErC,IAAM,cAA0B,CAAC;AAK1B,SAAS,aAAgB,cAA4B;AAC1D,MAAI,QAAQ;AACZ,QAAM,cAAc,oBAAI,IAAc;AACtC,QAAM,wBAAwB,oBAAI,QAAoB;AAEtD,QAAM,iBAAiB,MAAM,YAAY,QAAQ,CAAC,eAAe,WAAW,CAAC;AAE7E,QAAM,OAAO,MAAM;AACjB,UAAM,gBAAgB,YAAY,YAAY,SAAS,CAAC;AACxD,QAAI,iBAAiB,CAAC,YAAY,IAAI,aAAa,GAAG;AACpD,kBAAY,IAAI,aAAa;AAAA,IAC/B;AAEA,UAAM,eAAe,wBAAQ;AAC7B,QAAI,gBAAgB,CAAC,sBAAsB,IAAI,aAAa,GAAG,GAAG;AAChE,UAAI,YAAY;AAChB,UAAI,SAAS,aAAa,IAAI;AAC9B,aAAO,QAAQ;AACb,YAAI,sBAAsB,IAAI,MAAM,GAAG;AACrC,sBAAY;AACZ;AAAA,QACF;AACA,iBAAS,OAAO;AAAA,MAClB;AAEA,UAAI,WAAW;AACb,eAAO;AAAA,MACT;AAEA,YAAM,MAAM,aAAa;AACzB,YAAM,eAAe,MAAM;AACzB,yCAAY,IAAI,KAAK;AACrB,YAAI,CAAC,IAAI,YAAY;AACnB,sBAAY,OAAO,YAAY;AAC/B,gCAAsB,OAAO,GAAG;AAAA,QAClC;AAAA,MACF;AAEA,kBAAY,IAAI,YAAY;AAC5B,4BAAsB,IAAI,GAAG;AAAA,IAC/B;AAEA,WAAO;AAAA,EACT;AAGA,QAAM,QAAQ,CAAC,aAAsC;AAEnD,UAAM,gBAAgB,OAAO,aAAa,aAAc,SAA+B,KAAK,IAAI;AAEhG,QAAI,wBAAQ,SAAS,CAAC,wBAAQ,MAAM,kBAAkB;AACpD,8BAAQ,MAAM,eAAe;AAAA,IAC/B;AAEA,QAAI,KAAC,yBAAW,OAAO,aAAa,GAAG;AACrC;AAAA,IACF;AAEA,YAAQ;AAER,mBAAe;AAAA,EACjB;AAEA,SAAO,CAAC,MAAM,OAAO,cAAc;AACrC;AAEO,SAAS,aAAa,QAAkB;AAC7C,QAAM,YAAY,MAAM;AACtB,QAAI;AACF,kBAAY,KAAK,SAAS;AAC1B,aAAO;AAAA,IACT,UAAE;AACA,kBAAY,IAAI;AAAA,IAClB;AAAA,EACF;AAEA,YAAU;AACZ;AAQO,SAAS,kBAAqB,cAAiC;AACpE,QAAM,CAAC,OAAO,EAAE,cAAc,IAAI,aAAa,YAAY;AAG3D,QAAM,SAAS,CAAC,MAAc,aAAsC;AAClE,UAAMA,eAAU,kBAAI,cAAc,IAAI;AAEtC,UAAM,gBAAgB,OAAO,aAAa,aAAc,SAA+BA,QAAO,IAAI;AAElG,QAAI,KAAC,yBAAWA,UAAS,aAAa,GAAG;AACvC;AAAA,IACF;AAEA,0BAAI,cAAc,MAAM,aAAa;AACrC,mBAAe;AAAA,EACjB;AAEA,SAAO,CAAC,OAAO,MAAM;AACvB;",
  "names": ["current"]
}
