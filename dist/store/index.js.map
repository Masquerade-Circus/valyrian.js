{
  "version": 3,
  "sources": ["../../lib/store/index.ts"],
  "sourcesContent": ["import { update } from \"valyrian.js\";\n\ninterface StoreOptions {\n  state?: Record<string, unknown> | (() => Record<string, unknown>);\n  getters?: Record<string, Function>;\n  mutations?: Record<string, Function>;\n  actions?: Record<string, Function>;\n}\n\ninterface StoreInstance {\n  // eslint-disable-next-line no-unused-vars\n  new (options: StoreOptions): StoreInstance;\n  state: Record<string, any>;\n  getters?: Record<string, any>;\n  // eslint-disable-next-line no-unused-vars\n  commit: (type: string, ...payload: any[]) => void;\n  // eslint-disable-next-line no-unused-vars\n  dispatch: (type: string, ...payload: any[]) => void;\n}\n\nfunction keyExists(typeOfKey: string, object: Record<string, unknown>, key: string) {\n  if (key in object === false) {\n    throw new Error(`The ${typeOfKey} \"${key}\" does not exists.`);\n  }\n}\n\nfunction deepFreeze(obj: any) {\n  if (typeof obj === \"object\" && obj !== null && !Object.isFrozen(obj)) {\n    if (Array.isArray(obj)) {\n      for (let i = 0, l = obj.length; i < l; i++) {\n        deepFreeze(obj[i]);\n      }\n    } else {\n      let props = Reflect.ownKeys(obj);\n      for (let i = 0, l = props.length; i < l; i++) {\n        deepFreeze(obj[props[i]]);\n      }\n    }\n    Object.freeze(obj);\n  }\n\n  return obj;\n}\n\nlet updateTimeout: any;\nfunction delayedUpdate() {\n  clearTimeout(updateTimeout);\n  updateTimeout = setTimeout(update);\n}\n\nexport const Store = function Store(\n  this: StoreInstance,\n  { state = {}, getters = {}, actions = {}, mutations = {} }: StoreOptions = {}\n) {\n  let frozen = true;\n\n  function isUnfrozen() {\n    if (frozen) {\n      throw new Error(\"You need to commit a mutation to change the state\");\n    }\n  }\n\n  let localState = typeof state === \"function\" ? state() : state;\n\n  this.state = new Proxy(localState || {}, {\n    get: (state, prop: string) => deepFreeze(state[prop]),\n    set: (state, prop: string, value: any) => {\n      isUnfrozen();\n      state[prop] = value;\n      return true;\n    },\n    deleteProperty: (state, prop: string) => {\n      isUnfrozen();\n      Reflect.deleteProperty(state, prop);\n      return true;\n    }\n  });\n\n  this.getters = new Proxy(getters, {\n    get: (getters, getter: string) => {\n      try {\n        return getters[getter](this.state, this.getters);\n      } catch (e) {\n        // Getters should fail silently\n      }\n    }\n  });\n\n  this.commit = (mutation, ...args) => {\n    keyExists(\"mutation\", mutations, mutation);\n    frozen = false;\n    mutations[mutation](this.state, ...args);\n    frozen = true;\n    delayedUpdate();\n  };\n\n  this.dispatch = (action, ...args) => {\n    keyExists(\"action\", actions, action);\n    return Promise.resolve(actions[action](this, ...args));\n  };\n} as unknown as StoreInstance;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuB;AAoBvB,SAAS,UAAU,WAAmB,QAAiC,KAAa;AAClF,MAAI,OAAO,WAAW,OAAO;AAC3B,UAAM,IAAI,MAAM,OAAO,SAAS,KAAK,GAAG,oBAAoB;AAAA,EAC9D;AACF;AAEA,SAAS,WAAW,KAAU;AAC5B,MAAI,OAAO,QAAQ,YAAY,QAAQ,QAAQ,CAAC,OAAO,SAAS,GAAG,GAAG;AACpE,QAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,eAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,IAAI,GAAG,KAAK;AAC1C,mBAAW,IAAI,CAAC,CAAC;AAAA,MACnB;AAAA,IACF,OAAO;AACL,UAAI,QAAQ,QAAQ,QAAQ,GAAG;AAC/B,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,IAAI,GAAG,KAAK;AAC5C,mBAAW,IAAI,MAAM,CAAC,CAAC,CAAC;AAAA,MAC1B;AAAA,IACF;AACA,WAAO,OAAO,GAAG;AAAA,EACnB;AAEA,SAAO;AACT;AAEA,IAAI;AACJ,SAAS,gBAAgB;AACvB,eAAa,aAAa;AAC1B,kBAAgB,WAAW,sBAAM;AACnC;AAEO,IAAM,QAAQ,SAASA,OAE5B,EAAE,QAAQ,CAAC,GAAG,UAAU,CAAC,GAAG,UAAU,CAAC,GAAG,YAAY,CAAC,EAAE,IAAkB,CAAC,GAC5E;AACA,MAAI,SAAS;AAEb,WAAS,aAAa;AACpB,QAAI,QAAQ;AACV,YAAM,IAAI,MAAM,mDAAmD;AAAA,IACrE;AAAA,EACF;AAEA,MAAI,aAAa,OAAO,UAAU,aAAa,MAAM,IAAI;AAEzD,OAAK,QAAQ,IAAI,MAAM,cAAc,CAAC,GAAG;AAAA,IACvC,KAAK,CAACC,QAAO,SAAiB,WAAWA,OAAM,IAAI,CAAC;AAAA,IACpD,KAAK,CAACA,QAAO,MAAc,UAAe;AACxC,iBAAW;AACX,MAAAA,OAAM,IAAI,IAAI;AACd,aAAO;AAAA,IACT;AAAA,IACA,gBAAgB,CAACA,QAAO,SAAiB;AACvC,iBAAW;AACX,cAAQ,eAAeA,QAAO,IAAI;AAClC,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AAED,OAAK,UAAU,IAAI,MAAM,SAAS;AAAA,IAChC,KAAK,CAACC,UAAS,WAAmB;AAChC,UAAI;AACF,eAAOA,SAAQ,MAAM,EAAE,KAAK,OAAO,KAAK,OAAO;AAAA,MACjD,SAAS,GAAG;AAAA,MAEZ;AAAA,IACF;AAAA,EACF,CAAC;AAED,OAAK,SAAS,CAAC,aAAa,SAAS;AACnC,cAAU,YAAY,WAAW,QAAQ;AACzC,aAAS;AACT,cAAU,QAAQ,EAAE,KAAK,OAAO,GAAG,IAAI;AACvC,aAAS;AACT,kBAAc;AAAA,EAChB;AAEA,OAAK,WAAW,CAAC,WAAW,SAAS;AACnC,cAAU,UAAU,SAAS,MAAM;AACnC,WAAO,QAAQ,QAAQ,QAAQ,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC;AAAA,EACvD;AACF;",
  "names": ["Store", "state", "getters"]
}
