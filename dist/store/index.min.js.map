//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1cGRhdGVUaW1lb3V0IiwibG9jYWxWYWx5cmlhbiIsInVwZGF0ZSIsImtleUV4aXN0cyIsInR5cGVPZktleSIsIm9iamVjdCIsImtleSIsIkVycm9yIiwiZGVlcEZyZWV6ZSIsIm9iaiIsIk9iamVjdCIsImlzRnJvemVuIiwiQXJyYXkiLCJpc0FycmF5IiwiaSIsImwiLCJsZW5ndGgiLCJwcm9wcyIsIlJlZmxlY3QiLCJvd25LZXlzIiwiZnJlZXplIiwiU3RvcmUiLCJzdGF0ZSIsImdldHRlcnMiLCJhY3Rpb25zIiwibXV0YXRpb25zIiwiZnJvemVuIiwiaXNVbmZyb3plbiIsImxvY2FsU3RhdGUiLCJ0aGlzIiwiUHJveHkiLCJnZXQiLCJwcm9wIiwic2V0IiwidmFsdWUiLCJkZWxldGVQcm9wZXJ0eSIsImdldHRlciIsImUiLCJjb21taXQiLCJtdXRhdGlvbiIsImFyZ3MiLCJjbGVhclRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiZGlzcGF0Y2giLCJhY3Rpb24iLCJQcm9taXNlIiwicmVzb2x2ZSIsInYiLCJvcHRpb25zT3JTdG9yZSIsInN0b3JlIiwiYmluZCJdLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9zdG9yZS9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWYWx5cmlhbiB9IGZyb20gXCJWYWx5cmlhblwiO1xuXG5pbnRlcmZhY2UgU3RvcmVPcHRpb25zIHtcbiAgc3RhdGU/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPiB8ICgoKSA9PiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPik7XG4gIGdldHRlcnM/OiBSZWNvcmQ8c3RyaW5nLCBGdW5jdGlvbj47XG4gIG11dGF0aW9ucz86IFJlY29yZDxzdHJpbmcsIEZ1bmN0aW9uPjtcbiAgYWN0aW9ucz86IFJlY29yZDxzdHJpbmcsIEZ1bmN0aW9uPjtcbn1cblxuaW50ZXJmYWNlIFN0b3JlSW5zdGFuY2Uge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgbmV3IChvcHRpb25zOiBTdG9yZU9wdGlvbnMpOiBTdG9yZUluc3RhbmNlO1xuICBzdGF0ZTogUmVjb3JkPHN0cmluZywgYW55PjtcbiAgZ2V0dGVycz86IFJlY29yZDxzdHJpbmcsIGFueT47XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuICBjb21taXQ6ICh0eXBlOiBzdHJpbmcsIC4uLnBheWxvYWQ6IGFueVtdKSA9PiB2b2lkO1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgZGlzcGF0Y2g6ICh0eXBlOiBzdHJpbmcsIC4uLnBheWxvYWQ6IGFueVtdKSA9PiB2b2lkO1xufVxuXG5kZWNsYXJlIG1vZHVsZSBcIlZhbHlyaWFuXCIge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgaW50ZXJmYWNlIFZhbHlyaWFuIHtcbiAgICBzdG9yZT86IFN0b3JlSW5zdGFuY2U7XG4gICAgY29tbWl0PzogU3RvcmVJbnN0YW5jZVtcImNvbW1pdFwiXTtcbiAgICBkaXNwYXRjaD86IFN0b3JlSW5zdGFuY2VbXCJkaXNwYXRjaFwiXTtcbiAgICBzdGF0ZT86IFN0b3JlSW5zdGFuY2VbXCJzdGF0ZVwiXTtcbiAgICBnZXR0ZXJzPzogU3RvcmVJbnN0YW5jZVtcImdldHRlcnNcIl07XG4gIH1cbn1cblxubGV0IGxvY2FsVmFseXJpYW46IFZhbHlyaWFuID0ge1xuICB1cGRhdGU6ICgpID0+IHt9XG59IGFzIHVua25vd24gYXMgVmFseXJpYW47XG5cbmZ1bmN0aW9uIGtleUV4aXN0cyh0eXBlT2ZLZXk6IHN0cmluZywgb2JqZWN0OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPiwga2V5OiBzdHJpbmcpIHtcbiAgaWYgKGtleSBpbiBvYmplY3QgPT09IGZhbHNlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgJHt0eXBlT2ZLZXl9IFwiJHtrZXl9XCIgZG9lcyBub3QgZXhpc3RzLmApO1xuICB9XG59XG5cbmZ1bmN0aW9uIGRlZXBGcmVlemUob2JqOiBhbnkpIHtcbiAgaWYgKHR5cGVvZiBvYmogPT09IFwib2JqZWN0XCIgJiYgb2JqICE9PSBudWxsICYmICFPYmplY3QuaXNGcm96ZW4ob2JqKSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KG9iaikpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwLCBsID0gb2JqLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBkZWVwRnJlZXplKG9ialtpXSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBwcm9wcyA9IFJlZmxlY3Qub3duS2V5cyhvYmopO1xuICAgICAgZm9yIChsZXQgaSA9IDAsIGwgPSBwcm9wcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgZGVlcEZyZWV6ZShvYmpbcHJvcHNbaV1dKTtcbiAgICAgIH1cbiAgICB9XG4gICAgT2JqZWN0LmZyZWV6ZShvYmopO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxubGV0IHVwZGF0ZVRpbWVvdXQ6IGFueTtcbmZ1bmN0aW9uIGRlbGF5ZWRVcGRhdGUoKSB7XG4gIGNsZWFyVGltZW91dCh1cGRhdGVUaW1lb3V0KTtcbiAgdXBkYXRlVGltZW91dCA9IHNldFRpbWVvdXQobG9jYWxWYWx5cmlhbi51cGRhdGUpO1xufVxuXG5leHBvcnQgY29uc3QgU3RvcmUgPSBmdW5jdGlvbiBTdG9yZSh0aGlzOiBTdG9yZUluc3RhbmNlLCB7IHN0YXRlID0ge30sIGdldHRlcnMgPSB7fSwgYWN0aW9ucyA9IHt9LCBtdXRhdGlvbnMgPSB7fSB9OiBTdG9yZU9wdGlvbnMgPSB7fSkge1xuICBsZXQgZnJvemVuID0gdHJ1ZTtcblxuICBmdW5jdGlvbiBpc1VuZnJvemVuKCkge1xuICAgIGlmIChmcm96ZW4pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIllvdSBuZWVkIHRvIGNvbW1pdCBhIG11dGF0aW9uIHRvIGNoYW5nZSB0aGUgc3RhdGVcIik7XG4gICAgfVxuICB9XG5cbiAgbGV0IGxvY2FsU3RhdGUgPSB0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHN0YXRlKCkgOiBzdGF0ZTtcblxuICB0aGlzLnN0YXRlID0gbmV3IFByb3h5KGxvY2FsU3RhdGUgfHwge30sIHtcbiAgICBnZXQ6IChzdGF0ZSwgcHJvcDogc3RyaW5nKSA9PiBkZWVwRnJlZXplKHN0YXRlW3Byb3BdKSxcbiAgICBzZXQ6IChzdGF0ZSwgcHJvcDogc3RyaW5nLCB2YWx1ZTogYW55KSA9PiB7XG4gICAgICBpc1VuZnJvemVuKCk7XG4gICAgICBzdGF0ZVtwcm9wXSA9IHZhbHVlO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSxcbiAgICBkZWxldGVQcm9wZXJ0eTogKHN0YXRlLCBwcm9wOiBzdHJpbmcpID0+IHtcbiAgICAgIGlzVW5mcm96ZW4oKTtcbiAgICAgIFJlZmxlY3QuZGVsZXRlUHJvcGVydHkoc3RhdGUsIHByb3ApO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9KTtcblxuICB0aGlzLmdldHRlcnMgPSBuZXcgUHJveHkoZ2V0dGVycywge1xuICAgIGdldDogKGdldHRlcnMsIGdldHRlcjogc3RyaW5nKSA9PiB7XG4gICAgICB0cnkge1xuICAgICAgICByZXR1cm4gZ2V0dGVyc1tnZXR0ZXJdKHRoaXMuc3RhdGUsIHRoaXMuZ2V0dGVycyk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIEdldHRlcnMgc2hvdWxkIGZhaWwgc2lsZW50bHlcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIHRoaXMuY29tbWl0ID0gKG11dGF0aW9uLCAuLi5hcmdzKSA9PiB7XG4gICAga2V5RXhpc3RzKFwibXV0YXRpb25cIiwgbXV0YXRpb25zLCBtdXRhdGlvbik7XG4gICAgZnJvemVuID0gZmFsc2U7XG4gICAgbXV0YXRpb25zW211dGF0aW9uXSh0aGlzLnN0YXRlLCAuLi5hcmdzKTtcbiAgICBmcm96ZW4gPSB0cnVlO1xuICAgIGRlbGF5ZWRVcGRhdGUoKTtcbiAgfTtcblxuICB0aGlzLmRpc3BhdGNoID0gKGFjdGlvbiwgLi4uYXJncykgPT4ge1xuICAgIGtleUV4aXN0cyhcImFjdGlvblwiLCBhY3Rpb25zLCBhY3Rpb24pO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoYWN0aW9uc1thY3Rpb25dKHRoaXMsIC4uLmFyZ3MpKTtcbiAgfTtcbn0gYXMgdW5rbm93biBhcyBTdG9yZUluc3RhbmNlO1xuXG5leHBvcnQgZnVuY3Rpb24gcGx1Z2luKHY6IFZhbHlyaWFuLCBvcHRpb25zT3JTdG9yZT86IFN0b3JlT3B0aW9ucyB8IFN0b3JlSW5zdGFuY2UpIHtcbiAgbG9jYWxWYWx5cmlhbiA9IHY7XG4gIGlmIChvcHRpb25zT3JTdG9yZSkge1xuICAgIHYuc3RvcmUgPSBvcHRpb25zT3JTdG9yZSBpbnN0YW5jZW9mIFN0b3JlID8gb3B0aW9uc09yU3RvcmUgOiBuZXcgU3RvcmUob3B0aW9uc09yU3RvcmUpO1xuICAgIHYuY29tbWl0ID0gdi5zdG9yZS5jb21taXQuYmluZCh2LnN0b3JlKTtcbiAgICB2LmRpc3BhdGNoID0gdi5zdG9yZS5kaXNwYXRjaC5iaW5kKHYuc3RvcmUpO1xuICAgIHYuc3RhdGUgPSB2LnN0b3JlLnN0YXRlO1xuICAgIHYuZ2V0dGVycyA9IHYuc3RvcmUuZ2V0dGVycztcbiAgfVxuICByZXR1cm4gU3RvcmU7XG59XG4iXSwibWFwcGluZ3MiOiJNQStCQSxJQTRCSUEsRUE1QkFDLEVBQTBCLENBQzVCQyxPQUFRLFFBR1YsU0FBU0MsRUFBVUMsRUFBbUJDLEVBQWlDQyxHQUNyRSxHQUFJQSxLQUFPRCxJQUFXLEVBQ3BCLE1BQU0sSUFBSUUsTUFBTSxPQUFPSCxNQUFjRSxzQkFFekMsQ0FFQSxTQUFTRSxFQUFXQyxHQUNsQixHQUFtQixpQkFBUkEsR0FBNEIsT0FBUkEsSUFBaUJDLE9BQU9DLFNBQVNGLEdBQU0sQ0FDcEUsR0FBSUcsTUFBTUMsUUFBUUosR0FDaEIsUUFBU0ssRUFBSSxFQUFHQyxFQUFJTixFQUFJTyxPQUFRRixFQUFJQyxFQUFHRCxJQUNyQ04sRUFBV0MsRUFBSUssUUFFWixDQUNMLElBQUlHLEVBQVFDLFFBQVFDLFFBQVFWLEdBQzVCLFFBQVNLLEVBQUksRUFBR0MsRUFBSUUsRUFBTUQsT0FBUUYsRUFBSUMsRUFBR0QsSUFDdkNOLEVBQVdDLEVBQUlRLEVBQU1ILElBRXpCLENBQ0FKLE9BQU9VLE9BQU9YLEVBQ2hCLENBRUEsT0FBT0EsQ0FDVCxDQVFPLElBQU1ZLEVBQVEsVUFBb0NDLE1BQUVBLEVBQVEsQ0FBQyxFQUFBQyxRQUFHQSxFQUFVLENBQUMsRUFBQUMsUUFBR0EsRUFBVSxDQUFDLEVBQUFDLFVBQUdBLEVBQVksQ0FBQyxHQUFvQixDQUFDLEdBQ25JLElBQUlDLEdBQVMsRUFFYixTQUFTQyxJQUNQLEdBQUlELEVBQ0YsTUFBTSxJQUFJbkIsTUFBTSxvREFFcEIsQ0FFQSxJQUFJcUIsRUFBOEIsbUJBQVZOLEVBQXVCQSxJQUFVQSxFQUV6RE8sS0FBS1AsTUFBUSxJQUFJUSxNQUFNRixHQUFjLENBQUMsRUFBRyxDQUN2Q0csSUFBSyxDQUFDVCxFQUFPVSxJQUFpQnhCLEVBQVdjLEVBQU1VLElBQy9DQyxJQUFLLENBQUNYLEVBQU9VLEVBQWNFLEtBQ3pCUCxJQUNBTCxFQUFNVSxHQUFRRSxHQUNQLEdBRVRDLGVBQWdCLENBQUNiLEVBQU9VLEtBQ3RCTCxJQUNBVCxRQUFRaUIsZUFBZWIsRUFBT1UsSUFDdkIsS0FJWEgsS0FBS04sUUFBVSxJQUFJTyxNQUFNUCxFQUFTLENBQ2hDUSxJQUFLLENBQUNSLEVBQVNhLEtBQ2IsSUFDRSxPQUFPYixFQUFRYSxHQUFRUCxLQUFLUCxNQUFPTyxLQUFLTixRQUcxQyxDQUZBLE1BQVNjLEdBRVQsS0FJSlIsS0FBS1MsT0FBUyxDQUFDQyxLQUFhQyxLQUMxQnJDLEVBQVUsV0FBWXNCLEVBQVdjLEdBQ2pDYixHQUFTLEVBQ1RELEVBQVVjLEdBQVVWLEtBQUtQLFNBQVVrQixHQUNuQ2QsR0FBUyxFQTNDWGUsYUFBYXpDLEdBQ2JBLEVBQWdCMEMsV0FBV3pDLEVBQWNDLE9BMkN6QixFQUdoQjJCLEtBQUtjLFNBQVcsQ0FBQ0MsS0FBV0osS0FDMUJyQyxFQUFVLFNBQVVxQixFQUFTb0IsR0FDdEJDLFFBQVFDLFFBQVF0QixFQUFRb0IsR0FBUWYsUUFBU1csSUFFcEQsRSxzQkFFTyxTQUFnQk8sRUFBYUMsR0FTbEMsT0FSQS9DLEVBQWdCOEMsRUFDWkMsSUFDRkQsRUFBRUUsTUFBUUQsYUFBMEIzQixFQUFRMkIsRUFBaUIsSUFBSTNCLEVBQU0yQixHQUN2RUQsRUFBRVQsT0FBU1MsRUFBRUUsTUFBTVgsT0FBT1ksS0FBS0gsRUFBRUUsT0FDakNGLEVBQUVKLFNBQVdJLEVBQUVFLE1BQU1OLFNBQVNPLEtBQUtILEVBQUVFLE9BQ3JDRixFQUFFekIsTUFBUXlCLEVBQUVFLE1BQU0zQixNQUNsQnlCLEVBQUV4QixRQUFVd0IsRUFBRUUsTUFBTTFCLFNBRWZGLENBQ1QsRyJ9