{
  "version": 3,
  "sources": ["../lib/index.ts"],
  "sourcesContent": ["/* eslint-disable indent */\n/* eslint-disable eqeqeq */\n/* eslint-disable complexity */\ndeclare global {\n  // eslint-disable-next-line vars-on-top, no-var\n  var document: Document;\n  namespace JSX {\n    interface IntrinsicElements {\n      [elemName: string]: any;\n    }\n  }\n}\n\ninterface DefaultRecord extends Record<string | number | symbol, any> {}\n\nexport interface VnodeProperties extends DefaultRecord {\n  key?: string | number;\n}\n\nexport interface DomElement extends Element, DefaultRecord {}\n\nexport interface DomElementWithVnode extends DomElement {\n  vnode: VnodeWithDom;\n}\n\nexport interface Component extends DefaultRecord {\n  (props: VnodeProperties, children: any[]): Vnode | any;\n}\n\nexport interface POJOComponent extends DefaultRecord {\n  view: Component;\n}\n\nexport type ValyrianComponent = Component | POJOComponent;\n\nexport interface VnodeComponentInterface extends Vnode {\n  tag: ValyrianComponent;\n}\n\nexport interface Children extends Array<Vnode | VnodeComponentInterface | ValyrianComponent | any> {}\n\nexport interface Directive {\n  (vnode: VnodeWithDom, oldVnode: VnodeWithDom | null): void | boolean;\n}\n\nexport const isNodeJs = Boolean(typeof process !== \"undefined\" && process.versions && process.versions.node);\n\nconst byStringMatcherCache: Record<string, (vnode: VnodeWithDom) => boolean> = {};\nconst byStringMatcherRegex = /^([^.#]*)?#?([^.]*)?(.*)?$/;\n\nfunction byStringMatcher(string: string) {\n  if (!byStringMatcherCache[string]) {\n    // Use regular expression to extract tag, id, and classes\n    const match = byStringMatcherRegex.exec(string) as RegExpMatchArray;\n    const tag = match[1];\n    const id = match[2];\n    const classes = match[3] ? match[3].split(\".\").splice(1) : null;\n\n    let matcher: (vnode: VnodeWithDom) => boolean = (vnode: VnodeWithDom) => vnode instanceof Vnode;\n    if (tag) {\n      const previousMatcher = matcher;\n      matcher = (vnode: VnodeWithDom) => previousMatcher(vnode) && vnode.tag === tag;\n    }\n\n    if (id) {\n      const previousMatcher = matcher;\n      matcher = (vnode: VnodeWithDom) => previousMatcher(vnode) && vnode.dom.id === id;\n    }\n\n    if (classes) {\n      const previousMatcher = matcher;\n      matcher = (vnode: VnodeWithDom) => {\n        if (!previousMatcher(vnode)) {\n          return false;\n        }\n\n        for (const className of classes) {\n          if (!vnode.dom.classList.contains(className)) {\n            return false;\n          }\n        }\n\n        return true;\n      };\n    }\n\n    byStringMatcherCache[string] = matcher;\n  }\n\n  return byStringMatcherCache[string];\n}\n\nexport class Vnode {\n  constructor(\n    public tag: string | Component | POJOComponent,\n    public props: VnodeProperties,\n    public children: Children,\n    public dom?: DomElementWithVnode,\n    public processed?: boolean,\n    public isSVG?: boolean,\n    public _parent?: Vnode\n  ) {}\n\n  parent(matcher?: string | ((vnode: VnodeWithDom) => boolean)): Vnode | void {\n    if (!matcher) {\n      return this._parent;\n    }\n\n    const finalMatcher = typeof matcher === \"string\" ? byStringMatcher(matcher) : matcher;\n\n    let parent = this._parent as VnodeWithDom;\n    while (parent) {\n      if (finalMatcher(parent)) {\n        return parent;\n      }\n      parent = parent._parent;\n    }\n  }\n\n  findChild(filter: string | ((vnode: VnodeWithDom) => boolean)): VnodeWithDom | void {\n    const finalFilter =\n      typeof filter === \"string\"\n        ? byStringMatcher(filter)\n        : (vnode: VnodeWithDom) => vnode instanceof Vnode && filter(vnode);\n\n    for (let i = 0, l = this.children.length; i < l; i++) {\n      const child = this.children[i];\n      if (finalFilter(child as VnodeWithDom)) {\n        return child as VnodeWithDom;\n      }\n    }\n\n    for (let i = 0, l = this.children.length; i < l; i++) {\n      const child = this.children[i];\n      if (child instanceof Vnode) {\n        const result = child.findChild(finalFilter);\n        if (result) {\n          return result;\n        }\n      }\n    }\n  }\n\n  filterChildren(filter: string | ((vnode: VnodeWithDom, i: number) => boolean)): VnodeWithDom[] {\n    const finalFilter =\n      typeof filter === \"string\"\n        ? byStringMatcher(filter)\n        : (vnode: VnodeWithDom, i: number) => vnode instanceof Vnode && filter(vnode, i);\n    const result: VnodeWithDom[] = [];\n    for (let i = 0, l = this.children.length; i < l; i++) {\n      const child = this.children[i];\n      if (finalFilter(child as VnodeWithDom, i)) {\n        result.push(child as VnodeWithDom);\n      }\n    }\n\n    return result;\n  }\n\n  get(index: number): VnodeWithDom | void {\n    return this.children[index];\n  }\n\n  remove(this: VnodeWithDom) {\n    this.dom.remove();\n    cleanupVnodeChildren(this);\n    domToVnodeWeakMap.delete(this.dom);\n    this._parent.children.splice(this._parent.children.indexOf(this), 1);\n  }\n\n  replace(this: VnodeWithDom, newChild: VnodeWithDom) {\n    this._parent.children.splice(this._parent.children.indexOf(this), 1, newChild);\n    processVnode(this._parent, newChild, this.dom);\n    cleanupVnodeChildren(this);\n    domToVnodeWeakMap.delete(this.dom);\n  }\n}\n\nexport interface VnodeWithDom extends Vnode {\n  tag: string;\n  dom: DomElementWithVnode;\n  _parent: VnodeWithDom;\n}\n\nexport const isComponent = (component: unknown): component is Component => typeof component === \"function\";\nexport const isVnode = (object?: unknown): object is Vnode => object instanceof Vnode;\n\nexport const isVnodeComponent = (object?: unknown): object is VnodeComponentInterface => {\n  return isVnode(object) && isComponent(object.tag);\n};\n\nexport function domToVnode(dom: any): VnodeWithDom {\n  if (dom.nodeType === 3) {\n    return dom.nodeValue;\n  }\n\n  const vnode = new Vnode(dom.nodeName.toLowerCase(), {}, []) as VnodeWithDom;\n  vnode.dom = dom;\n  domToVnodeWeakMap.set(dom, vnode);\n\n  for (let i = 0, l = dom.childNodes.length; i < l; i++) {\n    const childDom = dom.childNodes[i];\n    if (childDom.nodeType === 3) {\n      vnode.children.push(childDom.nodeValue);\n    } else if (childDom.nodeType === 1) {\n      const childVnode = domToVnode(childDom);\n      childVnode._parent = vnode;\n      vnode.children.push();\n    }\n  }\n\n  for (let i = 0, l = dom.attributes.length; i < l; i++) {\n    const attr = dom.attributes[i];\n    vnode.props[attr.nodeName] = attr.nodeValue;\n  }\n\n  return vnode as VnodeWithDom;\n}\n\nexport function trust(htmlString: string) {\n  const div = document.createElement(\"div\");\n  div.innerHTML = htmlString.trim();\n  return Array.from(div.childNodes).map(domToVnode);\n}\n\nlet mainComponent: VnodeComponentInterface | null = null;\nlet mainVnode: VnodeWithDom | null = null;\nlet isMounted = false;\n\n// This object is used to store the current virtual node and component being rendered.\nexport const current = {\n  vnode: null as Vnode | null,\n  component: null as ValyrianComponent | null,\n  event: null as Event | null\n};\n\n/* Reserved props ----------------------------------------------------------- */\n// This object is used to store the names of reserved props, which are props that are reserved\n// for special purposes and should not be used as regular component props.\nexport const reservedProps: Record<string, true> = {\n  key: true,\n  state: true,\n  \"v-keep\": true, // Used to keep the element when the parent is updated\n  \"v-text\": true, // Used to set the text content of an element\n\n  // Built in directives\n  \"v-if\": true,\n  \"v-for\": true,\n  \"v-show\": true,\n  \"v-class\": true,\n  \"v-html\": true,\n  \"v-model\": true,\n  \"v-create\": true,\n  \"v-update\": true,\n  \"v-cleanup\": true\n};\n\n/* Mounting, Updating, Cleanup and Unmounting ------------------------------- */\nconst onCleanupSet = new Set<Function>();\nconst onMountSet = new Set<Function>();\nconst onUpdateSet = new Set<Function>();\nconst onUnmountSet = new Set<Function>();\nexport const onMount = (callback: Function) => !isMounted && onMountSet.add(callback);\nexport const onUpdate = (callback: Function) => onUpdateSet.add(callback);\nexport const onCleanup = (callback: Function) => onCleanupSet.add(callback);\nexport const onUnmount = (callback: Function) => !isMounted && onUnmountSet.add(callback);\nconst callSet = (set: Set<Function>) => {\n  for (const callback of set) {\n    callback();\n  }\n  set.clear();\n};\n\n/* Directives --------------------------------------------------------------- */\nexport const directives: Record<string, Directive> = {\n  \"v-if\": (vnode: VnodeWithDom) => {\n    const bool = Boolean(vnode.props[\"v-if\"]);\n    if (bool) {\n      const parentNode = vnode.dom?.parentNode;\n      if (parentNode) {\n        const newdom = document.createTextNode(\"\");\n        parentNode.replaceChild(newdom, vnode.dom);\n      }\n\n      return false;\n    }\n  },\n\n  \"v-for\": (vnode: VnodeWithDom) => {\n    const [set, callback] = vnode.props[\"v-for\"];\n    for (let i = 0, l = set.length; i < l; i++) {\n      vnode.children.push(callback(set[i], i));\n    }\n  },\n\n  \"v-show\": (vnode: VnodeWithDom) => {\n    const bool = Boolean(vnode.props[\"v-show\"]);\n    (\n      vnode.dom as unknown as {\n        style: { display: string };\n      }\n    ).style.display = bool ? \"\" : \"none\";\n  },\n\n  \"v-class\": (vnode: VnodeWithDom) => {\n    const classes = vnode.props[\"v-class\"];\n    const classList = (vnode.dom as DomElement).classList;\n    for (const name in classes) {\n      const value = typeof classes[name] === \"function\" ? (classes[name] as Function)() : classes[name];\n      classList.toggle(name, value);\n    }\n  },\n\n  \"v-html\": (vnode: VnodeWithDom) => {\n    vnode.children = [trust(vnode.props[\"v-html\"])];\n  },\n\n  \"v-create\": (vnode: VnodeWithDom, oldVnode: VnodeWithDom | null) => {\n    if (!oldVnode) {\n      const callback = vnode.props[\"v-create\"];\n      const cleanup = callback(vnode);\n\n      if (typeof cleanup === \"function\") {\n        onCleanup(cleanup);\n      }\n    }\n  },\n\n  \"v-update\": (vnode: VnodeWithDom, oldVnode: VnodeWithDom | null) => {\n    if (oldVnode) {\n      const callback = vnode.props[\"v-update\"];\n      const cleanup = callback(vnode, oldVnode);\n\n      if (typeof cleanup === \"function\") {\n        onCleanup(cleanup);\n      }\n    }\n  },\n\n  \"v-cleanup\": (vnode: VnodeWithDom) => {\n    const callback = vnode.props[\"v-cleanup\"];\n    onCleanup(() => callback(vnode));\n  }\n};\n\nexport function directive(name: string, directive: Directive) {\n  const directiveName = `v-${name}`;\n  directives[directiveName] = directive;\n  reservedProps[directiveName] = true;\n}\n\n/* Event listener ----------------------------------------------------------- */\nconst eventListenerNames: Record<string, true> = {};\n\nfunction eventListener(e: Event) {\n  current.event = e;\n  let dom = e.target as DomElement;\n  const name = `on${e.type}`;\n\n  while (dom) {\n    const oldVnode = domToVnodeWeakMap.get(dom);\n    if (oldVnode && oldVnode.props[name]) {\n      oldVnode.props[name](e, oldVnode);\n\n      if (!e.defaultPrevented) {\n        update();\n      }\n      return;\n    }\n    dom = dom.parentNode as DomElement;\n  }\n\n  current.event = null;\n}\n\nfunction sharedSetAttribute(\n  name: string,\n  value: any,\n  newVnode: VnodeWithDom,\n  oldVnode: VnodeWithDom | null\n): void | boolean {\n  if (typeof value === \"function\") {\n    if (name in eventListenerNames === false) {\n      (mainVnode as VnodeWithDom).dom.addEventListener(name.slice(2), eventListener);\n      eventListenerNames[name] = true;\n    }\n    return;\n  }\n\n  if (name === \"style\" && typeof value === \"object\") {\n    // Apply styles\n    for (const styleKey in value) {\n      if (value.hasOwnProperty(styleKey)) {\n        newVnode.dom.style[styleKey] = value[styleKey];\n      }\n    }\n    return;\n  }\n\n  if (name in newVnode.dom) {\n    if (newVnode.dom[name] != value) {\n      newVnode.dom[name] = value;\n    }\n    return;\n  }\n\n  if (!oldVnode || value !== oldVnode.props[name]) {\n    if (value === false) {\n      newVnode.dom.removeAttribute(name);\n    } else {\n      newVnode.dom.setAttribute(name, value);\n    }\n  }\n}\n\nexport function setAttribute(name: string, value: any, newVnode: VnodeWithDom, oldVnode: VnodeWithDom | null): void {\n  if (!reservedProps[name]) {\n    newVnode.props[name] = value;\n    sharedSetAttribute(name, value, newVnode, oldVnode);\n  }\n}\n\nfunction removeAttributes(vnode: VnodeWithDom, oldVnode: VnodeWithDom | null): void {\n  if (oldVnode) {\n    for (const name in oldVnode.props) {\n      if (!vnode.props[name] && !eventListenerNames[name] && !reservedProps[name]) {\n        if (name in vnode.dom) {\n          vnode.dom[name] = null;\n        } else {\n          vnode.dom.removeAttribute(name);\n        }\n      }\n    }\n  }\n}\n\nfunction addProperties(vnode: VnodeWithDom, oldVnode: VnodeWithDom | null) {\n  for (const name in vnode.props) {\n    if (reservedProps[name]) {\n      if (directives[name] && directives[name](vnode, oldVnode) === false) {\n        break;\n      }\n      continue;\n    }\n    sharedSetAttribute(name, vnode.props[name], vnode, oldVnode);\n  }\n}\n\nexport function updateAttributes(newVnode: VnodeWithDom, oldVnode: VnodeWithDom | null): void {\n  removeAttributes(newVnode, oldVnode);\n  addProperties(newVnode, oldVnode);\n}\n\n/* patch ------------------------------------------------------------------- */\n\nconst domToVnodeWeakMap = new WeakMap<DomElement, VnodeWithDom>();\n\nfunction createElement(tag: string, isSVG: boolean): DomElement {\n  return isSVG\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\n    : (document.createElement(tag) as DomElement);\n}\n\nfunction createNewElement(vnode: any, parentVnode: VnodeWithDom) {\n  if (vnode instanceof Vnode === false) {\n    return document.createTextNode(vnode);\n  }\n\n  vnode._parent = parentVnode;\n  const dom = createElement(vnode.tag, vnode.isSVG);\n  vnode.dom = dom;\n  domToVnodeWeakMap.set(dom, vnode);\n  addProperties(vnode, null);\n\n  if (\"v-text\" in vnode.props) {\n    dom.textContent = vnode.props[\"v-text\"];\n    return dom;\n  }\n\n  flatTree(vnode);\n\n  if (vnode.children.length === 0) {\n    return dom;\n  }\n\n  for (let i = 0, l = vnode.children.length; i < l; i++) {\n    const childVnode = vnode.children[i];\n    const childEl = createNewElement(childVnode, vnode);\n    dom.appendChild(childEl);\n  }\n\n  return dom;\n}\n\nfunction cleanupVnodeChildren(vnode: VnodeWithDom) {\n  for (let i = 0, l = vnode.dom.childNodes.length; i < l; i++) {\n    const child = vnode.dom.childNodes[i];\n    if (domToVnodeWeakMap.has(child as DomElement)) {\n      const oldVnode = domToVnodeWeakMap.get(child as DomElement) as VnodeWithDom;\n      cleanupVnodeChildren(oldVnode);\n      domToVnodeWeakMap.delete(child as DomElement);\n    }\n  }\n}\n\nfunction processVnode(newVnode: VnodeWithDom, newChild: VnodeWithDom, oldChild: DomElement): void {\n  newChild.isSVG = newVnode.isSVG || newChild.tag === \"svg\";\n\n  if (!oldChild || newChild.tag !== oldChild.nodeName.toLowerCase()) {\n    newChild.dom = createNewElement(newChild, newVnode) as DomElementWithVnode;\n    if (oldChild) {\n      newVnode.dom.replaceChild(newChild.dom, oldChild);\n    } else {\n      newVnode.dom.appendChild(newChild.dom);\n    }\n    return;\n  }\n\n  newChild._parent = newVnode;\n  const oldVnode = domToVnodeWeakMap.get(oldChild);\n  newChild.dom = oldChild as DomElementWithVnode;\n  domToVnodeWeakMap.set(oldChild, newChild);\n\n  if (oldVnode && \"v-keep\" in newChild.props && newChild.props[\"v-keep\"] === oldVnode.props[\"v-keep\"]) {\n    newChild.children = oldVnode.children;\n    return;\n  }\n\n  updateAttributes(newChild as VnodeWithDom, oldVnode || null);\n\n  if (\"v-text\" in newChild.props) {\n    if (newChild.dom.textContent != newChild.props[\"v-text\"]) {\n      newChild.dom.textContent = newChild.props[\"v-text\"];\n    }\n    return;\n  }\n\n  if (newChild.children.length === 0) {\n    if (newChild.dom.childNodes.length > 0) {\n      newChild.dom.textContent = \"\";\n      cleanupVnodeChildren(newChild);\n    }\n    return;\n  }\n\n  patch(newChild as VnodeWithDom);\n}\n\nfunction flatTree(newVnode: VnodeWithDom) {\n  current.vnode = newVnode;\n  const { children } = newVnode;\n  let i = 0;\n\n  while (i < children.length) {\n    const newChild = children[i];\n\n    if (newChild == null) {\n      children.splice(i, 1);\n      continue;\n    }\n\n    if (Array.isArray(newChild)) {\n      children.splice(i, 1, ...newChild);\n      continue;\n    }\n\n    if (newChild instanceof Vnode && typeof newChild.tag !== \"string\") {\n      const component = (\"view\" in newChild.tag ? newChild.tag.view : newChild.tag).bind(newChild.tag);\n      current.component = component;\n      children[i] = component(newChild.props, newChild.children);\n    }\n\n    i++;\n  }\n}\n\nexport function patch(newVnode: VnodeWithDom): void {\n  flatTree(newVnode);\n  const { dom, children } = newVnode;\n  const newTreeLength = children.length;\n\n  if (newTreeLength === 0) {\n    dom.textContent = \"\";\n    cleanupVnodeChildren(newVnode);\n    return;\n  }\n\n  const oldTree = dom.childNodes as unknown as DomElementWithVnode[];\n  const oldTreeLength = oldTree.length;\n  const firstOldVnode = oldTree[0] && domToVnodeWeakMap.get(oldTree[0]);\n\n  if (firstOldVnode && children[0] instanceof Vnode && \"key\" in children[0].props && \"key\" in firstOldVnode.props) {\n    const oldKeyedList: Record<string, number> = {};\n    const newKeyedList: Record<string, number> = {};\n    const childNodes = newVnode.dom.childNodes;\n\n    // Create key maps while also handling removal of nodes not present in children\n    for (let i = 0; i < oldTreeLength; i++) {\n      const oldVnode = domToVnodeWeakMap.get(oldTree[i]);\n      oldKeyedList[oldVnode?.props.key as any] = i;\n      if (i < newTreeLength) {\n        newKeyedList[children[i].props.key] = i;\n      }\n    }\n\n    for (let i = 0; i < newTreeLength; i++) {\n      const newChild = children[i];\n      newChild._parent = newVnode;\n      newChild.isSVG = newVnode.isSVG || newChild.tag === \"svg\";\n      const oldChildIndex = oldKeyedList[newChild.props.key];\n      const oldChild = oldTree[oldChildIndex];\n      let shouldPatch = true;\n\n      if (oldChild) {\n        newChild.dom = oldChild;\n        const oldVnode = domToVnodeWeakMap.get(oldChild) as VnodeWithDom;\n\n        newChild.dom = oldChild;\n        domToVnodeWeakMap.set(oldChild, newChild);\n\n        if (oldVnode && \"v-keep\" in newChild.props && newChild.props[\"v-keep\"] === oldVnode.props[\"v-keep\"]) {\n          newChild.children = oldVnode.children;\n          shouldPatch = false;\n        } else {\n          updateAttributes(newChild, oldVnode);\n          if (\"v-text\" in newChild.props) {\n            if (newChild.dom.textContent != newChild.props[\"v-text\"]) {\n              newChild.dom.textContent = newChild.props[\"v-text\"];\n            }\n            shouldPatch = false;\n          } else if (newChild.children.length === 0) {\n            if (newChild.dom.childNodes.length > 0) {\n              newChild.dom.textContent = \"\";\n              cleanupVnodeChildren(newChild);\n            }\n            shouldPatch = false;\n          }\n        }\n      } else {\n        newChild.dom = createNewElement(newChild, newVnode) as DomElementWithVnode;\n        shouldPatch = false;\n      }\n\n      const currentNode = childNodes[i];\n      if (!currentNode) {\n        newVnode.dom.appendChild(newChild.dom);\n      } else if (currentNode !== newChild.dom) {\n        newVnode.dom.replaceChild(newChild.dom, currentNode);\n      }\n\n      shouldPatch && patch(newChild);\n    }\n\n    for (let i = newTreeLength; i < oldTreeLength; i++) {\n      const oldVnode = domToVnodeWeakMap.get(oldTree[i]);\n      if (oldVnode && !newKeyedList[oldVnode.props.key as any]) {\n        const domToRemove = oldTree[i];\n        domToRemove.parentNode && domToRemove.remove();\n        cleanupVnodeChildren(oldVnode);\n      }\n    }\n    return;\n  }\n\n  const maxLen = Math.max(newTreeLength, oldTreeLength);\n\n  for (let i = 0; i < maxLen; i++) {\n    const newChild = children[i];\n    const oldChild = oldTree[i] as DomElementWithVnode;\n    const oldVnode = domToVnodeWeakMap.get(oldChild);\n\n    if (newChild === oldVnode) {\n      continue;\n    }\n\n    if (!oldChild) {\n      newVnode.dom.appendChild(createNewElement(newChild, newVnode));\n      continue;\n    }\n\n    if (!newChild) {\n      oldChild.remove();\n      oldVnode && cleanupVnodeChildren(oldVnode);\n      continue;\n    }\n\n    if (newChild instanceof Vnode === false) {\n      if (oldChild.nodeType !== 3) {\n        const textDom = document.createTextNode(newChild as string);\n        newVnode.dom.replaceChild(textDom, oldChild);\n        if (domToVnodeWeakMap.has(oldChild)) {\n          oldVnode && cleanupVnodeChildren(oldVnode);\n          domToVnodeWeakMap.delete(oldChild);\n        }\n      } else if (oldChild.nodeValue != newChild) {\n        oldChild.nodeValue = newChild as string;\n      }\n      continue;\n    }\n\n    processVnode(newVnode, newChild as VnodeWithDom, oldChild);\n  }\n}\n\nexport function update(): void | string {\n  if (mainVnode) {\n    callSet(onCleanupSet);\n    mainVnode.children = [mainComponent];\n    patch(mainVnode);\n    callSet(isMounted ? onUpdateSet : onMountSet);\n    isMounted = true;\n    current.vnode = null;\n    current.component = null;\n    if (isNodeJs) {\n      return mainVnode.dom.innerHTML;\n    }\n  }\n}\n\nexport function updateVnode(vnode: VnodeWithDom): string | void {\n  callSet(onCleanupSet);\n  patch(vnode);\n  callSet(isMounted ? onUpdateSet : onMountSet);\n  isMounted = true;\n  current.vnode = null;\n  current.component = null;\n  if (isNodeJs) {\n    return vnode.dom.innerHTML;\n  }\n}\n\nexport function unmount() {\n  if (mainVnode) {\n    mainComponent = new Vnode(() => null, {}, []) as VnodeComponentInterface;\n    const result = update();\n    callSet(onUnmountSet);\n    for (const name in eventListenerNames) {\n      mainVnode.dom.removeEventListener(name.slice(2).toLowerCase(), eventListener);\n      Reflect.deleteProperty(eventListenerNames, name);\n    }\n\n    mainComponent = null;\n    mainVnode = null;\n    isMounted = false;\n    current.vnode = null;\n    current.component = null;\n    return result;\n  }\n}\n\nexport function mount(dom: string | DomElement, component: any) {\n  const container =\n    typeof dom === \"string\" ? (isNodeJs ? createElement(dom, dom === \"svg\") : document.querySelector(dom)) : dom;\n  const vnodeComponent = isVnodeComponent(component)\n    ? component\n    : isComponent(component)\n    ? new Vnode(component, {}, [])\n    : new Vnode(() => component, {}, []);\n  if (mainComponent && mainComponent.tag !== vnodeComponent.tag) {\n    unmount();\n  }\n  mainComponent = vnodeComponent as VnodeComponentInterface;\n  mainVnode = domToVnode(container);\n  return update();\n}\n\nexport function v(tagOrComponent: string | Component, props: VnodeProperties, ...children: Children) {\n  return new Vnode(tagOrComponent, props || {}, children);\n}\n\nv.fragment = (_: VnodeProperties, ...children: Children) => children;\n"],
  "mappings": ";AA6CO,IAAM,WAAW,QAAQ,OAAO,YAAY,eAAe,QAAQ,YAAY,QAAQ,SAAS,IAAI;AAE3G,IAAM,uBAAyE,CAAC;AAChF,IAAM,uBAAuB;AAE7B,SAAS,gBAAgB,QAAgB;AACvC,MAAI,CAAC,qBAAqB,MAAM,GAAG;AAEjC,UAAM,QAAQ,qBAAqB,KAAK,MAAM;AAC9C,UAAM,MAAM,MAAM,CAAC;AACnB,UAAM,KAAK,MAAM,CAAC;AAClB,UAAM,UAAU,MAAM,CAAC,IAAI,MAAM,CAAC,EAAE,MAAM,GAAG,EAAE,OAAO,CAAC,IAAI;AAE3D,QAAI,UAA4C,CAAC,UAAwB,iBAAiB;AAC1F,QAAI,KAAK;AACP,YAAM,kBAAkB;AACxB,gBAAU,CAAC,UAAwB,gBAAgB,KAAK,KAAK,MAAM,QAAQ;AAAA,IAC7E;AAEA,QAAI,IAAI;AACN,YAAM,kBAAkB;AACxB,gBAAU,CAAC,UAAwB,gBAAgB,KAAK,KAAK,MAAM,IAAI,OAAO;AAAA,IAChF;AAEA,QAAI,SAAS;AACX,YAAM,kBAAkB;AACxB,gBAAU,CAAC,UAAwB;AACjC,YAAI,CAAC,gBAAgB,KAAK,GAAG;AAC3B,iBAAO;AAAA,QACT;AAEA,mBAAW,aAAa,SAAS;AAC/B,cAAI,CAAC,MAAM,IAAI,UAAU,SAAS,SAAS,GAAG;AAC5C,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA,IACF;AAEA,yBAAqB,MAAM,IAAI;AAAA,EACjC;AAEA,SAAO,qBAAqB,MAAM;AACpC;AAEO,IAAM,QAAN,MAAM,OAAM;AAAA,EACjB,YACS,KACA,OACA,UACA,KACA,WACA,OACA,SACP;AAPO;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,EACN;AAAA,EAEH,OAAO,SAAqE;AAC1E,QAAI,CAAC,SAAS;AACZ,aAAO,KAAK;AAAA,IACd;AAEA,UAAM,eAAe,OAAO,YAAY,WAAW,gBAAgB,OAAO,IAAI;AAE9E,QAAI,SAAS,KAAK;AAClB,WAAO,QAAQ;AACb,UAAI,aAAa,MAAM,GAAG;AACxB,eAAO;AAAA,MACT;AACA,eAAS,OAAO;AAAA,IAClB;AAAA,EACF;AAAA,EAEA,UAAU,QAA0E;AAClF,UAAM,cACJ,OAAO,WAAW,WACd,gBAAgB,MAAM,IACtB,CAAC,UAAwB,iBAAiB,UAAS,OAAO,KAAK;AAErE,aAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,IAAI,GAAG,KAAK;AACpD,YAAM,QAAQ,KAAK,SAAS,CAAC;AAC7B,UAAI,YAAY,KAAqB,GAAG;AACtC,eAAO;AAAA,MACT;AAAA,IACF;AAEA,aAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,IAAI,GAAG,KAAK;AACpD,YAAM,QAAQ,KAAK,SAAS,CAAC;AAC7B,UAAI,iBAAiB,QAAO;AAC1B,cAAM,SAAS,MAAM,UAAU,WAAW;AAC1C,YAAI,QAAQ;AACV,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EAEA,eAAe,QAAgF;AAC7F,UAAM,cACJ,OAAO,WAAW,WACd,gBAAgB,MAAM,IACtB,CAAC,OAAqB,MAAc,iBAAiB,UAAS,OAAO,OAAO,CAAC;AACnF,UAAM,SAAyB,CAAC;AAChC,aAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,IAAI,GAAG,KAAK;AACpD,YAAM,QAAQ,KAAK,SAAS,CAAC;AAC7B,UAAI,YAAY,OAAuB,CAAC,GAAG;AACzC,eAAO,KAAK,KAAqB;AAAA,MACnC;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEA,IAAI,OAAoC;AACtC,WAAO,KAAK,SAAS,KAAK;AAAA,EAC5B;AAAA,EAEA,SAA2B;AACzB,SAAK,IAAI,OAAO;AAChB,yBAAqB,IAAI;AACzB,sBAAkB,OAAO,KAAK,GAAG;AACjC,SAAK,QAAQ,SAAS,OAAO,KAAK,QAAQ,SAAS,QAAQ,IAAI,GAAG,CAAC;AAAA,EACrE;AAAA,EAEA,QAA4B,UAAwB;AAClD,SAAK,QAAQ,SAAS,OAAO,KAAK,QAAQ,SAAS,QAAQ,IAAI,GAAG,GAAG,QAAQ;AAC7E,iBAAa,KAAK,SAAS,UAAU,KAAK,GAAG;AAC7C,yBAAqB,IAAI;AACzB,sBAAkB,OAAO,KAAK,GAAG;AAAA,EACnC;AACF;AAQO,IAAM,cAAc,CAAC,cAA+C,OAAO,cAAc;AACzF,IAAM,UAAU,CAAC,WAAsC,kBAAkB;AAEzE,IAAM,mBAAmB,CAAC,WAAwD;AACvF,SAAO,QAAQ,MAAM,KAAK,YAAY,OAAO,GAAG;AAClD;AAEO,SAAS,WAAW,KAAwB;AACjD,MAAI,IAAI,aAAa,GAAG;AACtB,WAAO,IAAI;AAAA,EACb;AAEA,QAAM,QAAQ,IAAI,MAAM,IAAI,SAAS,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1D,QAAM,MAAM;AACZ,oBAAkB,IAAI,KAAK,KAAK;AAEhC,WAAS,IAAI,GAAG,IAAI,IAAI,WAAW,QAAQ,IAAI,GAAG,KAAK;AACrD,UAAM,WAAW,IAAI,WAAW,CAAC;AACjC,QAAI,SAAS,aAAa,GAAG;AAC3B,YAAM,SAAS,KAAK,SAAS,SAAS;AAAA,IACxC,WAAW,SAAS,aAAa,GAAG;AAClC,YAAM,aAAa,WAAW,QAAQ;AACtC,iBAAW,UAAU;AACrB,YAAM,SAAS,KAAK;AAAA,IACtB;AAAA,EACF;AAEA,WAAS,IAAI,GAAG,IAAI,IAAI,WAAW,QAAQ,IAAI,GAAG,KAAK;AACrD,UAAM,OAAO,IAAI,WAAW,CAAC;AAC7B,UAAM,MAAM,KAAK,QAAQ,IAAI,KAAK;AAAA,EACpC;AAEA,SAAO;AACT;AAEO,SAAS,MAAM,YAAoB;AACxC,QAAM,MAAM,SAAS,cAAc,KAAK;AACxC,MAAI,YAAY,WAAW,KAAK;AAChC,SAAO,MAAM,KAAK,IAAI,UAAU,EAAE,IAAI,UAAU;AAClD;AAEA,IAAI,gBAAgD;AACpD,IAAI,YAAiC;AACrC,IAAI,YAAY;AAGT,IAAM,UAAU;AAAA,EACrB,OAAO;AAAA,EACP,WAAW;AAAA,EACX,OAAO;AACT;AAKO,IAAM,gBAAsC;AAAA,EACjD,KAAK;AAAA,EACL,OAAO;AAAA,EACP,UAAU;AAAA;AAAA,EACV,UAAU;AAAA;AAAA;AAAA,EAGV,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,UAAU;AAAA,EACV,WAAW;AAAA,EACX,UAAU;AAAA,EACV,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,aAAa;AACf;AAGA,IAAM,eAAe,oBAAI,IAAc;AACvC,IAAM,aAAa,oBAAI,IAAc;AACrC,IAAM,cAAc,oBAAI,IAAc;AACtC,IAAM,eAAe,oBAAI,IAAc;AAChC,IAAM,UAAU,CAAC,aAAuB,CAAC,aAAa,WAAW,IAAI,QAAQ;AAC7E,IAAM,WAAW,CAAC,aAAuB,YAAY,IAAI,QAAQ;AACjE,IAAM,YAAY,CAAC,aAAuB,aAAa,IAAI,QAAQ;AACnE,IAAM,YAAY,CAAC,aAAuB,CAAC,aAAa,aAAa,IAAI,QAAQ;AACxF,IAAM,UAAU,CAAC,QAAuB;AACtC,aAAW,YAAY,KAAK;AAC1B,aAAS;AAAA,EACX;AACA,MAAI,MAAM;AACZ;AAGO,IAAM,aAAwC;AAAA,EACnD,QAAQ,CAAC,UAAwB;AAC/B,UAAM,OAAO,QAAQ,MAAM,MAAM,MAAM,CAAC;AACxC,QAAI,MAAM;AACR,YAAM,aAAa,MAAM,KAAK;AAC9B,UAAI,YAAY;AACd,cAAM,SAAS,SAAS,eAAe,EAAE;AACzC,mBAAW,aAAa,QAAQ,MAAM,GAAG;AAAA,MAC3C;AAEA,aAAO;AAAA,IACT;AAAA,EACF;AAAA,EAEA,SAAS,CAAC,UAAwB;AAChC,UAAM,CAAC,KAAK,QAAQ,IAAI,MAAM,MAAM,OAAO;AAC3C,aAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,IAAI,GAAG,KAAK;AAC1C,YAAM,SAAS,KAAK,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC;AAAA,IACzC;AAAA,EACF;AAAA,EAEA,UAAU,CAAC,UAAwB;AACjC,UAAM,OAAO,QAAQ,MAAM,MAAM,QAAQ,CAAC;AAC1C,IACE,MAAM,IAGN,MAAM,UAAU,OAAO,KAAK;AAAA,EAChC;AAAA,EAEA,WAAW,CAAC,UAAwB;AAClC,UAAM,UAAU,MAAM,MAAM,SAAS;AACrC,UAAM,YAAa,MAAM,IAAmB;AAC5C,eAAW,QAAQ,SAAS;AAC1B,YAAM,QAAQ,OAAO,QAAQ,IAAI,MAAM,aAAc,QAAQ,IAAI,EAAe,IAAI,QAAQ,IAAI;AAChG,gBAAU,OAAO,MAAM,KAAK;AAAA,IAC9B;AAAA,EACF;AAAA,EAEA,UAAU,CAAC,UAAwB;AACjC,UAAM,WAAW,CAAC,MAAM,MAAM,MAAM,QAAQ,CAAC,CAAC;AAAA,EAChD;AAAA,EAEA,YAAY,CAAC,OAAqB,aAAkC;AAClE,QAAI,CAAC,UAAU;AACb,YAAM,WAAW,MAAM,MAAM,UAAU;AACvC,YAAM,UAAU,SAAS,KAAK;AAE9B,UAAI,OAAO,YAAY,YAAY;AACjC,kBAAU,OAAO;AAAA,MACnB;AAAA,IACF;AAAA,EACF;AAAA,EAEA,YAAY,CAAC,OAAqB,aAAkC;AAClE,QAAI,UAAU;AACZ,YAAM,WAAW,MAAM,MAAM,UAAU;AACvC,YAAM,UAAU,SAAS,OAAO,QAAQ;AAExC,UAAI,OAAO,YAAY,YAAY;AACjC,kBAAU,OAAO;AAAA,MACnB;AAAA,IACF;AAAA,EACF;AAAA,EAEA,aAAa,CAAC,UAAwB;AACpC,UAAM,WAAW,MAAM,MAAM,WAAW;AACxC,cAAU,MAAM,SAAS,KAAK,CAAC;AAAA,EACjC;AACF;AAEO,SAAS,UAAU,MAAcA,YAAsB;AAC5D,QAAM,gBAAgB,KAAK,IAAI;AAC/B,aAAW,aAAa,IAAIA;AAC5B,gBAAc,aAAa,IAAI;AACjC;AAGA,IAAM,qBAA2C,CAAC;AAElD,SAAS,cAAc,GAAU;AAC/B,UAAQ,QAAQ;AAChB,MAAI,MAAM,EAAE;AACZ,QAAM,OAAO,KAAK,EAAE,IAAI;AAExB,SAAO,KAAK;AACV,UAAM,WAAW,kBAAkB,IAAI,GAAG;AAC1C,QAAI,YAAY,SAAS,MAAM,IAAI,GAAG;AACpC,eAAS,MAAM,IAAI,EAAE,GAAG,QAAQ;AAEhC,UAAI,CAAC,EAAE,kBAAkB;AACvB,eAAO;AAAA,MACT;AACA;AAAA,IACF;AACA,UAAM,IAAI;AAAA,EACZ;AAEA,UAAQ,QAAQ;AAClB;AAEA,SAAS,mBACP,MACA,OACA,UACA,UACgB;AAChB,MAAI,OAAO,UAAU,YAAY;AAC/B,QAAI,QAAQ,uBAAuB,OAAO;AACxC,MAAC,UAA2B,IAAI,iBAAiB,KAAK,MAAM,CAAC,GAAG,aAAa;AAC7E,yBAAmB,IAAI,IAAI;AAAA,IAC7B;AACA;AAAA,EACF;AAEA,MAAI,SAAS,WAAW,OAAO,UAAU,UAAU;AAEjD,eAAW,YAAY,OAAO;AAC5B,UAAI,MAAM,eAAe,QAAQ,GAAG;AAClC,iBAAS,IAAI,MAAM,QAAQ,IAAI,MAAM,QAAQ;AAAA,MAC/C;AAAA,IACF;AACA;AAAA,EACF;AAEA,MAAI,QAAQ,SAAS,KAAK;AACxB,QAAI,SAAS,IAAI,IAAI,KAAK,OAAO;AAC/B,eAAS,IAAI,IAAI,IAAI;AAAA,IACvB;AACA;AAAA,EACF;AAEA,MAAI,CAAC,YAAY,UAAU,SAAS,MAAM,IAAI,GAAG;AAC/C,QAAI,UAAU,OAAO;AACnB,eAAS,IAAI,gBAAgB,IAAI;AAAA,IACnC,OAAO;AACL,eAAS,IAAI,aAAa,MAAM,KAAK;AAAA,IACvC;AAAA,EACF;AACF;AAEO,SAAS,aAAa,MAAc,OAAY,UAAwB,UAAqC;AAClH,MAAI,CAAC,cAAc,IAAI,GAAG;AACxB,aAAS,MAAM,IAAI,IAAI;AACvB,uBAAmB,MAAM,OAAO,UAAU,QAAQ;AAAA,EACpD;AACF;AAEA,SAAS,iBAAiB,OAAqB,UAAqC;AAClF,MAAI,UAAU;AACZ,eAAW,QAAQ,SAAS,OAAO;AACjC,UAAI,CAAC,MAAM,MAAM,IAAI,KAAK,CAAC,mBAAmB,IAAI,KAAK,CAAC,cAAc,IAAI,GAAG;AAC3E,YAAI,QAAQ,MAAM,KAAK;AACrB,gBAAM,IAAI,IAAI,IAAI;AAAA,QACpB,OAAO;AACL,gBAAM,IAAI,gBAAgB,IAAI;AAAA,QAChC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,SAAS,cAAc,OAAqB,UAA+B;AACzE,aAAW,QAAQ,MAAM,OAAO;AAC9B,QAAI,cAAc,IAAI,GAAG;AACvB,UAAI,WAAW,IAAI,KAAK,WAAW,IAAI,EAAE,OAAO,QAAQ,MAAM,OAAO;AACnE;AAAA,MACF;AACA;AAAA,IACF;AACA,uBAAmB,MAAM,MAAM,MAAM,IAAI,GAAG,OAAO,QAAQ;AAAA,EAC7D;AACF;AAEO,SAAS,iBAAiB,UAAwB,UAAqC;AAC5F,mBAAiB,UAAU,QAAQ;AACnC,gBAAc,UAAU,QAAQ;AAClC;AAIA,IAAM,oBAAoB,oBAAI,QAAkC;AAEhE,SAAS,cAAc,KAAa,OAA4B;AAC9D,SAAO,QACH,SAAS,gBAAgB,8BAA8B,GAAG,IACzD,SAAS,cAAc,GAAG;AACjC;AAEA,SAAS,iBAAiB,OAAY,aAA2B;AAC/D,MAAI,iBAAiB,UAAU,OAAO;AACpC,WAAO,SAAS,eAAe,KAAK;AAAA,EACtC;AAEA,QAAM,UAAU;AAChB,QAAM,MAAM,cAAc,MAAM,KAAK,MAAM,KAAK;AAChD,QAAM,MAAM;AACZ,oBAAkB,IAAI,KAAK,KAAK;AAChC,gBAAc,OAAO,IAAI;AAEzB,MAAI,YAAY,MAAM,OAAO;AAC3B,QAAI,cAAc,MAAM,MAAM,QAAQ;AACtC,WAAO;AAAA,EACT;AAEA,WAAS,KAAK;AAEd,MAAI,MAAM,SAAS,WAAW,GAAG;AAC/B,WAAO;AAAA,EACT;AAEA,WAAS,IAAI,GAAG,IAAI,MAAM,SAAS,QAAQ,IAAI,GAAG,KAAK;AACrD,UAAM,aAAa,MAAM,SAAS,CAAC;AACnC,UAAM,UAAU,iBAAiB,YAAY,KAAK;AAClD,QAAI,YAAY,OAAO;AAAA,EACzB;AAEA,SAAO;AACT;AAEA,SAAS,qBAAqB,OAAqB;AACjD,WAAS,IAAI,GAAG,IAAI,MAAM,IAAI,WAAW,QAAQ,IAAI,GAAG,KAAK;AAC3D,UAAM,QAAQ,MAAM,IAAI,WAAW,CAAC;AACpC,QAAI,kBAAkB,IAAI,KAAmB,GAAG;AAC9C,YAAM,WAAW,kBAAkB,IAAI,KAAmB;AAC1D,2BAAqB,QAAQ;AAC7B,wBAAkB,OAAO,KAAmB;AAAA,IAC9C;AAAA,EACF;AACF;AAEA,SAAS,aAAa,UAAwB,UAAwB,UAA4B;AAChG,WAAS,QAAQ,SAAS,SAAS,SAAS,QAAQ;AAEpD,MAAI,CAAC,YAAY,SAAS,QAAQ,SAAS,SAAS,YAAY,GAAG;AACjE,aAAS,MAAM,iBAAiB,UAAU,QAAQ;AAClD,QAAI,UAAU;AACZ,eAAS,IAAI,aAAa,SAAS,KAAK,QAAQ;AAAA,IAClD,OAAO;AACL,eAAS,IAAI,YAAY,SAAS,GAAG;AAAA,IACvC;AACA;AAAA,EACF;AAEA,WAAS,UAAU;AACnB,QAAM,WAAW,kBAAkB,IAAI,QAAQ;AAC/C,WAAS,MAAM;AACf,oBAAkB,IAAI,UAAU,QAAQ;AAExC,MAAI,YAAY,YAAY,SAAS,SAAS,SAAS,MAAM,QAAQ,MAAM,SAAS,MAAM,QAAQ,GAAG;AACnG,aAAS,WAAW,SAAS;AAC7B;AAAA,EACF;AAEA,mBAAiB,UAA0B,YAAY,IAAI;AAE3D,MAAI,YAAY,SAAS,OAAO;AAC9B,QAAI,SAAS,IAAI,eAAe,SAAS,MAAM,QAAQ,GAAG;AACxD,eAAS,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,IACpD;AACA;AAAA,EACF;AAEA,MAAI,SAAS,SAAS,WAAW,GAAG;AAClC,QAAI,SAAS,IAAI,WAAW,SAAS,GAAG;AACtC,eAAS,IAAI,cAAc;AAC3B,2BAAqB,QAAQ;AAAA,IAC/B;AACA;AAAA,EACF;AAEA,QAAM,QAAwB;AAChC;AAEA,SAAS,SAAS,UAAwB;AACxC,UAAQ,QAAQ;AAChB,QAAM,EAAE,SAAS,IAAI;AACrB,MAAI,IAAI;AAER,SAAO,IAAI,SAAS,QAAQ;AAC1B,UAAM,WAAW,SAAS,CAAC;AAE3B,QAAI,YAAY,MAAM;AACpB,eAAS,OAAO,GAAG,CAAC;AACpB;AAAA,IACF;AAEA,QAAI,MAAM,QAAQ,QAAQ,GAAG;AAC3B,eAAS,OAAO,GAAG,GAAG,GAAG,QAAQ;AACjC;AAAA,IACF;AAEA,QAAI,oBAAoB,SAAS,OAAO,SAAS,QAAQ,UAAU;AACjE,YAAM,aAAa,UAAU,SAAS,MAAM,SAAS,IAAI,OAAO,SAAS,KAAK,KAAK,SAAS,GAAG;AAC/F,cAAQ,YAAY;AACpB,eAAS,CAAC,IAAI,UAAU,SAAS,OAAO,SAAS,QAAQ;AAAA,IAC3D;AAEA;AAAA,EACF;AACF;AAEO,SAAS,MAAM,UAA8B;AAClD,WAAS,QAAQ;AACjB,QAAM,EAAE,KAAK,SAAS,IAAI;AAC1B,QAAM,gBAAgB,SAAS;AAE/B,MAAI,kBAAkB,GAAG;AACvB,QAAI,cAAc;AAClB,yBAAqB,QAAQ;AAC7B;AAAA,EACF;AAEA,QAAM,UAAU,IAAI;AACpB,QAAM,gBAAgB,QAAQ;AAC9B,QAAM,gBAAgB,QAAQ,CAAC,KAAK,kBAAkB,IAAI,QAAQ,CAAC,CAAC;AAEpE,MAAI,iBAAiB,SAAS,CAAC,aAAa,SAAS,SAAS,SAAS,CAAC,EAAE,SAAS,SAAS,cAAc,OAAO;AAC/G,UAAM,eAAuC,CAAC;AAC9C,UAAM,eAAuC,CAAC;AAC9C,UAAM,aAAa,SAAS,IAAI;AAGhC,aAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACtC,YAAM,WAAW,kBAAkB,IAAI,QAAQ,CAAC,CAAC;AACjD,mBAAa,UAAU,MAAM,GAAU,IAAI;AAC3C,UAAI,IAAI,eAAe;AACrB,qBAAa,SAAS,CAAC,EAAE,MAAM,GAAG,IAAI;AAAA,MACxC;AAAA,IACF;AAEA,aAAS,IAAI,GAAG,IAAI,eAAe,KAAK;AACtC,YAAM,WAAW,SAAS,CAAC;AAC3B,eAAS,UAAU;AACnB,eAAS,QAAQ,SAAS,SAAS,SAAS,QAAQ;AACpD,YAAM,gBAAgB,aAAa,SAAS,MAAM,GAAG;AACrD,YAAM,WAAW,QAAQ,aAAa;AACtC,UAAI,cAAc;AAElB,UAAI,UAAU;AACZ,iBAAS,MAAM;AACf,cAAM,WAAW,kBAAkB,IAAI,QAAQ;AAE/C,iBAAS,MAAM;AACf,0BAAkB,IAAI,UAAU,QAAQ;AAExC,YAAI,YAAY,YAAY,SAAS,SAAS,SAAS,MAAM,QAAQ,MAAM,SAAS,MAAM,QAAQ,GAAG;AACnG,mBAAS,WAAW,SAAS;AAC7B,wBAAc;AAAA,QAChB,OAAO;AACL,2BAAiB,UAAU,QAAQ;AACnC,cAAI,YAAY,SAAS,OAAO;AAC9B,gBAAI,SAAS,IAAI,eAAe,SAAS,MAAM,QAAQ,GAAG;AACxD,uBAAS,IAAI,cAAc,SAAS,MAAM,QAAQ;AAAA,YACpD;AACA,0BAAc;AAAA,UAChB,WAAW,SAAS,SAAS,WAAW,GAAG;AACzC,gBAAI,SAAS,IAAI,WAAW,SAAS,GAAG;AACtC,uBAAS,IAAI,cAAc;AAC3B,mCAAqB,QAAQ;AAAA,YAC/B;AACA,0BAAc;AAAA,UAChB;AAAA,QACF;AAAA,MACF,OAAO;AACL,iBAAS,MAAM,iBAAiB,UAAU,QAAQ;AAClD,sBAAc;AAAA,MAChB;AAEA,YAAM,cAAc,WAAW,CAAC;AAChC,UAAI,CAAC,aAAa;AAChB,iBAAS,IAAI,YAAY,SAAS,GAAG;AAAA,MACvC,WAAW,gBAAgB,SAAS,KAAK;AACvC,iBAAS,IAAI,aAAa,SAAS,KAAK,WAAW;AAAA,MACrD;AAEA,qBAAe,MAAM,QAAQ;AAAA,IAC/B;AAEA,aAAS,IAAI,eAAe,IAAI,eAAe,KAAK;AAClD,YAAM,WAAW,kBAAkB,IAAI,QAAQ,CAAC,CAAC;AACjD,UAAI,YAAY,CAAC,aAAa,SAAS,MAAM,GAAU,GAAG;AACxD,cAAM,cAAc,QAAQ,CAAC;AAC7B,oBAAY,cAAc,YAAY,OAAO;AAC7C,6BAAqB,QAAQ;AAAA,MAC/B;AAAA,IACF;AACA;AAAA,EACF;AAEA,QAAM,SAAS,KAAK,IAAI,eAAe,aAAa;AAEpD,WAAS,IAAI,GAAG,IAAI,QAAQ,KAAK;AAC/B,UAAM,WAAW,SAAS,CAAC;AAC3B,UAAM,WAAW,QAAQ,CAAC;AAC1B,UAAM,WAAW,kBAAkB,IAAI,QAAQ;AAE/C,QAAI,aAAa,UAAU;AACzB;AAAA,IACF;AAEA,QAAI,CAAC,UAAU;AACb,eAAS,IAAI,YAAY,iBAAiB,UAAU,QAAQ,CAAC;AAC7D;AAAA,IACF;AAEA,QAAI,CAAC,UAAU;AACb,eAAS,OAAO;AAChB,kBAAY,qBAAqB,QAAQ;AACzC;AAAA,IACF;AAEA,QAAI,oBAAoB,UAAU,OAAO;AACvC,UAAI,SAAS,aAAa,GAAG;AAC3B,cAAM,UAAU,SAAS,eAAe,QAAkB;AAC1D,iBAAS,IAAI,aAAa,SAAS,QAAQ;AAC3C,YAAI,kBAAkB,IAAI,QAAQ,GAAG;AACnC,sBAAY,qBAAqB,QAAQ;AACzC,4BAAkB,OAAO,QAAQ;AAAA,QACnC;AAAA,MACF,WAAW,SAAS,aAAa,UAAU;AACzC,iBAAS,YAAY;AAAA,MACvB;AACA;AAAA,IACF;AAEA,iBAAa,UAAU,UAA0B,QAAQ;AAAA,EAC3D;AACF;AAEO,SAAS,SAAwB;AACtC,MAAI,WAAW;AACb,YAAQ,YAAY;AACpB,cAAU,WAAW,CAAC,aAAa;AACnC,UAAM,SAAS;AACf,YAAQ,YAAY,cAAc,UAAU;AAC5C,gBAAY;AACZ,YAAQ,QAAQ;AAChB,YAAQ,YAAY;AACpB,QAAI,UAAU;AACZ,aAAO,UAAU,IAAI;AAAA,IACvB;AAAA,EACF;AACF;AAEO,SAAS,YAAY,OAAoC;AAC9D,UAAQ,YAAY;AACpB,QAAM,KAAK;AACX,UAAQ,YAAY,cAAc,UAAU;AAC5C,cAAY;AACZ,UAAQ,QAAQ;AAChB,UAAQ,YAAY;AACpB,MAAI,UAAU;AACZ,WAAO,MAAM,IAAI;AAAA,EACnB;AACF;AAEO,SAAS,UAAU;AACxB,MAAI,WAAW;AACb,oBAAgB,IAAI,MAAM,MAAM,MAAM,CAAC,GAAG,CAAC,CAAC;AAC5C,UAAM,SAAS,OAAO;AACtB,YAAQ,YAAY;AACpB,eAAW,QAAQ,oBAAoB;AACrC,gBAAU,IAAI,oBAAoB,KAAK,MAAM,CAAC,EAAE,YAAY,GAAG,aAAa;AAC5E,cAAQ,eAAe,oBAAoB,IAAI;AAAA,IACjD;AAEA,oBAAgB;AAChB,gBAAY;AACZ,gBAAY;AACZ,YAAQ,QAAQ;AAChB,YAAQ,YAAY;AACpB,WAAO;AAAA,EACT;AACF;AAEO,SAAS,MAAM,KAA0B,WAAgB;AAC9D,QAAM,YACJ,OAAO,QAAQ,WAAY,WAAW,cAAc,KAAK,QAAQ,KAAK,IAAI,SAAS,cAAc,GAAG,IAAK;AAC3G,QAAM,iBAAiB,iBAAiB,SAAS,IAC7C,YACA,YAAY,SAAS,IACrB,IAAI,MAAM,WAAW,CAAC,GAAG,CAAC,CAAC,IAC3B,IAAI,MAAM,MAAM,WAAW,CAAC,GAAG,CAAC,CAAC;AACrC,MAAI,iBAAiB,cAAc,QAAQ,eAAe,KAAK;AAC7D,YAAQ;AAAA,EACV;AACA,kBAAgB;AAChB,cAAY,WAAW,SAAS;AAChC,SAAO,OAAO;AAChB;AAEO,SAAS,EAAE,gBAAoC,UAA2B,UAAoB;AACnG,SAAO,IAAI,MAAM,gBAAgB,SAAS,CAAC,GAAG,QAAQ;AACxD;AAEA,EAAE,WAAW,CAAC,MAAuB,aAAuB;",
  "names": ["directive"]
}
