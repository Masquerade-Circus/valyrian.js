{
  "version": 3,
  "sources": ["../lib/index.ts"],
  "sourcesContent": ["/* eslint-disable */\ndeclare global {\n  var document: Document;\n  namespace JSX {\n    interface IntrinsicElements extends DefaultRecord {}\n    type Element = ReturnType<\n      typeof v | ((...args: any) => string | number | null | undefined | boolean | Promise<any>)\n    >;\n    type ComponentReturnType = string | number | null | undefined | boolean | Element | Element[];\n  }\n}\n\ninterface DefaultRecord extends Record<string | number | symbol, any> {}\n\nexport interface Properties extends DefaultRecord {\n  key?: string | number;\n}\n\nexport interface DomElement extends Element, DefaultRecord {}\n\nexport interface Component extends DefaultRecord {\n  (props: Properties, children: any[]): Vnode | any;\n}\n\nexport interface POJOComponent extends DefaultRecord {\n  view: Component;\n}\n\nexport type ValyrianComponent = Component | POJOComponent;\n\nexport interface VnodeComponentInterface extends Vnode {\n  tag: ValyrianComponent;\n}\n\nexport interface Children extends Array<Vnode | VnodeComponentInterface | ValyrianComponent | any> {}\n\nexport interface Directive {\n  (value: any, vnode: VnodeWithDom, oldProps?: Properties): false | void | any;\n}\n\nexport const isNodeJs = Boolean(typeof process !== \"undefined\" && process.versions && process.versions.node);\n\nexport class Vnode {\n  constructor(\n    public tag: string | Component | POJOComponent,\n    public props: null | Properties,\n    public children: Children,\n    public dom?: DomElement,\n    public isSVG?: boolean,\n    public hasKeys?: boolean\n  ) {}\n}\n\nexport interface VnodeWithDom extends Vnode {\n  tag: string;\n  dom: DomElement;\n  props: Properties;\n}\n\nexport const isPOJOComponent = (component: unknown): component is POJOComponent =>\n  Boolean(component && typeof component === \"object\" && \"view\" in component);\n\nexport const isComponent = (component: unknown): component is Component =>\n  Boolean(typeof component === \"function\" || isPOJOComponent(component));\nexport const isVnode = (object?: unknown): object is Vnode => object instanceof Vnode;\n\nexport const isVnodeComponent = (object?: unknown): object is VnodeComponentInterface => {\n  return isVnode(object) && isComponent(object.tag);\n};\n\nexport function v(tagOrComponent: string | ValyrianComponent, props: Properties | null, ...children: Children) {\n  return new Vnode(tagOrComponent, props, children);\n}\n\nv.fragment = (_: Properties, ...children: Children) => children;\n\nexport function hidrateDomToVnode(dom: any): VnodeWithDom | void {\n  if (dom.nodeType === 3) {\n    return dom.nodeValue;\n  }\n\n  if (dom.nodeType === 1) {\n    const tag = dom.nodeName.toLowerCase();\n    const props = {} as Properties;\n    const children = [] as Children;\n\n    for (let i = 0, l = dom.childNodes.length; i < l; i++) {\n      const childDom = dom.childNodes[i];\n      if (childDom.nodeType === 3) {\n        children.push(childDom.nodeValue);\n      } else if (childDom.nodeType === 1) {\n        const childVnode = hidrateDomToVnode(childDom);\n        children.push(childVnode);\n      }\n    }\n\n    const attributes = dom.attributes;\n    for (let i = 0, l = attributes.length; i < l; i++) {\n      const attr = attributes[i];\n      props[attr.nodeName] = attr.nodeValue;\n    }\n\n    const vnode = new Vnode(tag, props, children);\n    vnode.dom = dom;\n    dom.vnode = vnode;\n    vnode.isSVG = tag === \"svg\";\n    return vnode as VnodeWithDom;\n  }\n}\n\nexport function trust(htmlString: string) {\n  const div = document.createElement(\"div\");\n  div.innerHTML = htmlString.trim();\n  return Array.from(div.childNodes).map(hidrateDomToVnode);\n}\n\nlet mainComponent: VnodeComponentInterface | null = null;\nlet mainVnode: VnodeWithDom | null = null;\nlet isMounted = false;\n\nexport const current = {\n  vnode: null as Vnode | null,\n  component: null as ValyrianComponent | null,\n  event: null as Event | null\n};\n\nexport const reservedProps = new Set<string>([\n  \"key\",\n  \"state\",\n  \"v-keep\",\n  \"v-text\",\n  \"v-if\",\n  \"v-for\",\n  \"v-show\",\n  \"v-class\",\n  \"v-html\",\n  \"v-model\",\n  \"v-create\",\n  \"v-update\",\n  \"v-cleanup\"\n]);\n\nconst onCleanupSet = new Set<Function>();\nconst onMountSet = new Set<Function>();\nconst onUpdateSet = new Set<Function>();\nconst onUnmountSet = new Set<Function>();\nexport const onMount = (callback: Function) => !isMounted && onMountSet.add(callback);\nexport const onUpdate = (callback: Function) => onUpdateSet.add(callback);\nexport const onCleanup = (callback: Function) => onCleanupSet.add(callback);\nexport const onUnmount = (callback: Function) => !isMounted && onUnmountSet.add(callback);\nconst callSet = (set: Set<Function>) => {\n  for (const callback of set) {\n    callback();\n  }\n  set.clear();\n};\n\nexport const directives: Record<string, Directive> = {\n  \"v-if\": (value, vnode) => {\n    if (!Boolean(value)) {\n      const parentNode = vnode.dom?.parentNode;\n      if (parentNode) {\n        parentNode.replaceChild(document.createTextNode(\"\"), vnode.dom);\n      }\n\n      return false;\n    }\n  },\n\n  \"v-show\": (value, vnode) => {\n    const bool = Boolean(value);\n    (\n      vnode.dom as unknown as {\n        style: { display: string };\n      }\n    ).style.display = bool ? \"\" : \"none\";\n  },\n\n  \"v-html\": (value, vnode) => {\n    vnode.children = trust(value as string);\n  },\n\n  // The \"v-model\" directive binds the value of an input element to a model property\n  \"v-model\": (model, vnode) => {\n    // eslint-disable-next-line prefer-const\n    if (\"name\" in vnode.props === false) {\n      return;\n    }\n\n    let value;\n    const property = vnode.props.name;\n    let event = \"oninput\";\n\n    // This function updates the model property when the input element's value changes\n    let handler = (e: Event) => (model[property] = (e.target as DomElement & Record<string, any>).value);\n    if (vnode.tag === \"input\") {\n      // Depending on the type of input element, use a different handler function\n      switch (vnode.props.type) {\n        case \"checkbox\": {\n          if (Array.isArray(model[property])) {\n            // If the model property is an array, add or remove the value from the array when the checkbox is checked or unchecked\n            handler = (e: Event) => {\n              const val = (e.target as DomElement & Record<string, any>).value;\n              const idx = model[property].indexOf(val);\n              if (idx === -1) {\n                model[property].push(val);\n              } else {\n                model[property].splice(idx, 1);\n              }\n            };\n            // If the value is in the array, set the checkbox to be checked\n            value = model[property].indexOf(vnode.dom.value) !== -1;\n          } else if (\"value\" in vnode.props) {\n            // If the input element has a \"value\" attribute, use it to determine the checked state\n            handler = () => {\n              if (model[property] === vnode.props.value) {\n                model[property] = null;\n              } else {\n                model[property] = vnode.props.value;\n              }\n            };\n            value = model[property] === vnode.props.value;\n          } else {\n            // If there is no \"value\" attribute, use a boolean value for the model property\n            handler = () => (model[property] = !model[property]);\n            value = model[property];\n          }\n          // Set the \"checked\" attribute on the input element\n          // eslint-disable-next-line no-use-before-define\n          setAttribute(\"checked\", value, vnode);\n          break;\n        }\n        case \"radio\": {\n          // If the element is a radio button, set the \"checked\" attribute based on the value of the model property\n          // eslint-disable-next-line no-use-before-define\n          setAttribute(\"checked\", model[property] === vnode.dom.value, vnode);\n          break;\n        }\n        default: {\n          // For all other input types, set the \"value\" attribute based on the value of the model property\n          // eslint-disable-next-line no-use-before-define\n          setAttribute(\"value\", model[property], vnode);\n        }\n      }\n    } else if (vnode.tag === \"select\") {\n      // If the element is a select element, use the \"click\" event by default\n      event = \"onclick\";\n      if (vnode.props.multiple) {\n        // If the select element allows multiple selections, update the model property with an array of selected values\n        handler = (e: Event & Record<string, any>) => {\n          const val = (e.target as DomElement & Record<string, any>).value;\n          if (e.ctrlKey) {\n            // If the Ctrl key is pressed, add or remove the value from the array\n            const idx = model[property].indexOf(val);\n            if (idx === -1) {\n              model[property].push(val);\n            } else {\n              model[property].splice(idx, 1);\n            }\n          } else {\n            // If the Ctrl key is not pressed, set the model property to an array with the selected value\n            model[property].splice(0, model[property].length);\n            model[property].push(val);\n          }\n        };\n        // Set the \"selected\" attribute on the options based on whether they are in the model property array\n        vnode.children.forEach((child: VnodeWithDom) => {\n          if (child.tag === \"option\") {\n            const value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = model[property].indexOf(value) !== -1;\n          }\n        });\n      } else {\n        // If the select element does not allow multiple selections, set the \"selected\" attribute on the options based on the value of the model property\n        vnode.children.forEach((child: VnodeWithDom) => {\n          if (child.tag === \"option\") {\n            const value = \"value\" in child.props ? child.props.value : child.children.join(\"\").trim();\n            child.props.selected = value === model[property];\n          }\n        });\n      }\n    } else if (vnode.tag === \"textarea\") {\n      // Set the textarea's content to the value of the model property\n      vnode.children = [model[property]];\n    }\n\n    // We assume that the prev handler if any will not be changed by the user across patchs\n    const prevHandler = vnode.props[event];\n\n    // Set the event handler on the element\n    // eslint-disable-next-line no-use-before-define\n    setAttribute(\n      event,\n      (e: Event) => {\n        handler(e);\n\n        // If the previous handler is defined, call it after the model has been updated\n        if (prevHandler) {\n          prevHandler(e);\n        }\n      },\n      vnode\n    );\n  },\n\n  \"v-create\": (callback, vnode, oldProps) => {\n    if (!oldProps) {\n      const cleanup = callback(vnode);\n\n      if (typeof cleanup === \"function\") {\n        onCleanup(cleanup);\n      }\n    }\n  },\n\n  \"v-update\": (callback, vnode, oldProps) => {\n    if (oldProps) {\n      const cleanup = callback(vnode, oldProps);\n\n      if (typeof cleanup === \"function\") {\n        onCleanup(cleanup);\n      }\n    }\n  },\n\n  \"v-cleanup\": (callback, vnode) => {\n    onCleanup(() => callback(vnode));\n  },\n\n  \"v-class\": (value, vnode) => {\n    if (typeof value === \"string\") {\n      vnode.dom.className = value;\n    } else if (Array.isArray(value)) {\n      vnode.dom.className = value.join(\" \");\n    } else if (typeof value === \"object\") {\n      const classList = vnode.dom.classList;\n      for (const name in value) {\n        const val = typeof value[name] === \"function\" ? (value[name] as Function)() : value[name];\n        classList.toggle(name, val);\n      }\n    }\n  },\n\n  // Frequent used properties\n  class(value, vnode) {\n    if (vnode.dom.className !== value) {\n      if (vnode.isSVG) {\n        vnode.dom.setAttribute(\"class\", value);\n        return;\n      }\n      vnode.dom.className = value;\n    }\n  },\n\n  className(value, vnode) {\n    directives.class(value, vnode);\n  },\n\n  id: (value, vnode) => {\n    if (vnode.dom.id !== value) {\n      if (vnode.isSVG) {\n        vnode.dom.setAttribute(\"id\", value);\n        return;\n      }\n      vnode.dom.id = value;\n    }\n  },\n\n  style: (value, vnode) => {\n    if (typeof value === \"string\") {\n      if (vnode.isSVG) {\n        vnode.dom.setAttribute(\"style\", value);\n        return;\n      }\n      vnode.dom.style = value;\n    } else if (typeof value === \"object\") {\n      if (vnode.isSVG) {\n        vnode.dom.setAttribute(\"style\", \"\");\n      } else {\n        vnode.dom.style = \"\";\n      }\n      const domStyle = vnode.dom.style;\n      for (const name in value) {\n        domStyle[name] = value[name];\n      }\n    }\n  }\n};\n\nexport function directive(name: string, directive: Directive) {\n  const directiveName = `v-${name}`;\n  directives[directiveName] = directive;\n  reservedProps.add(directiveName);\n}\n\nexport function setPropNameReserved(name: string) {\n  reservedProps.add(name);\n}\n\nconst eventListenerNames = new Set<string>();\n\nfunction eventListener(e: Event) {\n  current.event = e;\n  let dom = e.target as DomElement;\n  const name = `on${e.type}`;\n\n  while (dom) {\n    const oldVnode = dom.vnode as VnodeWithDom;\n    if (oldVnode && oldVnode.props[name]) {\n      oldVnode.props[name](e, oldVnode);\n\n      if (!e.defaultPrevented) {\n        // eslint-disable-next-line no-use-before-define\n        update();\n      }\n      return;\n    }\n    dom = dom.parentNode as DomElement;\n  }\n\n  current.event = null;\n}\n\nfunction sharedSetAttribute(name: string, value: any, newVnode: VnodeWithDom): void | boolean {\n  const newVnodeDom = newVnode.dom;\n  if (typeof value === \"function\") {\n    if (!eventListenerNames.has(name)) {\n      // We attach the delegated event listener to the main vnode dom element, which is the root of the component\n      (mainVnode as VnodeWithDom).dom.addEventListener(name.slice(2), eventListener);\n      eventListenerNames.add(name);\n    }\n    return;\n  }\n\n  if (!newVnode.isSVG && name in newVnodeDom) {\n    newVnodeDom[name] = value;\n    return;\n  }\n\n  if (value === false) {\n    newVnodeDom.removeAttribute(name);\n  } else {\n    newVnodeDom.setAttribute(name, value);\n  }\n}\n\nexport function setAttribute(name: string, value: any, newVnode: VnodeWithDom): void {\n  if (!reservedProps.has(name)) {\n    newVnode.props[name] = value;\n    sharedSetAttribute(name, value, newVnode);\n  }\n}\n\nexport function updateAttributes(newVnode: VnodeWithDom, oldVnode?: VnodeWithDom): void {\n  const vnodeDom = newVnode.dom;\n  const vnodeProps = newVnode.props;\n  vnodeDom.vnode = newVnode;\n\n  if (oldVnode) {\n    for (const name in oldVnode.props) {\n      if (name in vnodeProps === false && !eventListenerNames.has(name) && !reservedProps.has(name)) {\n        if (!newVnode.isSVG && name in vnodeDom) {\n          vnodeDom[name] = null;\n        } else {\n          vnodeDom.removeAttribute(name);\n        }\n      }\n    }\n  }\n\n  for (const name in vnodeProps) {\n    if (directives[name]) {\n      if (directives[name](vnodeProps[name], newVnode, oldVnode?.props) === false) {\n        break;\n      }\n      continue;\n    }\n\n    if (!reservedProps.has(name)) {\n      sharedSetAttribute(name, vnodeProps[name], newVnode);\n    }\n  }\n}\n\nexport function createElement(tag: string, isSVG: boolean): DomElement {\n  return isSVG\n    ? document.createElementNS(\"http://www.w3.org/2000/svg\", tag)\n    : (document.createElement(tag) as DomElement);\n}\n\nfunction flatTree(newVnode: VnodeWithDom) {\n  current.vnode = newVnode;\n\n  let i = 0;\n  let children: Children;\n\n  if (\"v-for\" in newVnode.props === false) {\n    children = [...newVnode.children];\n  } else {\n    children = [];\n    const set = newVnode.props[\"v-for\"];\n    const l = set.length;\n    const callback = newVnode.children[0];\n\n    if (typeof callback !== \"function\") {\n      console.warn(\"v-for directive must have a callback function as children\");\n      return children;\n    }\n\n    for (let i = 0; i < l; i++) {\n      children[i] = callback(set[i], i);\n    }\n  }\n\n  while (i < children.length) {\n    const newChild = children[i];\n\n    if (newChild == null) {\n      children.splice(i, 1);\n      continue;\n    }\n\n    if (Array.isArray(newChild)) {\n      children.splice(i, 1, ...newChild);\n      continue;\n    }\n\n    if (newChild instanceof Vnode) {\n      newChild.props = newChild.props || {};\n      newChild.isSVG = newVnode.isSVG || newChild.tag === \"svg\";\n\n      if (typeof newChild.tag !== \"string\") {\n        const component = (current.component = newChild.tag);\n\n        children[i] = (isPOJOComponent(component) ? component.view : component).bind(component)(\n          newChild.props,\n          newChild.children\n        );\n\n        continue;\n      }\n\n      newVnode.hasKeys = newVnode.hasKeys || \"key\" in newChild.props;\n    }\n\n    i++;\n  }\n\n  return children;\n}\n\nfunction processNewChild(newChild: VnodeWithDom, parentVnode: VnodeWithDom, oldDom?: DomElement) {\n  if (oldDom) {\n    newChild.dom = createElement(newChild.tag, newChild.isSVG as boolean);\n    parentVnode.dom.replaceChild(newChild.dom, oldDom);\n  } else {\n    newChild.dom = parentVnode.dom.appendChild(createElement(newChild.tag, newChild.isSVG as boolean));\n  }\n  updateAttributes(newChild);\n  if (\"v-text\" in newChild.props) {\n    newChild.dom.textContent = newChild.props[\"v-text\"];\n    return;\n  }\n\n  const children = flatTree(newChild);\n  if (children.length === 0) {\n    newChild.dom.textContent = \"\";\n    return;\n  }\n\n  for (let i = 0, l = children.length; i < l; i++) {\n    if (children[i] instanceof Vnode === false) {\n      newChild.dom.appendChild(document.createTextNode(children[i]));\n      continue;\n    }\n    processNewChild(children[i] as VnodeWithDom, newChild);\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction patch(newVnode: VnodeWithDom): void {\n  const children = flatTree(newVnode);\n  const dom = newVnode.dom;\n\n  if (children.length === 0) {\n    if (dom.childNodes.length) {\n      dom.textContent = \"\";\n    }\n    return;\n  }\n\n  const childNodes = dom.childNodes as unknown as DomElement[];\n  const oldChildrenLength = childNodes.length;\n  const childrenLength = children.length;\n  if (oldChildrenLength === 0) {\n    for (let i = 0; i < childrenLength; i++) {\n      const newChild = children[i] as VnodeWithDom;\n      if (newChild instanceof Vnode === false) {\n        dom.appendChild(document.createTextNode(newChild));\n        continue;\n      }\n      processNewChild(newChild, newVnode);\n    }\n    return;\n  }\n\n  const oldTree = [...Array.from(childNodes)] as unknown as DomElement[];\n  const oldKeyedList: Record<string, number> = {};\n\n  if (newVnode.hasKeys) {\n    for (let i = 0, l = oldTree.length; i < l; i++) {\n      const oldVnode = oldTree[i].vnode as VnodeWithDom;\n      oldKeyedList[!oldVnode || \"key\" in oldVnode.props === false ? i : (oldVnode.props.key as string)] = i;\n    }\n  }\n\n  for (let i = 0, l = children.length; i < l; i++) {\n    const newChild = children[i] as VnodeWithDom;\n\n    if (newChild instanceof Vnode === false) {\n      const oldChild = oldTree[i];\n      if (!oldChild) {\n        dom.appendChild(document.createTextNode(newChild));\n        continue;\n      }\n\n      if (oldChild.nodeType !== 3) {\n        dom.replaceChild(document.createTextNode(newChild), oldChild);\n        continue;\n      }\n\n      // eslint-disable-next-line eqeqeq\n      if (oldChild.nodeValue != newChild) {\n        oldChild.nodeValue = newChild;\n      }\n      continue;\n    }\n\n    const oldChild = oldTree[newVnode.hasKeys ? oldKeyedList[(newChild.props.key as any) || i] : i] as DomElement;\n\n    if (!oldChild || newChild.tag !== oldChild.nodeName.toLowerCase()) {\n      processNewChild(newChild, newVnode, childNodes[i] as DomElement);\n      continue;\n    }\n\n    newChild.dom = oldChild;\n    const currentChild = childNodes[i];\n    if (!currentChild) {\n      dom.appendChild(oldChild);\n    } else if (currentChild !== oldChild) {\n      dom.replaceChild(oldChild, currentChild);\n    }\n\n    if (\"v-keep\" in newChild.props && oldChild.vnode) {\n      if (oldChild.vnode.props[\"v-keep\"] === newChild.props[\"v-keep\"]) {\n        continue;\n      }\n\n      const oldProps = childNodes[i + 1]?.vnode?.props;\n      if (oldProps && \"key\" in oldProps === false && oldProps[\"v-keep\"] === newChild.props[\"v-keep\"]) {\n        oldChild.remove();\n        oldTree.splice(i, 1);\n        continue;\n      }\n    }\n\n    updateAttributes(newChild as VnodeWithDom, oldChild.vnode);\n\n    if (\"v-text\" in newChild.props) {\n      // eslint-disable-next-line eqeqeq\n      if (oldChild.textContent != newChild.props[\"v-text\"]) {\n        oldChild.textContent = newChild.props[\"v-text\"];\n      }\n      continue;\n    }\n    // eslint-disable-next-line no-use-before-define\n    patch(newChild as VnodeWithDom);\n  }\n\n  for (let i = childNodes.length, l = children.length; i > l; i--) {\n    childNodes[i - 1].remove();\n  }\n}\n\nexport function updateVnode(vnode: VnodeWithDom): string | void {\n  callSet(onCleanupSet);\n  vnode.props = vnode.props || {};\n  patch(vnode);\n  callSet(isMounted ? onUpdateSet : onMountSet);\n  isMounted = true;\n  current.vnode = null;\n  current.component = null;\n}\n\nexport function update(): string {\n  if (mainVnode) {\n    mainVnode.children = [mainComponent];\n    updateVnode(mainVnode as VnodeWithDom);\n    if (isNodeJs) {\n      return mainVnode.dom.innerHTML;\n    }\n  }\n  return \"\";\n}\n\nlet debouncedUpdateTimeout: any;\nconst debouncedUpdateMethod = isNodeJs ? update : () => requestAnimationFrame(update);\n\nexport function debouncedUpdate(timeout = 42) {\n  if (current.event) {\n    current.event.preventDefault();\n  }\n  clearTimeout(debouncedUpdateTimeout);\n  debouncedUpdateTimeout = setTimeout(debouncedUpdateMethod, timeout);\n}\n\nexport function unmount() {\n  if (mainVnode) {\n    mainComponent = v(() => null, {}) as VnodeComponentInterface;\n    const result = update();\n    callSet(onUnmountSet);\n    for (const name in eventListenerNames) {\n      mainVnode.dom.removeEventListener(name.slice(2).toLowerCase(), eventListener);\n      Reflect.deleteProperty(eventListenerNames, name);\n    }\n\n    mainComponent = null;\n    mainVnode = null;\n    isMounted = false;\n    current.vnode = null;\n    current.component = null;\n    current.event = null;\n    return result;\n  }\n\n  return \"\";\n}\n\nexport function mount(dom: string | DomElement, component: ValyrianComponent | VnodeComponentInterface | any) {\n  const container =\n    typeof dom === \"string\" ? (isNodeJs ? createElement(dom, dom === \"svg\") : document.querySelector(dom)) : dom;\n\n  if (isComponent(component)) {\n    mainComponent = v(component, {}, []) as VnodeComponentInterface;\n  } else if (isVnodeComponent(component)) {\n    mainComponent = component;\n  } else {\n    mainComponent = v(() => component, {}, []) as VnodeComponentInterface;\n  }\n\n  mainVnode = hidrateDomToVnode(container) as VnodeWithDom;\n  return update();\n}\n"],
  "mappings": "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",
  "names": ["value", "directive", "i", "oldChild"]
}
