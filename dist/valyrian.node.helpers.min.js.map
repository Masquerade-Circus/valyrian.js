{"version":3,"file":"valyrian.node.helpers.min.js","sources":["../lib/node.js"],"sourcesContent":["import swTpl from './sw.tpl.js';\n\nif (typeof global !== undefined) {\n    global.VNodeHelpersFactory = function (v) {\n        let fs = require('fs'),\n            uncss = require('uncss'),\n            errorHandler = (resolve, reject) => err => {\n                if (err) {\n                    return reject(err);\n                }\n\n                resolve();\n            };\n\n        function fileMethodFactory() {\n            let prop = '';\n            return function (file) {\n                if (!file) {\n                    return prop;\n                }\n\n                if (/^https?:\\/\\//gi.test(file)) {\n                    return v.request.get(file, {}, {\n                        headers: {\n                            'Accept': 'text/plain',\n                            'Content-Type': 'text/plain'\n                        }\n                    })\n                        .then(contents => {\n                            prop += contents;\n                        });\n                }\n\n                return new Promise((resolve, reject) => {\n                    fs.readFile(file, 'utf8', (err, contents) => {\n                        if (err) {\n                            return reject(err);\n                        }\n\n                        prop += contents;\n                        resolve(prop);\n                    });\n                });\n            };\n        };\n\n        v.inline = {\n            css: fileMethodFactory(),\n            js: fileMethodFactory(),\n            uncss(renderedHtml, options = {}) {\n                options.raw = v.inline.css();\n                return Promise.all(renderedHtml)\n                    .then(html => {\n                        return new Promise((resolve, reject) => {\n                            uncss(html, options, (err, output) => {\n                                if (err) {\n                                    reject(err);\n                                }\n                                resolve(output);\n                            });\n                        });\n                    });\n            }\n        };\n\n        v.sw = function (file, options = {}) {\n            let opt = Object.assign({\n                    version: 'v1::',\n                    name: 'Valyrian.js',\n                    urls: ['/'],\n                    debug: false\n                }, options),\n                contents = swTpl\n                    .replace('v1::', 'v' + opt.version + '::')\n                    .replace('Valyrian.js', opt.name)\n                    .replace('[\\'/\\']', '[\"' + opt.urls.join('\",\"') + '\"]');\n\n            if (!opt.debug) {\n                contents = contents.replace('console.log', '() => {}');\n            }\n\n            return new Promise((resolve, reject) => {\n                fs.writeFile(file, contents, 'utf8', errorHandler(resolve, reject));\n            });\n        };\n\n\n        v.icons = function (source, configuration = {}) {\n            let favicons = require('favicons'),\n                html2hs = require('html2hs'),\n                options = Object.assign({}, v.icons.options, configuration);\n\n            if (options.iconsPath) {\n                options.iconsPath = options.iconsPath.replace(/\\/$/gi, '') + '/';\n            }\n\n            if (options.iconsPath) {\n                options.linksViewPath = options.linksViewPath.replace(/\\/$/gi, '') + '/';\n            }\n\n            return new Promise((resolve, reject) => {\n                favicons(source, options, (err, response) => {\n                    if (err) {\n                        process.stdout.write(err.status + '\\n'); // HTTP error code (e.g. `200`) or `null`\n                        process.stdout.write(err.name + '\\n'); // Error name e.g. \"API Error\"\n                        process.stdout.write(err.message + '\\n'); // Error description e.g. \"An unknown error has occurred\"\n\n                        return reject(err);\n                    }\n\n                    let promises = [];\n\n                    if (options.iconsPath) {\n                        for (let i in response.images) {\n                            promises.push(new Promise((resolve, reject) => {\n                                fs.writeFile(options.iconsPath + response.images[i].name, response.images[i].contents, errorHandler(resolve, reject));\n                            }));\n                        }\n\n                        for (let i in response.files) {\n                            promises.push(new Promise((resolve, reject) => {\n                                fs.writeFile(options.iconsPath + response.files[i].name, response.files[i].contents, errorHandler(resolve, reject));\n                            }));\n                        }\n                    }\n\n                    if (options.linksViewPath) {\n                        let html = 'export default { \\n    view(){ \\n        return [';\n                        for (let i in response.html) {\n                            html += '\\n            ' + html2hs(response.html[i]) + ',';\n                        }\n                        html = html.replace(/,$/gi, '').replace(/h\\(\"/gi, 'v(\"') + '\\n        ];\\n    }\\n};';\n\n                        promises.push(new Promise((resolve, reject) => {\n                            fs.writeFile(`${options.linksViewPath}/links.js`, html, errorHandler(resolve, reject));\n                        }));\n                    }\n\n                    Promise.all(promises)\n                        .then(() => {\n                            resolve(response);\n                        })\n                        .catch(reject);\n                });\n            });\n        };\n\n        v.icons.options = {\n            iconsPath: null, // Path to the generated icons\n            linksViewPath: null, // Path to the generated links file\n\n            // favicons options\n            path: '', // Path for overriding default icons path. `string`\n            appName: null, // Your application's name. `string`\n            appDescription: null, // Your application's description. `string`\n            developerName: null, // Your (or your developer's) name. `string`\n            developerURL: null,\n            dir: 'auto',\n            lang: 'en-US',\n            background: '#fff', // Background colour for flattened icons. `string`\n            theme_color: '#fff',\n            display: \"standalone\", // Android display: \"browser\" or \"standalone\". `string`\n            orientation: \"any\", // Android orientation: \"any\" \"portrait\" or \"landscape\". `string`\n            start_url: \"/\", // Android start application's URL. `string`\n            version: '1.0', // Your application's version number. `number`\n            logging: false, // Print logs to console? `boolean`\n            icons: {\n                android: true, // Create Android homescreen icon. `boolean`\n                appleIcon: true, // Create Apple touch icons. `boolean` or `{ offset: offsetInPercentage }`\n                appleStartup: true, // Create Apple startup images. `boolean`\n                coast: false, // Create Opera Coast icon with offset 25%. `boolean` or `{ offset: offsetInPercentage }`\n                favicons: true, // Create regular favicons. `boolean`\n                firefox: false, // Create Firefox OS icons. `boolean` or `{ offset: offsetInPercentage }`\n                windows: true, // Create Windows 8 tile icons. `boolean`\n                yandex: false // Create Yandex browser icon. `boolean`\n            }\n        };\n    };\n}\n"],"names":["global","VNodeHelpersFactory","v","let","fs","require","uncss","errorHandler","resolve","reject","err","fileMethodFactory","prop","file","test","request","get","headers","Accept","Content-Type","then","contents","Promise","readFile","inline","css","js","renderedHtml","options","raw","all","html","output","sw","opt","Object","assign","version","name","urls","debug","swTpl","replace","join","writeFile","icons","source","configuration","favicons","html2hs","iconsPath","linksViewPath","response","process","stdout","write","status","message","promises","push","images","i","files","catch","path","appName","appDescription","developerName","developerURL","dir","lang","background","theme_color","display","orientation","start_url","logging","android","appleIcon","appleStartup","coast","firefox","windows","yandex"],"mappings":"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"}