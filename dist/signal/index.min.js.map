//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"names":["makeUnsubscribe","subscriptions","computed","handler","cleanup","unsubscribe","delete","updateTimeout","localValyrian","Signal","value","Map","getters","forceUpdate","signal","Proxy","valOrPath","has","set","get","createSubscription","next","parsed","split","result","length","shift","state","prop","val","old","clearTimeout","setTimeout","Object","defineProperties","writable","enumerable","getter","name","Error"],"sources":["../../lib/signal/index.ts"],"sourcesContent":["import { Valyrian } from \"Valyrian\";\n\n/* eslint-disable no-use-before-define */\ninterface Cleanup {\n  (): void;\n}\n\ninterface Subscription {\n  // eslint-disable-next-line no-unused-vars\n  (value: Signal[\"value\"]): void | Cleanup;\n}\n\ninterface Subscriptions extends Map<Subscription, Cleanup> {}\n\ninterface Getter {\n  // eslint-disable-next-line no-unused-vars\n  (value: Signal[\"value\"]): any;\n}\n\ninterface Getters {\n  [key: string | symbol]: Getter;\n}\n\ninterface Signal {\n  // Works as a getter of the value\n  (): Signal[\"value\"];\n  // Works as a subscription to the value\n  // eslint-disable-next-line no-unused-vars\n  (value: Subscription): Signal;\n  // Works as a setter with a path and a handler\n  // eslint-disable-next-line no-unused-vars\n  (path: string, handler: (valueAtPathPosition: any) => any): Signal[\"value\"];\n  // Works as a setter with a path and a value\n  // eslint-disable-next-line no-unused-vars\n  (path: string, value: any): Signal[\"value\"];\n  // Works as a setter with a value\n  // eslint-disable-next-line no-unused-vars\n  (value: any): Signal[\"value\"];\n  // Gets the current value of the signal.\n  value: any;\n  // Cleanup function to be called to remove all subscriptions.\n  cleanup: () => void;\n  // Creates a getter on the signal.\n  // eslint-disable-next-line no-unused-vars\n  getter: (name: string, handler: Getter) => any;\n  // To access the getters on the signal.\n  [key: string | number | symbol]: any;\n}\n\nfunction makeUnsubscribe(subscriptions: Subscriptions, computed: Signal, handler: Subscription, cleanup?: Cleanup) {\n  if (typeof cleanup === \"function\") {\n    computed.cleanup = cleanup;\n  }\n  computed.unsubscribe = () => {\n    subscriptions.delete(handler);\n    computed?.cleanup();\n  };\n}\n\nfunction createSubscription(signal: Signal, subscriptions: Subscriptions, handler: Subscription) {\n  if (subscriptions.has(handler) === false) {\n    // eslint-disable-next-line no-use-before-define\n    let computed = Signal(() => handler(signal.value));\n    let cleanup = computed(); // Execute to register itself\n    makeUnsubscribe(subscriptions, computed, handler, cleanup);\n    subscriptions.set(handler, computed);\n  }\n\n  return subscriptions.get(handler);\n}\n\nlet localValyrian: Valyrian = {\n  update: () => {}\n} as unknown as Valyrian;\n\nlet updateTimeout: any;\nfunction delayedUpdate() {\n  clearTimeout(updateTimeout);\n  updateTimeout = setTimeout(localValyrian.update);\n}\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nexport function Signal(value: any): Signal {\n  let subscriptions = new Map();\n  let getters: Getters = {};\n\n  let forceUpdate = false;\n\n  let signal: Signal = new Proxy(\n    // eslint-disable-next-line no-unused-vars\n    function (valOrPath?: any | Subscription, handler?: (valueAtPathPosition: any) => any) {\n      // Works as a getter\n      if (typeof valOrPath === \"undefined\") {\n        return signal.value;\n      }\n\n      // Works as a subscription\n      if (typeof valOrPath === \"function\") {\n        return createSubscription(signal, subscriptions, valOrPath);\n      }\n\n      // Works as a setter with a path\n      if (typeof valOrPath === \"string\" && typeof handler !== \"undefined\") {\n        let parsed = valOrPath.split(\".\");\n        let result = signal.value;\n        let next;\n        while (parsed.length) {\n          next = parsed.shift() as string;\n          if (parsed.length > 0) {\n            if (typeof result[next] !== \"object\") {\n              result[next] = {};\n            }\n            result = result[next];\n          } else {\n            result[next] = typeof handler === \"function\" ? handler(result[next]) : handler;\n          }\n        }\n        forceUpdate = true;\n        signal.value = signal.value;\n        return signal.value;\n      }\n\n      // Works as a setter with a value\n      signal.value = valOrPath;\n      return signal.value;\n    } as Signal,\n    {\n      set(state, prop, val) {\n        if (prop === \"value\" || prop === \"unsubscribe\" || prop === \"cleanup\") {\n          let old = state[prop];\n          state[prop] = val;\n          if (prop === \"value\" && (forceUpdate || val !== old)) {\n            forceUpdate = false;\n            for (let [handler, computed] of subscriptions) {\n              computed.cleanup();\n              let cleanup = handler(val);\n              makeUnsubscribe(subscriptions, computed, handler, cleanup);\n            }\n            delayedUpdate();\n          }\n          return true;\n        }\n        return false;\n      },\n      get(state, prop) {\n        if (prop === \"value\") {\n          return typeof state.value === \"function\" ? state.value() : state.value;\n        }\n\n        if (prop === \"cleanup\" || prop === \"unsubscribe\" || prop === \"getter\") {\n          return state[prop];\n        }\n\n        if (prop in getters) {\n          return getters[prop](state.value);\n        }\n      }\n    }\n  );\n\n  Object.defineProperties(signal, {\n    value: { value, writable: true, enumerable: true },\n    cleanup: {\n      value() {\n        // eslint-disable-next-line no-unused-vars\n        for (let [handler, computed] of subscriptions) {\n          computed.unsubscribe();\n        }\n      },\n      writable: true,\n      enumerable: true\n    },\n    getter: {\n      value(name: string, handler: Getter) {\n        if (name in getters) {\n          throw new Error(\"Named computed already exists.\");\n        }\n\n        getters[name] = handler;\n      },\n      enumerable: true\n    }\n  });\n\n  return signal;\n}\n"],"mappings":"MAiDA,SAASA,EAAgBC,EAA8BC,EAAkBC,EAAuBC,GACvE,mBAAZA,IACTF,EAASE,QAAUA,GAErBF,EAASG,YAAc,KACrBJ,EAAcK,OAAOH,GACrBD,GAAUE,SAAQ,CAEtB,CAcA,IAIIG,EAJAC,EACM,OAUH,SAASC,EAAOC,GACrB,IAAIT,EAAgB,IAAIU,IACpBC,EAAmB,CAAC,EAEpBC,GAAc,EAEdC,EAAiB,IAAIC,MAEvB,SAAUC,EAAgCb,GAExC,QAAyB,IAAda,EACT,OAAOF,EAAOJ,MAIhB,GAAyB,mBAAdM,EACT,OAvCR,SAA4BF,EAAgBb,EAA8BE,GACxE,IAAmC,IAA/BF,EAAcgB,IAAId,GAAoB,CAExC,IAAID,EAAWO,EAAO,IAAMN,EAAQW,EAAOJ,QACvCN,EAAUF,IACdF,EAAgBC,EAAeC,EAAUC,EAASC,GAClDH,EAAciB,IAAIf,EAASD,EAC7B,CAEA,OAAOD,EAAckB,IAAIhB,EAC3B,CA6BeiB,CAAmBN,EAAQb,EAAee,GAInD,GAAyB,iBAAdA,QAA6C,IAAZb,EAAyB,CACnE,IAEIkB,EAFAC,EAASN,EAAUO,MAAM,KACzBC,EAASV,EAAOJ,MAEpB,KAAOY,EAAOG,QACZJ,EAAOC,EAAOI,QACVJ,EAAOG,OAAS,GACU,iBAAjBD,EAAOH,KAChBG,EAAOH,GAAQ,CAAC,GAElBG,EAASA,EAAOH,IAEhBG,EAAOH,GAA2B,mBAAZlB,EAAyBA,EAAQqB,EAAOH,IAASlB,EAK3E,OAFAU,GAAc,EACdC,EAAOJ,MAAQI,EAAOJ,MACfI,EAAOJ,KAChB,CAIA,OADAI,EAAOJ,MAAQM,EACRF,EAAOJ,KAChB,EACA,CACEQ,IAAIS,EAAOC,EAAMC,GACf,GAAa,UAATD,GAA6B,gBAATA,GAAmC,YAATA,EAAoB,CACpE,IAAIE,EAAMH,EAAMC,GAEhB,GADAD,EAAMC,GAAQC,EACD,UAATD,IAAqBf,GAAegB,IAAQC,GAAM,CACpDjB,GAAc,EACd,QAAUV,EAASD,KAAaD,EAAe,CAC7CC,EAASE,UACT,IAAIA,EAAUD,EAAQ0B,GACtB7B,EAAgBC,EAAeC,EAAUC,EAASC,EACpD,CA5DV2B,aAAaxB,GACbA,EAAgByB,WAAWxB,EA6DnB,CACA,OAAO,CACT,CACA,OAAO,CACT,EACAW,IAAA,CAAIQ,EAAOC,IACI,UAATA,EAC4B,mBAAhBD,EAAMjB,MAAuBiB,EAAMjB,QAAUiB,EAAMjB,MAGtD,YAATkB,GAA+B,gBAATA,GAAmC,WAATA,EAC3CD,EAAMC,GAGXA,KAAQhB,EACHA,EAAQgB,GAAMD,EAAMjB,YAD7B,IA+BN,OAxBAuB,OAAOC,iBAAiBpB,EAAQ,CAC9BJ,MAAO,CAAEA,QAAOyB,UAAU,EAAMC,YAAY,GAC5ChC,QAAS,CACPM,QAEE,QAAUP,EAASD,KAAaD,EAC9BC,EAASG,aAEb,EACA8B,UAAU,EACVC,YAAY,GAEdC,OAAQ,CACN3B,MAAM4B,EAAcnC,GAClB,GAAImC,KAAQ1B,EACV,MAAM,IAAI2B,MAAM,kCAGlB3B,EAAQ0B,GAAQnC,CAClB,EACAiC,YAAY,KAITtB,CACT,C"}