(()=>{"use strict";var e=Object.defineProperty,t=Object.getOwnPropertyDescriptor,r=Object.getOwnPropertyNames,o=Object.prototype.hasOwnProperty,s={};((t,r)=>{for(var o in r)e(t,o,{get:r[o],enumerable:!0})})(s,{StorageType:()=>l,createNativeStore:()=>y});var a,i=(a=s,((s,a,i,n)=>{if(a&&"object"==typeof a||"function"==typeof a)for(let l of r(a))o.call(s,l)||l===i||e(s,l,{get:()=>a[l],enumerable:!(n=t(a,l))||n.enumerable});return s})(e({},"__esModule",{value:!0}),a)),n=require("valyrian.js"),l=(e=>(e.Session="session",e.Local="local",e))(l||{}),c=new Set;function y(e,t={},r="local",o=!1){const s=function(e){if(n.isNodeJs&&"undefined"==typeof localStorage)throw new Error('localStorage and sessionStorage are not available in Node.js, to use it in your project, you need to "import "valyrian.js/node"');return"session"===e?sessionStorage:localStorage}(r);if(c.has(e)){if(!o)throw new Error(`Store with key ${e} already exists`);console.warn(`Store with key ${e} already exists and will be reused`)}c.add(e);const a=e,i={state:{},set(e,t){try{this.state[e]=t,s.setItem(a,JSON.stringify(this.state))}catch(e){console.error("Error setting item in storage:",e)}},get(e){return 0===Object.keys(this.state).length&&this.load(),this.state[e]},delete(e){try{Reflect.deleteProperty(this.state,e),s.setItem(a,JSON.stringify(this.state))}catch(e){console.error("Error deleting item in storage:",e)}},load(){try{const e=s.getItem(a);if(!e)return this.state={},void s.setItem(a,JSON.stringify(this.state));this.state=JSON.parse(e)}catch(e){console.error("Error loading state from storage:",e),this.state={}}},clear(){try{this.state={},s.removeItem(a)}catch(e){console.error("Error clearing storage:",e)}},...t};return i.load(),i}"undefined"!=typeof module?module.exports=i:self.ValyrianNativeStore=i})();//# sourceMappingURL=index.min.js.map