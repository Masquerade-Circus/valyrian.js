{
  "version": 3,
  "sources": ["../../lib/native-store/index.ts"],
  "sourcesContent": ["import { isNodeJs } from \"valyrian.js\";\n\n/* eslint-disable no-console */\nexport enum StorageType {\n  // eslint-disable-next-line no-unused-vars\n  Session = \"session\",\n  // eslint-disable-next-line no-unused-vars\n  Local = \"local\"\n}\n\nexport interface NativeStorageInterface {\n  state: Record<string, any>;\n  // eslint-disable-next-line no-unused-vars\n  set(key: string, value: any): void;\n  // eslint-disable-next-line no-unused-vars\n  get(key: string): any;\n  // eslint-disable-next-line no-unused-vars\n  delete(key: string): void;\n  load(): void;\n  clear(): void;\n}\n\nconst ids = new Set<string>();\n\nfunction getStorage(storageType: StorageType) {\n  if (isNodeJs && typeof localStorage === \"undefined\") {\n    throw new Error(\n      `localStorage and sessionStorage are not available in Node.js, to use it in your project, you need to \"import \"valyrian.js/node\"`\n    );\n  }\n  return storageType === StorageType.Session ? sessionStorage : localStorage;\n}\n\nexport function createNativeStore<T>(\n  key: string,\n  definition: Record<string, any> = {},\n  storageType: StorageType = StorageType.Local,\n  reuseIfExist = false\n): NativeStorageInterface & T {\n  const nativeStore = getStorage(storageType);\n\n  if (ids.has(key)) {\n    if (reuseIfExist) {\n      // eslint-disable-next-line no-console\n      console.warn(`Store with key ${key} already exists and will be reused`);\n    } else {\n      throw new Error(`Store with key ${key} already exists`);\n    }\n  }\n  ids.add(key);\n\n  const id = key;\n\n  const Store: NativeStorageInterface = {\n    state: {},\n    set(key, value) {\n      try {\n        this.state[key] = value;\n        nativeStore.setItem(id, JSON.stringify(this.state));\n      } catch (e) {\n        console.error(\"Error setting item in storage:\", e);\n      }\n    },\n    get(key) {\n      if (Object.keys(this.state).length === 0) {\n        this.load();\n      }\n      return this.state[key];\n    },\n    delete(key) {\n      try {\n        Reflect.deleteProperty(this.state, key);\n        nativeStore.setItem(id, JSON.stringify(this.state));\n      } catch (e) {\n        console.error(\"Error deleting item in storage:\", e);\n      }\n    },\n    load() {\n      try {\n        const state = nativeStore.getItem(id);\n        if (!state) {\n          this.state = {};\n          nativeStore.setItem(id, JSON.stringify(this.state));\n          return;\n        }\n        this.state = JSON.parse(state);\n      } catch (e) {\n        console.error(\"Error loading state from storage:\", e);\n        this.state = {};\n      }\n    },\n    clear() {\n      try {\n        this.state = {};\n        nativeStore.removeItem(id);\n      } catch (e) {\n        console.error(\"Error clearing storage:\", e);\n      }\n    },\n    ...definition\n  };\n\n  Store.load();\n\n  return Store as NativeStorageInterface & T;\n}\n"],
  "mappings": ";AAAA,SAAS,gBAAgB;AAGlB,IAAK,cAAL,kBAAKA,iBAAL;AAEL,EAAAA,aAAA,aAAU;AAEV,EAAAA,aAAA,WAAQ;AAJE,SAAAA;AAAA,GAAA;AAmBZ,IAAM,MAAM,oBAAI,IAAY;AAE5B,SAAS,WAAW,aAA0B;AAC5C,MAAI,YAAY,OAAO,iBAAiB,aAAa;AACnD,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACA,SAAO,gBAAgB,0BAAsB,iBAAiB;AAChE;AAEO,SAAS,kBACd,KACA,aAAkC,CAAC,GACnC,cAA2B,qBAC3B,eAAe,OACa;AAC5B,QAAM,cAAc,WAAW,WAAW;AAE1C,MAAI,IAAI,IAAI,GAAG,GAAG;AAChB,QAAI,cAAc;AAEhB,cAAQ,KAAK,kBAAkB,GAAG,oCAAoC;AAAA,IACxE,OAAO;AACL,YAAM,IAAI,MAAM,kBAAkB,GAAG,iBAAiB;AAAA,IACxD;AAAA,EACF;AACA,MAAI,IAAI,GAAG;AAEX,QAAM,KAAK;AAEX,QAAM,QAAgC;AAAA,IACpC,OAAO,CAAC;AAAA,IACR,IAAIC,MAAK,OAAO;AACd,UAAI;AACF,aAAK,MAAMA,IAAG,IAAI;AAClB,oBAAY,QAAQ,IAAI,KAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MACpD,SAAS,GAAG;AACV,gBAAQ,MAAM,kCAAkC,CAAC;AAAA,MACnD;AAAA,IACF;AAAA,IACA,IAAIA,MAAK;AACP,UAAI,OAAO,KAAK,KAAK,KAAK,EAAE,WAAW,GAAG;AACxC,aAAK,KAAK;AAAA,MACZ;AACA,aAAO,KAAK,MAAMA,IAAG;AAAA,IACvB;AAAA,IACA,OAAOA,MAAK;AACV,UAAI;AACF,gBAAQ,eAAe,KAAK,OAAOA,IAAG;AACtC,oBAAY,QAAQ,IAAI,KAAK,UAAU,KAAK,KAAK,CAAC;AAAA,MACpD,SAAS,GAAG;AACV,gBAAQ,MAAM,mCAAmC,CAAC;AAAA,MACpD;AAAA,IACF;AAAA,IACA,OAAO;AACL,UAAI;AACF,cAAM,QAAQ,YAAY,QAAQ,EAAE;AACpC,YAAI,CAAC,OAAO;AACV,eAAK,QAAQ,CAAC;AACd,sBAAY,QAAQ,IAAI,KAAK,UAAU,KAAK,KAAK,CAAC;AAClD;AAAA,QACF;AACA,aAAK,QAAQ,KAAK,MAAM,KAAK;AAAA,MAC/B,SAAS,GAAG;AACV,gBAAQ,MAAM,qCAAqC,CAAC;AACpD,aAAK,QAAQ,CAAC;AAAA,MAChB;AAAA,IACF;AAAA,IACA,QAAQ;AACN,UAAI;AACF,aAAK,QAAQ,CAAC;AACd,oBAAY,WAAW,EAAE;AAAA,MAC3B,SAAS,GAAG;AACV,gBAAQ,MAAM,2BAA2B,CAAC;AAAA,MAC5C;AAAA,IACF;AAAA,IACA,GAAG;AAAA,EACL;AAEA,QAAM,KAAK;AAEX,SAAO;AACT;",
  "names": ["StorageType", "key"]
}
