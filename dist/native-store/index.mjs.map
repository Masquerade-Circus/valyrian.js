{
  "version": 3,
  "sources": ["../../lib/native-store/index.ts"],
  "sourcesContent": ["export interface NativeStorageInterface {\n  state: Record<string, any>;\n  set(key: string, value: any): void;\n  get(key: string): any;\n  delete(key: string): void;\n  load(): void;\n  clear(): void;\n}\n\nconst nativeStore = sessionStorage || localStorage;\n\nconst ids = new Set<string>();\n\nexport function createNativeStore<T>(\n  key: string,\n  definition: Record<string, any> = {},\n  reuseIfExist = false\n): NativeStorageInterface & T {\n  if (ids.has(key)) {\n    if (reuseIfExist) {\n      // eslint-disable-next-line no-console\n      console.warn(`Store with key ${key} already exists and will be reused`);\n    } else {\n      throw new Error(`Store with key ${key} already exists`);\n    }\n  }\n  ids.add(key);\n  const Store: NativeStorageInterface = {\n    state: {},\n    set(key, value) {\n      this.state[key] = value;\n      nativeStore.setItem(key, JSON.stringify(this.state));\n    },\n    get(key) {\n      if (!this.state) {\n        this.load();\n      }\n      return this.state[key];\n    },\n    delete(key) {\n      Reflect.deleteProperty(this.state, key);\n      nativeStore.setItem(key, JSON.stringify(this.state));\n    },\n    load() {\n      const state = nativeStore.getItem(key);\n      if (!state) {\n        this.state = {};\n        nativeStore.setItem(key, JSON.stringify(this.state));\n        return;\n      }\n      this.state = JSON.parse(state);\n    },\n    clear() {\n      this.state = {};\n      nativeStore.removeItem(key);\n    },\n    ...definition\n  };\n\n  Store.load();\n\n  return Store as NativeStorageInterface & T;\n}\n"],
  "mappings": ";AASA,IAAM,cAAc,kBAAkB;AAEtC,IAAM,MAAM,oBAAI,IAAY;AAErB,SAAS,kBACd,KACA,aAAkC,CAAC,GACnC,eAAe,OACa;AAC5B,MAAI,IAAI,IAAI,GAAG,GAAG;AAChB,QAAI,cAAc;AAEhB,cAAQ,KAAK,kBAAkB,GAAG,oCAAoC;AAAA,IACxE,OAAO;AACL,YAAM,IAAI,MAAM,kBAAkB,GAAG,iBAAiB;AAAA,IACxD;AAAA,EACF;AACA,MAAI,IAAI,GAAG;AACX,QAAM,QAAgC;AAAA,IACpC,OAAO,CAAC;AAAA,IACR,IAAIA,MAAK,OAAO;AACd,WAAK,MAAMA,IAAG,IAAI;AAClB,kBAAY,QAAQA,MAAK,KAAK,UAAU,KAAK,KAAK,CAAC;AAAA,IACrD;AAAA,IACA,IAAIA,MAAK;AACP,UAAI,CAAC,KAAK,OAAO;AACf,aAAK,KAAK;AAAA,MACZ;AACA,aAAO,KAAK,MAAMA,IAAG;AAAA,IACvB;AAAA,IACA,OAAOA,MAAK;AACV,cAAQ,eAAe,KAAK,OAAOA,IAAG;AACtC,kBAAY,QAAQA,MAAK,KAAK,UAAU,KAAK,KAAK,CAAC;AAAA,IACrD;AAAA,IACA,OAAO;AACL,YAAM,QAAQ,YAAY,QAAQ,GAAG;AACrC,UAAI,CAAC,OAAO;AACV,aAAK,QAAQ,CAAC;AACd,oBAAY,QAAQ,KAAK,KAAK,UAAU,KAAK,KAAK,CAAC;AACnD;AAAA,MACF;AACA,WAAK,QAAQ,KAAK,MAAM,KAAK;AAAA,IAC/B;AAAA,IACA,QAAQ;AACN,WAAK,QAAQ,CAAC;AACd,kBAAY,WAAW,GAAG;AAAA,IAC5B;AAAA,IACA,GAAG;AAAA,EACL;AAEA,QAAM,KAAK;AAEX,SAAO;AACT;",
  "names": ["key"]
}
