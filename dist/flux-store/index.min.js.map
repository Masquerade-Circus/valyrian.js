//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"names":["flux_store_exports","__export","FluxStore","__EXPORTS__","import_valyrian","require","import_utils","_FluxStore","state","getters","init","rootStore","namespace","constructor","mutations","actions","modules","shouldFreeze","localState","this","Proxy","get","prop","frozen","deepFreeze","newState","deepCloneUnfreeze","key","Reflect","ownKeys","set","value","isUnfrozen","old","trigger","deleteProperty","plugins","childModuleNamespaces","Object","keys","listeners","delete","beforecommit","commit","beforedispatch","dispatch","getter","addlistener","removelistener","plugin","registerModule","unregisterModule","store","getStore","error","forEach","n","keyExists","objectname","object","Error","isFunction","type","callback","indexOf","parts","split","pop","moduleName","join","mutation","args","debouncedUpdate","action","result","event","on","listener","push","off","index","splice","use","options","module","newStore"],"sources":["../../lib/flux-store/index.ts"],"sourcesContent":["import { debouncedUpdate } from \"valyrian.js\";\nimport { deepCloneUnfreeze, deepFreeze } from \"valyrian.js/utils\";\n\ninterface StoreOptions {\n  state?: Record<string, any> | (() => Record<string, any>);\n  // eslint-disable-next-line no-unused-vars\n  mutations?: Record<string, (state: Record<string, any>, ...args: any[]) => void>;\n  // eslint-disable-next-line no-unused-vars, no-use-before-define\n  actions?: Record<string, (store: FluxStore, ...args: any[]) => any>;\n  getters?: Record<\n    string,\n    // eslint-disable-next-line no-unused-vars\n    (state: Record<string, any>, getters: Record<string, any>, globalState?: any, globalGetters?: any) => any\n  >;\n  modules?: Record<string, StoreOptions>;\n  shouldFreeze?: boolean;\n  namespace?: string;\n  // eslint-disable-next-line no-use-before-define\n  rootStore?: FluxStore;\n}\n\n// This is the store entity\nexport class FluxStore {\n  public state: Record<string, any>;\n  public getters: Record<string, any>;\n  private init: {\n    frozen: boolean;\n    plugins: Function[];\n    // eslint-disable-next-line no-use-before-define\n    modules: Record<string, FluxStore>;\n    childModuleNamespaces: string[];\n    listeners: Record<string, Function[]>;\n    getters: StoreOptions[\"getters\"];\n    mutations: StoreOptions[\"mutations\"];\n    actions: StoreOptions[\"actions\"];\n  };\n  // eslint-disable-next-line no-use-before-define\n  public rootStore: FluxStore | null;\n  public namespace: string | null;\n\n  // eslint-disable-next-line sonarjs/cognitive-complexity\n  constructor({\n    state = {},\n    mutations = {},\n    actions = {},\n    getters = {},\n    modules = {},\n    shouldFreeze = true,\n    namespace,\n    rootStore\n  }: StoreOptions = {}) {\n    // Initialize the localState for this store\n    const localState = typeof state === \"function\" ? state() : state;\n\n    // We create a proxy for the state\n    this.state = new Proxy(localState || {}, {\n      // Every time we try to access a property from the state we try to deep freeze the property\n      // to prevent direct modifications to the state\n      get: (state, prop: string) => {\n        if ((this.rootStore || this).init.modules[prop]) {\n          return state[prop];\n        }\n        if (shouldFreeze) {\n          // We are accessing a property from outside the store\n          if (this.init.frozen) {\n            return deepFreeze(state[prop]);\n          }\n\n          // We are accessing a property from inside the store\n          // So we need to unfreeze the state\n          const newState = deepCloneUnfreeze(state);\n          for (const key of Reflect.ownKeys(newState)) {\n            localState[key] = newState[key];\n          }\n        }\n        return state[prop];\n      },\n      // If the user tries to set directly it will throw an error, only if we have unfrozen the state via commit\n      // this will proceed to set the value\n      set: (state, prop: string, value: any) => {\n        this.isUnfrozen();\n        const old = state[prop];\n        state[prop] = value;\n        if (this.namespace) {\n          prop = `${this.namespace}.${prop}`;\n        }\n        (this.rootStore || this).trigger(\"set\", prop, value, old);\n        return true;\n      },\n      // If the user tries to delete directly it will throw an error, only if we have unfrozen the state via commit\n      // this will proceed to delete the property\n      deleteProperty: (state, prop: string) => {\n        this.isUnfrozen();\n        const old = state[prop];\n        Reflect.deleteProperty(state, prop);\n        if (this.namespace) {\n          prop = `${this.namespace}.${prop}`;\n        }\n        (this.rootStore || this).trigger(\"delete\", prop, old);\n        return true;\n      }\n    });\n\n    // If this is a store been attached to another store\n    // this will have the rootStore for future reference\n    this.rootStore = rootStore || null;\n\n    // If this is a store been attached to another store\n    // this will have the namespace attached\n    this.namespace = namespace || null;\n\n    // We initialize the store with the initial values\n    this.init = {\n      frozen: true,\n      plugins: [],\n      modules: {},\n      childModuleNamespaces: Object.keys(modules || {}),\n      listeners: {\n        set: [],\n        delete: [],\n        beforecommit: [],\n        commit: [],\n        beforedispatch: [],\n        dispatch: [],\n        getter: [],\n        addlistener: [],\n        removelistener: [],\n        plugin: [],\n        registerModule: [],\n        unregisterModule: []\n      },\n      getters: getters || {},\n      mutations: mutations || {},\n      actions: actions || {}\n    };\n\n    // We create a proxy for the getters\n    this.getters = new Proxy(getters || {}, {\n      // When we try to get a property of the getter we will call the original\n      // getter method passing the state as first argument and the other getters as second\n      // if we try to get a non existent getter it will fail silently as if\n      // we were trying to get an undefined property\n      get: (getters, getter: string) => {\n        try {\n          const { store, key } = this.getStore(this, getter);\n          if (store instanceof FluxStore && store.init.getters![key]) {\n            const value = store.init.getters![key](store.state, store.getters, this.state, this.getters);\n            if (this.namespace) {\n              getter = `${this.namespace}.${getter}`;\n            }\n            (this.rootStore || this).trigger(\"getter\", getter, value);\n            return value;\n          }\n        } catch (error) {\n          return;\n        }\n      }\n    });\n\n    // Finally we attach the initial modules\n    if (modules) {\n      Object.keys(modules).forEach((namespace) => {\n        const n = this.namespace ? `${this.namespace}.${namespace}` : namespace;\n        (this.rootStore || this).registerModule(n, modules[namespace]);\n      });\n    }\n  }\n\n  private keyExists(objectname: string, object: Record<string, any>, key: string) {\n    if (!object[key]) {\n      throw new Error(`The ${objectname} \"${key}\" does not exists.`);\n    }\n  }\n\n  private isFunction(type: string, callback: Function) {\n    if (typeof callback !== \"function\") {\n      throw new Error(`You need to provide a valid function as ${type}.`);\n    }\n  }\n\n  // Giving a dot based namespace this method will be used to find the module to be called\n  private getStore(store: FluxStore, namespace: string) {\n    let key = namespace;\n    if (key.indexOf(\".\") > -1) {\n      const parts = key.split(\".\");\n      key = parts.pop()!;\n      const moduleName = parts.join(\".\");\n      this.keyExists(\"module\", store.init.modules, moduleName);\n      store = store.init.modules[moduleName];\n    }\n    return {\n      store,\n      key\n    };\n  }\n\n  private isUnfrozen() {\n    if (this.init.frozen) {\n      throw new Error(\"You need to commit a mutation to change the state\");\n    }\n  }\n\n  // This method unfroze the state and process a mutation\n  public commit(mutation: string, ...args: any[]) {\n    const { store, key } = this.getStore(this, mutation);\n    this.keyExists(\"mutation\", store.init.mutations!, key);\n    store.init.frozen = false;\n    this.trigger(\"beforecommit\", mutation, ...args);\n    store.init.mutations![key](store.state, ...args);\n    this.trigger(\"commit\", mutation, ...args);\n    store.init.frozen = true;\n\n    // We call the debounced update to notify the changes\n    debouncedUpdate();\n  }\n\n  // This method will dispatch an action\n  public async dispatch(action: string, ...args: any[]): Promise<any> {\n    const { store, key } = this.getStore(this, action);\n    this.keyExists(\"action\", store.init.actions!, key);\n    this.trigger(\"beforedispatch\", action, ...args);\n    try {\n      const result = await store.init.actions![key](store, ...args);\n      this.trigger(\"dispatch\", action, ...args);\n      return result;\n    } finally {\n      debouncedUpdate();\n    }\n  }\n\n  // This method will trigger an event\n  public trigger(event: string, ...args: any[]) {\n    this.init.listeners[event].forEach((callback) => callback(this, ...args));\n  }\n\n  // This method will add a listener to the store\n  public on(event: string, listener: Function) {\n    this.isFunction(\"listener\", listener);\n    this.keyExists(\"event\", this.init.listeners, event);\n    if (this.init.listeners[event].indexOf(listener) === -1) {\n      this.init.listeners[event].push(listener);\n      this.trigger(\"addlistener\", event, listener);\n    }\n    return () => this.off(event, listener);\n  }\n\n  // Remove a listener from the store\n  public off(event: string, listener: Function) {\n    this.isFunction(\"listener\", listener);\n    this.keyExists(\"event\", this.init.listeners, event);\n    const index = this.init.listeners[event].indexOf(listener);\n    if (index > -1) {\n      this.init.listeners[event].splice(index, 1);\n      this.trigger(\"removelistener\", event, listener);\n    }\n  }\n\n  // This method will add a plugin to the store\n  public use(plugin: Function, ...options: any[]) {\n    this.isFunction(\"plugin\", plugin);\n    if (this.init.plugins.indexOf(plugin) === -1) {\n      plugin(this, ...options);\n      this.init.plugins.push(plugin);\n      this.trigger(\"plugin\", plugin, ...options);\n    }\n  }\n\n  // This method will register a module to the store\n  public registerModule(namespace: string, module: StoreOptions) {\n    const rootStore = this;\n    if (rootStore.init.modules[namespace]) {\n      throw new Error(`A module with the namespace \"${namespace}\" is already registered.`);\n    }\n    const newStore = new FluxStore({ ...module, rootStore, namespace });\n    rootStore.init.frozen = false;\n    rootStore.init.modules[namespace] = newStore;\n    rootStore.state[namespace] = newStore.state;\n    rootStore.init.frozen = true;\n    rootStore.trigger(\"registerModule\", namespace, module, newStore);\n\n    // We call the debounced update to notify the changes\n    debouncedUpdate();\n  }\n\n  // This method will unregister a module from the store\n  public unregisterModule(namespace: string) {\n    const rootStore = this;\n    const store = rootStore.init.modules[namespace];\n    if (store) {\n      store.init.childModuleNamespaces.forEach((n) => rootStore.unregisterModule(`${namespace}.${n}`));\n      rootStore.init.frozen = false;\n      Reflect.deleteProperty(rootStore.init.modules, namespace);\n      Reflect.deleteProperty(rootStore.state, namespace);\n      rootStore.init.frozen = true;\n      rootStore.trigger(\"unregisterModule\", namespace, store);\n\n      // We call the debounced update to notify the changes\n      debouncedUpdate();\n    }\n  }\n}\n"],"mappings":"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"}