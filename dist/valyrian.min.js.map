{"version":3,"file":"valyrian.min.js","sources":["../lib/patch.js","../lib/index.js"],"sourcesContent":["export default function (v) {\n  let und;\n  let mountedComponent;\n  let oldTree;\n  let mainContainer;\n  let oncreate = 'oncreate';\n  let onupdate = 'onupdate';\n  let onremove = 'onremove';\n  let onbeforeupdate = 'onbeforeupdate';\n  let svgstr = 'http://www.w3.org/2000/svg';\n\n  let bindings = [];\n\n  function runBindings(i, item, values, changed, name, val) {\n    i = bindings.length;\n    while (i--) {\n      item = bindings[i];\n      values = item.v.props[item.a] || '';\n      changed = false;\n      for (name in item.b) {\n        val = item.b[name](item.v);\n        if (val !== item.p[name]) {\n          item.p[name] = val;\n          changed = true;\n        }\n        if (typeof val === 'string') {\n          values += ` ${val}`;\n        } else if (val) {\n          values += ` ${name}`;\n        }\n      }\n      if (changed) {\n        if (item.v.dom[item.a] !== und && item.v.dom[item.a] !== values && !item.v.isSVG) {\n          item.v.dom[item.a] = values;\n        } else {\n          item.v.dom.setAttribute(item.a, values);\n        }\n      }\n    }\n    setTimeout(() => runBindings(), 0);\n  }\n\n  function lifecycleCall(vnode, methodName, oldNode, vnodeNodeChild) {\n    if (methodName === onremove) {\n      while (vnode.children.length) {\n        vnodeNodeChild = vnode.children.pop();\n        if (vnodeNodeChild.el) {\n          lifecycleCall(vnodeNodeChild, onremove);\n        }\n      }\n    }\n\n    if (vnode.props[methodName]) {\n      return vnode.props[methodName](vnode, oldNode);\n    }\n  }\n\n  function eventListener(e) {\n    if (e.currentTarget.events[e.type]) {\n      e.currentTarget.events[e.type](e);\n      if (!e.defaultPrevented) {\n        v.update();\n      }\n    }\n  }\n\n  function createElement(newNode, isSVG) {\n    newNode.dom = isSVG ? document.createElementNS(svgstr, newNode.name) : document.createElement(newNode.name);\n    newNode.dom.events = {};\n  }\n\n  // eslint-disable-next-line complexity, sonarjs/cognitive-complexity\n  function patch($parent, newTree, oldTree, isSVG, newNode, oldNode, i, isNew, name, shortName, prop, preventUpdate) {\n    // Remove deleted nodes\n    while (oldTree.length > newTree.length) {\n      oldNode = oldTree.pop();\n      if (oldNode.el) {\n        lifecycleCall(oldNode, onremove);\n      }\n      $parent.removeChild(oldNode.dom);\n    }\n\n    for (i = 0; i < newTree.length; i++) {\n      newNode = newTree[i];\n      oldNode = oldTree[i];\n\n\n      if (!newNode.el) {\n        // Added\n        if (oldNode === und) {\n          newNode.dom = document.createTextNode(newNode.nodeValue);\n          $parent.appendChild(newNode.dom);\n          // Replaced element\n        } else if (oldNode.el) {\n          newNode.dom = document.createTextNode(newNode.nodeValue);\n          lifecycleCall(oldNode, onremove);\n          $parent.replaceChild(newNode.dom, oldNode.dom);\n          // Replaced text\n        } else {\n          newNode.dom = oldNode.dom;\n          if (newNode.nodeValue !== oldNode.nodeValue) {\n            newNode.dom.nodeValue = newNode.nodeValue;\n          }\n        }\n      } else {\n        isNew = !v.is.mounted;\n        isSVG = isSVG || newNode.isSVG;\n        preventUpdate = false;\n\n        // Added\n        if (oldNode === und) {\n          createElement(newNode, isSVG);\n          $parent.appendChild(newNode.dom);\n          oldNode = { children: [], props: {} };\n          isNew = true;\n          // Replaced\n        } else if (newNode.name !== oldNode.name) {\n          createElement(newNode, isSVG);\n          lifecycleCall(oldNode, onremove);\n          $parent.replaceChild(newNode.dom, oldNode.dom);\n          isNew = true;\n          // Updated\n        } else {\n          newNode.dom = oldNode.dom;\n\n          preventUpdate = lifecycleCall(newNode, onbeforeupdate, oldNode) === false;\n\n          if (preventUpdate) {\n            newNode.children = oldNode.children;\n          } else {\n            for (name in oldNode.props) {\n              if (newNode.props[name] === und && !(name[0] === 'v' && name[1] === '-')) {\n                if (typeof oldNode.props[name] === 'function') {\n                  shortName = name.slice(2);\n                  if (newNode.dom.events[shortName]) {\n                    delete newNode.dom.events[shortName];\n                    newNode.dom.removeEventListener(shortName, eventListener);\n                  }\n                } else if (newNode.dom[name] !== und) {\n                  newNode.dom[name] = null;\n                } else {\n                  newNode.dom.removeAttribute(name);\n                }\n              }\n            }\n          }\n        }\n\n        if (!preventUpdate) {\n          for (name in newNode.props) {\n            prop = newNode.props[name];\n            if (typeof prop === 'function') {\n              shortName = name.slice(2);\n              switch (name) {\n                case oncreate:\n                case onupdate:\n                case onremove:\n                case 'onbeforeupdate':\n                  break;\n                default:\n                  if (!newNode.dom.events[shortName]) {\n                    newNode.dom.addEventListener(shortName, eventListener);\n                  }\n                  newNode.dom.events[shortName] = prop;\n                  break;\n              }\n            } else if (newNode.dom[name] !== und && newNode.dom[name] !== prop && !isSVG) {\n              newNode.dom[name] = prop;\n            } else if (name[0] === 'v' && name[1] === '-') {\n              bindings.push({\n                v: newNode,\n                a: name.slice(2),\n                b: prop,\n                p: {}\n              });\n            } else if (prop !== oldNode.props[name]) {\n              newNode.dom.setAttribute(name, prop);\n            }\n          }\n\n          lifecycleCall(newNode, isNew ? oncreate : onupdate, oldNode);\n          patch(newNode.dom, newNode.children, oldNode.children, isSVG);\n        }\n\n\n      }\n    }\n\n    return newTree;\n  }\n\n  // If use undom this serializes the dom to string html\n  function serialize(el, outer = true, i) {\n    if (el.nodeType === 3) {\n      return el.textContent;\n    }\n\n    let name = el.nodeName.toLowerCase();\n    let str = '';\n    let attr = el.attributes;\n    let child = el.childNodes;\n\n    if (outer) {\n      str += `<${name}`;\n      i = attr.length;\n      while (i--) {\n        str += ` ${attr[i].name}=\"${attr[i].value}\"`;\n      }\n\n      str += '>';\n    }\n\n    for (i = 0; i < child.length; i++) {\n      str += serialize(child[i]);\n    }\n\n    str += outer ? `</${name}>` : '';\n    return str;\n  }\n\n  v.update = function (args) {\n    bindings = [];\n    args = v.utils.flat(arguments, 0, []);\n    if (v.is.node || !v.is.updating) {\n      v.is.updating = true;\n      args.unshift(mountedComponent);\n      oldTree = patch(mainContainer, v.apply(v, args), oldTree);\n      v.is.updating = false;\n    }\n\n    if (v.is.node) {\n      return mainContainer.innerHTML;\n    }\n  };\n\n  v.mount = function (container, component) {\n    let args = v.utils.flat(arguments, 2, []);\n    mainContainer = v.is.node\n      ? document.createElement('div')\n      : typeof container === 'string'\n        ? document.querySelectorAll(container)[0]\n        : container;\n\n    oldTree = v.utils.dom2vnode(mainContainer).children;\n\n    if (!component.view && typeof component === 'function') {\n      component.view = component;\n    }\n\n    if (component.view) {\n      mountedComponent = component;\n    }\n\n    v.is.mounted = true;\n    runBindings();\n\n    return v.update.apply(v, args);\n  };\n}\n","'use strict';\n\nimport Patch from './patch';\n\nlet und;\nlet isArray = Array.isArray;\nlet forEach = Array.prototype.forEach;\n\nfunction v(tagOrComponent, props, vnode, children, i) {\n  if (typeof tagOrComponent === 'string') {\n    vnode = {\n      name: tagOrComponent,\n      props: props || {},\n      children: [],\n      el: true,\n      isSVG: tagOrComponent === 'svg'\n    };\n\n    v.utils.flat(arguments, 2, vnode.children, true);\n    return vnode;\n  }\n\n  if (!tagOrComponent.view && typeof tagOrComponent === 'function') {\n    tagOrComponent.view = tagOrComponent;\n  }\n\n  if (tagOrComponent.view) {\n    children = tagOrComponent.view.apply(tagOrComponent, v.utils.flat(arguments, 1, []));\n    return v.utils.flat(isArray(children) ? children : [children], 0, [], true);\n  }\n}\n\n// This could be extended to do a deep clone\n// This mutates the component\nv.addState = function (component, state) {\n  Object.assign(component, { view: component }, state);\n};\n\nv.utils = {\n  flat(args, start, arr, convertToVnode, l, next) {\n    l = args.length;\n\n    for (; start < l; start++) {\n      next = args[start];\n      if (isArray(next)) {\n        arr = v.utils.flat(next, 0, arr, convertToVnode);\n      } else if (next !== und && next !== null) {\n        if (convertToVnode === true && next.el === und) {\n          next = {\n            props: {},\n            nodeValue: String(next),\n            children: [],\n            el: false\n          };\n        }\n        arr.push(next);\n      }\n    }\n\n    return arr;\n  },\n  dom2vnode($el, vnode, nt) {\n    nt = $el.nodeType;\n    if (nt === 3 || nt === 1) {\n      vnode = {\n        props: {},\n        children: [],\n        dom: $el,\n        el: true,\n        isSVG: false\n      };\n\n      if (nt === 3) {\n        vnode.nodeValue = $el.nodeValue;\n        vnode.el = false;\n        return vnode;\n      }\n\n      vnode.name = $el.nodeName.toLowerCase();\n      vnode.isSVG = vnode.name === 'svg';\n\n      vnode.dom.events = {};\n\n      forEach.call($el.attributes, property => vnode.props[property.nodeName] = property.nodeValue);\n\n      forEach.call($el.childNodes, ($el) => {\n        let childvnode = v.utils.dom2vnode($el);\n        if (childvnode) {\n          vnode.children.push(childvnode);\n        }\n      });\n\n      return vnode;\n    }\n  }\n};\n\nv.is = {\n  node: typeof window === 'undefined',\n  mounted: false,\n  updating: false\n};\nv.is.browser = !v.is.node;\n\n// NOTE: This does not work with undom for server side rendering\n// See: https://github.com/developit/undom/issues/7\nv.trust = function (htmlString) {\n  let div = document.createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  return Array.prototype.map.call(div.childNodes, (item) => v.utils.dom2vnode(item));\n};\n\nlet plugins = [];\nv.use = function (plugin, options) {\n  if (plugins.indexOf(plugin) === -1) {\n    plugin(v, options);\n    plugins.push(plugin);\n  }\n  return v;\n};\n\nv.use(Patch);\n\n\n(v.is.node ? global : window).v = v;\n"],"names":["isArray","Array","forEach","prototype","v","tagOrComponent","props","vnode","children","i","name","el","isSVG","utils","flat","arguments","view","apply","addState","component","state","Object","assign","[object Object]","args","start","arr","convertToVnode","l","next","length","und","nodeValue","String","push","$el","nt","nodeType","dom","nodeName","toLowerCase","events","call","attributes","property","childNodes","childvnode","dom2vnode","is","node","window","mounted","updating","browser","trust","htmlString","div","document","createElement","innerHTML","trim","map","item","plugins","use","plugin","options","indexOf","mountedComponent","oldTree","mainContainer","oncreate","onupdate","onremove","onbeforeupdate","svgstr","bindings","runBindings","values","changed","val","a","b","p","setAttribute","setTimeout","lifecycleCall","methodName","oldNode","vnodeNodeChild","pop","eventListener","e","currentTarget","type","defaultPrevented","update","newNode","createElementNS","patch","$parent","newTree","isNew","shortName","prop","preventUpdate","removeChild","appendChild","replaceChild","slice","removeEventListener","removeAttribute","addEventListener","createTextNode","unshift","mount","container","querySelectorAll","global"],"mappings":"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"}