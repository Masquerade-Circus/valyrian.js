{"version":3,"file":"valyrian.min.js","sources":["../lib/index.js"],"sourcesContent":["let UND;\nlet oncreate = 'v-create';\nlet onupdate = 'v-update';\nlet onremove = 'v-remove';\nlet onbeforeupdate = 'v-beforeupdate';\nlet oldTree;\nlet mainContainer;\nlet mountedComponent;\nlet FALSE = false;\nlet TRUE = true;\nlet NIL = null;\nlet emptyObject = Object.create(NIL);\nlet emptyArray = [];\n\nfunction Vnode(name, props, children) {\n  this.props = props || emptyObject;\n  this.children = children;\n  this.isSVG = name === 'svg';\n  this.name = name;\n};\n\nfunction TextVnode() {}\nTextVnode.prototype = {\n  props: emptyObject,\n  children: emptyArray\n};\n\nlet emptyNode = new TextVnode();\n\nfunction createElement(tag, isSVG) {\n  return isSVG ?\n    document.createElementNS('http://www.w3.org/2000/svg', tag) :\n    document.createElement(tag);\n}\n\nfunction v(tagOrComponent, props, ...children) {\n  if (typeof tagOrComponent === 'string') {\n    return new Vnode(tagOrComponent, props, children);\n  }\n\n  if ('view' in tagOrComponent === FALSE) {\n    tagOrComponent.view = tagOrComponent;\n  }\n\n  return tagOrComponent.view(props, ...children);\n};\n\nv.isNode = typeof window === 'undefined';\n\n// This could be extended to do a deep clone\n// This mutates the component\nv.addState = (component, state) => Object.assign(component, {view: component}, state);\n\n// Hydrates the current dom before mount\nv.dom2vnode = function (dom) {\n  let vnode;\n  if (dom.nodeType === 3) {\n    vnode = new TextVnode();\n    vnode.dom = dom;\n  } else if (dom.nodeType === 1) {\n    let name = dom.nodeName;\n    vnode = new Vnode(\n      name,\n      {},\n      []\n    );\n    vnode.dom = dom;\n\n    for (let l = dom.attributes.length; l--;) {\n      let property = dom.attributes[l];\n      vnode.props[property.nodeName] = property.nodeValue;\n    }\n\n    for (let i = 0, l = dom.childNodes.length; i < l; i++) {\n      let childVnode = v.dom2vnode(dom.childNodes[i]);\n      childVnode && vnode.children.push(childVnode);\n    }\n  }\n  return vnode;\n};\n\nv.trust = (htmlString) => {\n  let div = createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  return emptyArray.map.call(div.childNodes, (item) => v.dom2vnode(item));\n};\n\n// Plugin system\nlet plugins = new Map();\nv.usePlugin = (plugin, options) => !plugins.has(plugin) && plugins.set(plugin, TRUE) && plugin(v, options);\n\nv.reservedWords = {\n  key: NIL,\n  'v-noop': NIL,\n  [oncreate]: NIL,\n  [onbeforeupdate]: NIL,\n  [onupdate]: NIL,\n  [onremove]: NIL\n};\n\nlet attachedListeners = {};\nfunction eventListener(e) {\n  let dom = e.target;\n  let name = `__on${e.type}`;\n  while (dom) {\n    if (name in dom) {\n      dom[name](e);\n      if (e.defaultPrevented === FALSE) {\n        v.update();\n      }\n      return;\n    }\n    dom = dom.parentNode;\n  }\n};\n\nfunction lifecycleCall(vnode, methodName, oldNode) {\n  if (methodName === onremove) {\n    for (let i = 0, l = vnode.children.length; i < l; i++) {\n      lifecycleCall(vnode.children[i], onremove);\n    }\n  }\n\n  if (methodName in vnode.props) {\n    return vnode.props[methodName](vnode, oldNode);\n  }\n}\n\nv.updateProperty = (name, newNode, oldNode, isSVG) => {\n  let value = newNode.props[name];\n  if (name in v.reservedWords) {\n    if (typeof v.reservedWords[name] === 'function') {\n      v.reservedWords[name](value, newNode, oldNode, isSVG);\n    }\n  } else if (typeof value === 'function') {\n    name = `__${name}`;\n    if (name in attachedListeners === FALSE) {\n      document.addEventListener(name.slice(4), eventListener);\n      attachedListeners[name] = TRUE;\n    };\n    newNode.dom[name] = value;\n  } else if (name in newNode.dom && !isSVG) {\n    if (newNode.dom[name] !== value) {\n      newNode.dom[name] = value;\n    }\n  } else if (value !== oldNode.props[name]) {\n    newNode.dom.setAttribute(name, value);\n  }\n};\n\nfunction updateProps(newNode, oldNode, isSVG) {\n  for (let name in newNode.props) {\n    v.updateProperty(name, newNode, oldNode, isSVG);\n  }\n}\n\nfunction createNode(newNode, isSVG) {\n  newNode.dom = createElement(newNode.name, isSVG);\n  updateProps(newNode, emptyNode, isSVG);\n  lifecycleCall(newNode, oncreate);\n  newNode.children = patch(newNode.dom, newNode.children, emptyArray, isSVG);\n}\n\nfunction updateNode(newNode, oldNode, isSVG) {\n  newNode.dom = oldNode.dom;\n  if ('v-noop' in newNode.props || lifecycleCall(newNode, onbeforeupdate, oldNode) === FALSE) {\n    newNode.children = oldNode.children;\n  } else {\n    for (let name in oldNode.props) {\n      if (name in v.reservedWords === FALSE && name in newNode.props === FALSE && typeof oldNode.props[name] !== 'function') {\n        if (name in newNode.dom) {\n          newNode.dom[name] = NIL;\n        } else {\n          newNode.dom.removeAttribute(name);\n        }\n      }\n    }\n    updateProps(newNode, oldNode, isSVG);\n    lifecycleCall(newNode, !v.isMounted ? oncreate : onupdate, oldNode);\n    newNode.children = patch(newNode.dom, newNode.children, oldNode.children, isSVG);\n  }\n}\n\nfunction removeNode($parent, oldNode) {\n  lifecycleCall(oldNode, onremove);\n  $parent.removeChild(oldNode.dom);\n}\n\nfunction updateKeyedNode($parent, newNode, compareNode, isSVG, newIndex) {\n  // Moved or updated\n  'dom' in compareNode ?\n    updateNode(newNode, compareNode, isSVG) :\n    createNode(newNode, isSVG);\n\n  if (newNode.dom !== $parent.childNodes[newIndex]) {\n    $parent.childNodes[newIndex] !== UND ?\n      $parent.replaceChild(newNode.dom, $parent.childNodes[newIndex]) :\n      $parent.appendChild(newNode.dom);\n  }\n}\n\nfunction getKeys(list) {\n  let keys = [];\n  for (let i = 0, l = list.length; i < l; i++) {\n    keys.push(list[i].props.key);\n  }\n  return keys;\n}\n\n// eslint-disable-next-line complexity,sonarjs/cognitive-complexity\nfunction patch($parent, newTree, oldTree, isSVG) {\n  if (Array.isArray(newTree) === FALSE) {\n    newTree = [newTree];\n  }\n\n  // New tree is empty so just remove all old nodes\n  if (newTree.length === 0) {\n    for (let i = oldTree.length; i--;) {\n      lifecycleCall(oldTree[i], onremove);\n    }\n    $parent.textContent = '';\n  } else {\n\n    // Flatten children\n    for (let i = 0; i < newTree.length; i++) {\n      if (Array.isArray(newTree[i])) {\n        newTree.splice(i, 1, ...newTree[i]);\n        i--;\n        continue;\n      }\n    }\n\n    let firstNode = newTree[0];\n\n    // Is keyed list\n    if (oldTree.length > 0 && firstNode !== NIL && firstNode !== UND && firstNode.constructor === Vnode && 'key' in firstNode.props) {\n      let oldKeys = getKeys(oldTree);\n      let newKeys = getKeys(newTree);\n\n      for (let i = 0, l = newKeys.length; i < l; i++) {\n        let key = newKeys[i];\n        let newNode = newTree[i];\n        isSVG = isSVG || newNode.isSVG;\n\n        // Updated: Same key\n        if (key === oldKeys[i]) {\n          oldTree[i].processed = TRUE;\n          updateKeyedNode($parent, newNode, oldTree[i], isSVG, i);\n        } else {\n          let oldIndex = oldKeys.indexOf(key);\n          let newIndex = i >= oldKeys.length ? UND : i;\n\n          // Moved: Key exists in old keys\n          if (oldIndex !== -1) {\n            oldTree[oldIndex].processed = TRUE;\n            updateKeyedNode($parent, newNode, oldTree[oldIndex], isSVG, newIndex);\n          // Added: Key does not exists in old keys\n          } else {\n            updateKeyedNode($parent, newNode, emptyNode, isSVG, newIndex);\n          }\n        }\n      }\n\n      // Delete unprocessed old keys\n      for (let i = 0, l = oldTree.length; i < l; i++) {\n        if ('processed' in oldTree[i] === FALSE) {\n          lifecycleCall(oldTree[i], onremove);\n          oldTree[i].dom.parentNode && $parent.removeChild(oldTree[i].dom);\n        }\n      }\n\n    // Not keyed list or first render so use the simple algorithm\n    } else {\n      if (oldTree.length > newTree.length) {\n        // Remove deleted nodes\n        for (let i = oldTree.length, l = newTree.length; i-- && i >= l;) {\n          removeNode($parent, oldTree[i]);\n        }\n      }\n\n      for (let i = 0, l = newTree.length; i < l; i++) {\n        let newNode = newTree[i];\n        let oldNode = oldTree[i];\n\n        // Is vnode\n        if (newNode !== NIL && newNode !== UND && newNode.constructor === Vnode) {\n          isSVG = isSVG || newNode.isSVG;\n\n          // Added\n          if (oldNode === UND) {\n            createNode(newNode, isSVG);\n            $parent.appendChild(newNode.dom);\n          // Replaced\n          } else if (newNode.name !== oldNode.name) {\n            createNode(newNode, isSVG);\n            lifecycleCall(oldNode, onremove);\n            $parent.replaceChild(newNode.dom, oldNode.dom);\n          // Updated\n          } else {\n            updateNode(newNode, oldNode, isSVG);\n          }\n\n        // Is text\n        } else {\n          let dom;\n\n          // Added\n          if (oldNode === UND) {\n            dom = document.createTextNode(newNode);\n            $parent.appendChild(dom);\n          // Replace element\n          } else if (oldNode !== NIL && oldNode !== UND && oldNode.constructor === Vnode) {\n            dom = document.createTextNode(newNode);\n            lifecycleCall(oldNode, onremove);\n            $parent.replaceChild(dom, oldNode.dom);\n            // Updated\n          } else {\n            dom = oldNode.dom;\n            if (newNode !== dom.nodeValue) {\n              dom.nodeValue = newNode;\n            }\n          }\n\n          newTree[i] = new TextVnode();\n          newTree[i].dom = dom;\n        }\n      }\n    }\n  }\n\n  return newTree;\n};\n\nv.update = (props, ...children) => {\n  if (mountedComponent !== UND) {\n    oldTree = patch(mainContainer, v(mountedComponent, props, children), oldTree);\n    v.isMounted = TRUE;\n  }\n\n  return v.isNode && mainContainer.innerHTML;\n};\n\nv.mount = (container, component, props, ...children) => {\n  mainContainer = v.isNode\n    ? createElement('div')\n    : typeof container === 'string'\n      ? document.querySelectorAll(container)[0]\n      : container;\n\n  oldTree = v.dom2vnode(mainContainer).children;\n\n  mountedComponent = component;\n\n  return v.update(props, children);\n};\n\nv.unmount = () => {\n  mountedComponent = () => {};\n  v.update();\n  mountedComponent = UND;\n  v.isMounted = FALSE;\n};\n\nv.directive = (directive, handler) => directive in v.reservedWords === FALSE && (v.reservedWords[directive] = handler);\nv.directive('v-for', (set, vnode) => {\n  let handler = vnode.children[0];\n  vnode.children = [];\n  for (let i = 0, l = set.length; i < l; i++) {\n    vnode.children[i] = handler(set[i], i);\n  }\n});\n\nlet hideDirective = (test) => (bool, vnode, oldnode) => {\n  if (bool === test) {\n    let dom = document.createTextNode('');\n    if (oldnode && oldnode.dom && oldnode.dom.parentNode) {\n      lifecycleCall(oldnode, onremove);\n      oldnode.dom.parentNode.replaceChild(dom, oldnode.dom);\n    }\n    vnode.name = '';\n    vnode.children = emptyArray;\n    vnode.props = emptyObject;\n    vnode.dom = dom;\n  }\n};\n\nv.directive('v-if', hideDirective(FALSE));\nv.directive('v-unless', hideDirective(TRUE));\nv.directive('v-show', (bool, vnode) => vnode.dom.style.display = bool === FALSE ? 'none' : '');\n\n(v.isNode ? global : window).v = v;\n"],"names":["UND","oncreate","onupdate","onremove","onbeforeupdate","oldTree","mainContainer","mountedComponent","FALSE","TRUE","NIL","emptyObject","Object","create","emptyArray","Vnode","name","props","children","isSVG","TextVnode","prototype","emptyNode","createElement","tag","document","createElementNS","v","tagOrComponent","view","isNode","window","addState","component","state","assign","dom2vnode","dom","vnode","nodeType","nodeName","l","attributes","length","property","nodeValue","i","childNodes","childVnode","push","trust","htmlString","div","innerHTML","trim","map","call","item","plugins","Map","usePlugin","plugin","options","has","set","reservedWords","key","attachedListeners","eventListener","e","target","type","defaultPrevented","update","parentNode","lifecycleCall","methodName","oldNode","updateProperty","newNode","value","addEventListener","slice","setAttribute","updateProps","createNode","patch","updateNode","removeAttribute","isMounted","removeNode","$parent","removeChild","updateKeyedNode","compareNode","newIndex","replaceChild","appendChild","getKeys","list","keys","newTree","Array","isArray","textContent","splice","firstNode","constructor","oldKeys","newKeys","processed","oldIndex","indexOf","createTextNode","mount","container","querySelectorAll","unmount","directive","handler","hideDirective","test","bool","oldnode","style","display","global"],"mappings":"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"}