{"version":3,"file":"valyrian.min.js","sources":["../lib/index.js"],"sourcesContent":["\n\nlet und;\nlet oncreate = 'oncreate';\nlet onupdate = 'onupdate';\nlet onremove = 'onremove';\nlet onbeforeupdate = 'onbeforeupdate';\nlet update;\nlet oldTree;\nlet mainContainer;\nlet mountedComponent;\nlet FALSE = false;\nlet TRUE = true;\nlet emptyObject = Object.create(null);\n\nfunction Vnode(name, props, children) {\n  this.props = props || emptyObject;\n  this.children = children;\n  this.isSVG = name === 'svg';\n  this.name = name;\n};\n\nfunction TextVnode() {}\nTextVnode.prototype = {\n  props: emptyObject,\n  children: []\n};\n\nlet emptyNode = new TextVnode();\n\nfunction createElement(tag, isSVG, isText) {\n  return isText ?\n    document.createTextNode(tag) :\n    isSVG ?\n      document.createElementNS('http://www.w3.org/2000/svg', tag) :\n      document.createElement(tag);\n}\n\n// Hydrates the current dom before mount\nfunction dom2vnode($el) {\n  let nt = $el.nodeType;\n  if (nt === 3) {\n    let vnode = new TextVnode();\n    vnode.dom = $el;\n    return vnode;\n  }\n\n  if (nt === 1) {\n    let name = $el.nodeName.toLowerCase();\n    let vnode = new Vnode(\n      name,\n      {},\n      []\n    );\n    vnode.dom = $el;\n\n    for (let l = $el.attributes.length; l--;) {\n      let property = $el.attributes[l];\n      vnode.props[property.nodeName] = property.nodeValue;\n    }\n\n    for (let l = $el.childNodes.length; l--;) {\n      let childVnode = dom2vnode($el.childNodes[l]);\n      if (childVnode) {\n        vnode.children.push(childVnode);\n      }\n    }\n\n    return vnode;\n  }\n};\n\nfunction v(tagOrComponent, props, ...children) {\n  if (typeof tagOrComponent === 'string') {\n    return new Vnode(tagOrComponent, props, children);\n  }\n\n  if ('view' in tagOrComponent === FALSE) {\n    tagOrComponent.view = tagOrComponent;\n  }\n\n  return tagOrComponent.view(props, ...children);\n};\n\nv.isNode = typeof window === 'undefined';\n\n// This could be extended to do a deep clone\n// This mutates the component\nv.addState = (component, state) => Object.assign(component, {view: component}, state);\n\n// NOTE: This does not work with undom for server side rendering\n// See: https://github.com/developit/undom/issues/7\nv.trust = (htmlString) => {\n  let div = createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  return [].map.call(div.childNodes, (item) => dom2vnode(item));\n};\n\n// Plugin system\nlet plugins = new Map();\nv.use = (plugin, options) => !plugins.has(plugin) && plugins.set(plugin, plugin(v, options));\n\nlet attachedListeners = {};\nfunction eventListener(e) {\n  let dom = e.target;\n  let name = `__on${e.type}`;\n  while (dom) {\n    if (name in dom) {\n      dom[name](e);\n      update();\n      return;\n    }\n    dom = dom.parentNode;\n  }\n};\n\nfunction lifecycleCall(vnode, methodName, oldNode) {\n  if (vnode instanceof Vnode) {\n    if (methodName === onremove) {\n      for (let i = 0, l = vnode.children.length; i < l; i++) {\n        lifecycleCall(vnode.children[i], onremove);\n      }\n    }\n\n    if (methodName in vnode.props) {\n      return vnode.props[methodName](vnode, oldNode);\n    }\n  }\n}\n\n// eslint-disable-next-line complexity,sonarjs/cognitive-complexity\nfunction patch($parent, newTree, oldTree, isSVG) {\n  if (!Array.isArray(newTree)) {\n    newTree = [newTree];\n  }\n\n  if (newTree.length === 0) {\n    // Remove deleted nodes\n    for (let i = oldTree.length; i--;) {\n      lifecycleCall(oldTree[i], onremove);\n    }\n\n    $parent.textContent = '';\n  } else {\n    for (let i = 0; i < newTree.length; i++) {\n      let newNode = newTree[i];\n      let oldNode = oldTree[i];\n      let dom;\n\n      if (Array.isArray(newNode)) {\n        newTree.splice(i, 1, ...newNode);\n        i--;\n        continue;\n      }\n\n      if (newNode instanceof Vnode) {\n        let isNew = !v.isMounted;\n        isSVG = isSVG || newNode.isSVG;\n        let shouldUpdate = TRUE;\n\n        // Added\n        if (oldNode === und) {\n          dom = newNode.dom = createElement(newNode.name, isSVG);\n          $parent.appendChild(dom);\n          isNew = TRUE;\n          oldNode = emptyNode;\n          // Updated\n        } else if (newNode.name === oldNode.name) {\n          dom = newNode.dom = oldNode.dom;\n\n          shouldUpdate = lifecycleCall(newNode, onbeforeupdate, oldNode) !== FALSE;\n\n          if (shouldUpdate) {\n            for (let name in oldNode.props) {\n              if (name in newNode.props === FALSE && typeof oldNode.props[name] !== 'function') {\n                if (name in dom) {\n                  dom[name] = null;\n                } else {\n                  dom.removeAttribute(name);\n                }\n              }\n            }\n          } else {\n            newNode.children = oldNode.children;\n          }\n          // Replaced\n        } else {\n          dom = newNode.dom = createElement(newNode.name, isSVG);\n          lifecycleCall(oldNode, onremove);\n          $parent.replaceChild(dom, oldNode.dom);\n          isNew = TRUE;\n        }\n\n        if (shouldUpdate) {\n          for (let name in newNode.props) {\n            let prop = newNode.props[name];\n\n            if (typeof prop === 'function') {\n              switch (name) {\n                case oncreate:\n                case onupdate:\n                case onremove:\n                case onbeforeupdate:\n                  break;\n                default:\n                  name = `__${name}`;\n                  if (name in attachedListeners === FALSE) {\n                    document.addEventListener(name.slice(4), eventListener);\n                    attachedListeners[name] = TRUE;\n                  };\n                  dom[name] = prop;\n                  break;\n              }\n            } else if (name in dom && dom[name] !== prop && !isSVG) {\n              dom[name] = prop;\n            } else if (name in oldNode.props === FALSE || prop !== oldNode.props[name]) {\n              dom.setAttribute(name, prop);\n            }\n          }\n\n          lifecycleCall(newNode, isNew ? oncreate : onupdate, oldNode);\n\n          newNode.children = patch(newNode.dom, newNode.children, oldNode.children, isSVG);\n        }\n      } else {\n\n        // Added\n        if (oldNode === und) {\n          dom = dom = createElement(newNode, FALSE, TRUE);\n          $parent.appendChild(dom);\n\n        // Replaced text\n        } else if (oldNode instanceof TextVnode) {\n          dom = oldNode.dom;\n          if (newNode !== dom.nodeValue) {\n            dom.nodeValue = newNode;\n          }\n        // Replaced element\n        } else {\n          dom = createElement(newNode, FALSE, TRUE);\n          lifecycleCall(oldNode, onremove);\n          $parent.replaceChild(dom, oldNode.dom);\n        }\n\n        newTree[i] = new TextVnode();\n        newTree[i].dom = dom;\n      }\n    }\n\n    if (oldTree.length > newTree.length) {\n      // Remove deleted nodes\n      for (let i = oldTree.length, l = newTree.length; i-- && i >= l;) {\n        lifecycleCall(oldTree[i], onremove);\n        $parent.removeChild(oldTree[i].dom);\n      }\n    }\n  }\n\n\n  return newTree;\n};\n\nv.update = update = (props, ...children) => {\n  oldTree = patch(mainContainer, v(mountedComponent, props, children), oldTree);\n\n  v.isMounted = TRUE;\n\n  return v.isNode && mainContainer.innerHTML;\n};\n\nv.mount = (container, component, props, ...children) => {\n  mainContainer = v.isNode\n    ? createElement('div')\n    : typeof container === 'string'\n      ? document.querySelectorAll(container)[0]\n      : container;\n\n  oldTree = dom2vnode(mainContainer).children;\n\n  mountedComponent = component;\n\n  return update(props, children);\n};\n\n(v.isNode ? global : window).v = v;\n"],"names":[],"mappings":"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"}