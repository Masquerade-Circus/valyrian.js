{"version":3,"file":"valyrian.min.js","sources":["../lib/patch.js","../lib/index.js"],"sourcesContent":["let plugin = function (v) {\n  let mountedComponent;\n  let oldTree;\n  let newTree;\n  let mainContainer;\n  let und;\n  let oninit = 'oninit';\n  let oncreate = 'oncreate';\n  let onupdate = 'onupdate';\n  let onremove = 'onremove';\n  let svgstr = 'http://www.w3.org/2000/svg';\n\n  function lifecycleCall(vnode, methodName, oldNode, l) {\n    if (vnode.nt === 1) {\n      if (vnode.props[methodName]) {\n        vnode.props[methodName](vnode, oldNode);\n      }\n\n      if (methodName === onremove) {\n        l = vnode.children.length;\n        while (l--) {\n          lifecycleCall(vnode.children[l], onremove);\n        }\n        vnode.children = [];\n      }\n    }\n  }\n\n  function eventListener(e) {\n    if (e.currentTarget.events['on' + e.type]) {\n      e.currentTarget.events['on' + e.type](e);\n    }\n    v.update();\n  }\n\n  function createElement(newNode, isSVG) {\n    lifecycleCall(newNode, oninit);\n    newNode.dom = isSVG ? document.createElementNS(svgstr, newNode.name) : document.createElement(newNode.name);\n    newNode.dom.events = {};\n  }\n\n  // eslint-disable-next-line complexity, sonarjs/cognitive-complexity\n  function patch($parent, newTree, oldTree, isSVG, max, newNode, oldNode, i, isNew, name) {\n    if (newTree.length === 0) {\n      i = oldTree.length;\n\n      while (i--) {\n        lifecycleCall(oldTree[i], onremove);\n      }\n\n      $parent.textContent = '';\n      return;\n    }\n\n    max = newTree.length > oldTree.length ? newTree.length : oldTree.length;\n    for (i = 0; i < max; i++) {\n      newNode = newTree[i];\n      oldNode = oldTree[i];\n\n      if (!newNode) {\n        // Removed\n        if (oldNode !== und) {\n          if (oldNode.nt === 3) {\n            lifecycleCall(oldNode, onremove);\n          }\n          $parent.removeChild(oldNode.dom);\n        }\n        continue;\n      }\n\n      if (!newNode.nt || newNode.nt === 3) {\n        // Is text\n        if (!newNode.nt) {\n          newTree[i] = newNode = {\n            name: '#text',\n            isVnode: true,\n            nodeValue: newNode,\n            children: [],\n            nt: 3\n          };\n        }\n\n        if (!oldNode) {\n          newNode.dom = document.createTextNode(newNode.nodeValue);\n          $parent.appendChild(newNode.dom);\n        } else {\n          // Replaced\n          if (oldNode.nt === 1) {\n            newNode.dom = document.createTextNode(newNode.nodeValue);\n            lifecycleCall(oldNode, onremove);\n            $parent.replaceChild(newNode.dom, oldNode.dom);\n          } else {\n            newNode.dom = oldNode.dom;\n            if (newNode.nodeValue !== oldNode.nodeValue) {\n              newNode.dom.nodeValue = newNode.nodeValue;\n            }\n          }\n        }\n\n        continue;\n      }\n\n      isNew = !v.is.mounted;\n\n      isSVG = isSVG || newNode.isSVG;\n\n      if (!oldNode) {\n        // Added\n        createElement(newNode, isSVG);\n\n        $parent.appendChild(newNode.dom);\n        oldNode = { children: [] };\n        isNew = true;\n      } else {\n        if (newNode.name !== oldNode.name) {\n          // Replaced\n          createElement(newNode, isSVG);\n\n          lifecycleCall(oldNode, onremove);\n          $parent.replaceChild(newNode.dom, oldNode.dom);\n          isNew = true;\n        } else {\n          // Updated\n          newNode.dom = oldNode.dom;\n          for (name in oldNode.props) {\n            if (newNode.props[name] === und) {\n              if (typeof oldNode.props[name] === 'function') {\n                newNode.dom.removeEventListener(name.slice(2), eventListener);\n                continue;\n              }\n\n              if (v.is.node || isSVG || newNode.dom[name] === und) {\n                newNode.dom.removeAttribute(name);\n                continue;\n              }\n\n              newNode.dom[name] = null;\n            }\n          }\n        }\n      }\n\n      patch(newNode.dom, newNode.children, oldNode.children, isSVG);\n\n      // Update props\n      for (name in newNode.props) {\n        if ((isNew || newNode.props[name] !== oldNode.props[name]) && newNode.props[name] !== und) {\n          if (typeof newNode.props[name] === 'function') {\n            switch (name) {\n              case oninit:\n              case oncreate:\n              case onupdate:\n              case onremove:\n                break;\n              default:\n                if (newNode.dom.events[name]) {\n                  newNode.dom.events[name] = newNode.props[name];\n                  newNode.dom.addEventListener(name.slice(2), eventListener);\n                }\n                break;\n            }\n\n            continue;\n          }\n\n          if (v.is.node || isSVG || newNode.dom[name] === und) {\n            newNode.dom.setAttribute(name, newNode.props[name]);\n            continue;\n          }\n\n          newNode.dom[name] = newNode.props[name];\n        }\n      }\n\n      if (!v.is.mounted && !isNew) {\n        lifecycleCall(newNode, oninit);\n        lifecycleCall(newNode, oncreate);\n      }\n\n      lifecycleCall(newNode, isNew ? oncreate : onupdate, oldNode);\n    }\n  }\n\n  // If use undom this serializes the dom to string html\n  function serialize(el, outer = true, i) {\n    if (el.nodeType === 3) {\n      return el.textContent;\n    }\n\n    let name = el.nodeName.toLowerCase();\n    let str = '';\n    let attr = el.attributes;\n    let child = el.childNodes;\n\n    if (outer) {\n      str += `<${name}`;\n      i = attr.length;\n      while (i--) {\n        str += ` ${attr[i].name}=\"${attr[i].value}\"`;\n      }\n\n      str += '>';\n    }\n\n    for (i = 0; i < child.length; i++) {\n      str += serialize(child[i]);\n    }\n\n    str += outer ? `</${name}>` : '';\n    return str;\n  }\n\n  v.update = function (args) {\n    args = v.utils.flat(arguments, 0, []);\n    if (args[0]) {\n      if (!args[0].view && typeof args[0] === 'function') {\n        args[0].view = args[0];\n      }\n\n      if (args[0].view) {\n        mountedComponent = args.shift();\n      }\n    }\n\n    if (!v.is.updating) {\n      v.is.updating = true;\n      args.unshift(mountedComponent);\n      newTree = v.apply(v, args);\n      patch(mainContainer, newTree, oldTree);\n      oldTree = newTree;\n      v.is.updating = false;\n      v.is.mounted = true;\n    }\n\n    if (v.is.node) {\n      return mainContainer.innerHTML;\n    }\n  };\n\n  v.mount = function (container) {\n    mainContainer = v.is.node\n      ? document.createElement('div')\n      : typeof container === 'string'\n        ? document.querySelectorAll(container)[0]\n        : container;\n\n    oldTree = v.utils.dom2vnode(mainContainer).children;\n\n    return v.update.apply(this, v.utils.flat(arguments, 1, []));\n  };\n};\n\nexport default plugin;\n","'use strict';\nimport Patch from './patch';\n\nfunction v(tagOrComponent, props, vnode, i, children) {\n  if (typeof tagOrComponent === 'string') {\n    vnode = {\n      name: tagOrComponent,\n      props: {},\n      children: [],\n      dom: null,\n      isVnode: true,\n      nt: 1,\n      isSVG: tagOrComponent === 'svg'\n    };\n\n    for (i in props) {\n      vnode.props[i] = props[i];\n    }\n\n    v.utils.flat(arguments, 2, vnode.children, true);\n    return vnode;\n  }\n\n  if (!tagOrComponent.view && typeof tagOrComponent === 'function') {\n    tagOrComponent.view = tagOrComponent;\n  }\n\n  if (tagOrComponent.view) {\n    children = tagOrComponent.view.apply(tagOrComponent, v.utils.flat(arguments, 1, []));\n    return Array.isArray(children) ? children : [children];\n  }\n}\n\n// This could be extended to do a deep clone\nv.addState = function (component, state) {\n  Object.assign(component, { view: component }, state);\n  return component;\n};\n\nv.utils = {\n  flat: function (args, start, arr, notEmpty, l) {\n    l = args.length;\n\n    for (; start < l; start++) {\n      if (Array.isArray(args[start])) {\n        arr = v.utils.flat(args[start], 0, arr);\n        continue;\n      }\n      if (!notEmpty || (args[start] !== undefined && args[start] !== null)) {\n        arr.push(args[start]);\n      }\n    }\n\n    return arr;\n  },\n  dom2vnode($el, vnode) {\n    vnode = {\n      props: {},\n      children: [],\n      dom: $el,\n      isVnode: true,\n      nodeValue: null,\n      nt: $el.nodeType,\n      isSVG: false\n    };\n\n    if (vnode.nt === 3) {\n      vnode.name = '#text';\n      vnode.nodeValue = $el.nodeValue;\n\n      return vnode;\n    }\n\n    if (vnode.nt === 1) {\n      vnode.name = $el.nodeName.toLowerCase();\n\n      if (vnode.name === 'svg') {\n        vnode.isSVG = true;\n      }\n\n      vnode.dom.events = {};\n\n      Array.prototype.map.call($el.attributes, function (property) {\n        vnode.props[property.nodeName] = property.nodeValue;\n      });\n\n      Array.prototype.forEach.call($el.childNodes, function ($el) {\n        let childvnode = v.utils.dom2vnode($el);\n        if (childvnode) {\n          vnode.children.push(childvnode);\n        }\n      });\n\n      return vnode;\n    }\n  }\n};\n\nv.is = {\n  node: typeof window === 'undefined',\n  mounted: false,\n  updating: false\n};\nv.is.browser = !v.is.node;\n\n// NOTE: This does not work with undom for server side rendering\n// See: https://github.com/developit/undom/issues/7\nv.trust = function (htmlString) {\n  let div = document.createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  return Array.prototype.map.call(div.childNodes, (item) => v.utils.dom2vnode(item));\n};\n\nlet plugins = [];\nv.use = function (plugin, options) {\n  if (plugins.indexOf(plugin) === -1) {\n    plugin(v, options);\n    plugins.push(plugin);\n  }\n  return v;\n};\n\nv.use(Patch);\n\n(v.is.node ? global : window).v = v;\n"],"names":["v","tagOrComponent","props","vnode","i","children","name","dom","isVnode","nt","isSVG","utils","flat","arguments","view","apply","Array","isArray","addState","component","state","Object","assign","args","start","arr","notEmpty","l","length","undefined","push","dom2vnode","$el","nodeValue","nodeType","nodeName","toLowerCase","events","prototype","map","call","attributes","property","forEach","childNodes","childvnode","is","node","window","mounted","updating","browser","trust","htmlString","div","document","createElement","innerHTML","trim","item","plugins","use","plugin","options","indexOf","mountedComponent","oldTree","newTree","mainContainer","und","oninit","oncreate","onupdate","onremove","svgstr","lifecycleCall","methodName","oldNode","eventListener","e","currentTarget","type","update","newNode","createElementNS","shift","unshift","patch","$parent","max","isNew","replaceChild","removeEventListener","slice","removeAttribute","appendChild","addEventListener","setAttribute","createTextNode","removeChild","textContent","mount","container","querySelectorAll","this","global"],"mappings":"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"}