{"version":3,"file":"valyrian.min.js","sources":["../lib/index.js"],"sourcesContent":["let UND = void 0;\nlet oncreate = 'oncreate';\nlet onupdate = 'onupdate';\nlet onremove = 'onremove';\nlet onbeforeupdate = 'onbeforeupdate';\nlet functionstr = 'function';\nlet noop = 'v-noop';\nlet mainNode;\nlet oldMainNode;\nlet mountedComponent;\n\nfunction Vnode(name, props, children) {\n  this.props = props || {};\n  this.children = children;\n  this.name = name;\n};\n\nfunction TextVnode(dom) {\n  this.dom = dom;\n}\nTextVnode.prototype = {\n  props: {},\n  children: []\n};\n\nlet emptyNode = new TextVnode();\n\nfunction createElement(tag, isSVG) {\n  return isSVG ?\n    document.createElementNS('http://www.w3.org/2000/svg', tag) :\n    document.createElement(tag);\n}\n\nfunction v(tagOrComponent, props, ...children) {\n  return new Vnode(tagOrComponent, props, children);\n};\n\nv.isNode = typeof window === 'undefined';\n\n// Hydrates the current dom before mount\nv.dom2vnode = dom => {\n  if (dom.nodeType === 3) {\n    return new TextVnode(dom);\n  }\n\n  if (dom.nodeType === 1) {\n    let props = {};\n    [].forEach.call(dom.attributes, (prop) => props[prop.nodeName] = prop.nodeValue);\n\n    let vnode = new Vnode(\n      dom.nodeName,\n      props,\n      []\n    );\n    vnode.dom = dom;\n\n    for (let i = 0, l = dom.childNodes.length; i < l; i++) {\n      let childVnode = v.dom2vnode(dom.childNodes[i]);\n      childVnode && vnode.children.push(childVnode);\n    }\n    return vnode;\n  }\n};\n\nv.trust = (htmlString) => {\n  let div = createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  return [].map.call(div.childNodes, (item) => v.dom2vnode(item));\n};\n\n// Plugin system\nlet plugins = new Map();\nv.usePlugin = (plugin, options) => !plugins.has(plugin) && plugins.set(plugin, true) && plugin(v, options);\n\nv.reservedWords = {\n  key: true,\n  [noop]: true,\n  [oncreate]: true,\n  [onbeforeupdate]: true,\n  [onupdate]: true,\n  [onremove]: true,\n  model: true\n};\n\nlet attachedListeners = {};\nfunction eventListener(e) {\n  let dom = e.target;\n  let name = `__on${e.type}`;\n  while (dom) {\n    if (dom[name]) {\n      dom[name](e);\n      if (!e.defaultPrevented) {\n        v.update();\n      }\n      return;\n    }\n    dom = dom.parentNode;\n  }\n};\n\nfunction lifecycleCall(vnode, methodName, oldNode) {\n  if (vnode instanceof Vnode) {\n    if (methodName === onremove) {\n      for (let i = 0, l = vnode.children.length; i < l; i++) {\n        lifecycleCall(vnode.children[i], onremove);\n      }\n    }\n\n    if (vnode.props[methodName]) {\n      return vnode.props[methodName](vnode, oldNode);\n    }\n  }\n}\n\nv.updateProperty = (name, newNode, oldNode) => {\n  if (name in newNode.props) {\n    let value = newNode.props[name];\n    if (v.reservedWords[name]) {\n      if (typeof v.reservedWords[name] === functionstr) {\n        v.reservedWords[name](value, newNode, oldNode);\n      }\n    } else if (typeof value === functionstr) {\n      name = `__${name}`;\n      if (!attachedListeners[name]) {\n        document.addEventListener(name.slice(4), eventListener);\n        attachedListeners[name] = true;\n      };\n      newNode.dom[name] = value;\n    } else if (name in newNode.dom && !newNode.isSVG) {\n      if (newNode.dom[name] !== value) {\n        newNode.dom[name] = value;\n      }\n    } else if (value !== oldNode.props[name]) {\n      newNode.dom.setAttribute(name, value);\n    }\n  }\n};\n\nfunction updateProps(newNode, oldNode) {\n  for (let name in newNode.props) {\n    v.updateProperty(name, newNode, oldNode);\n  }\n}\n\nfunction removeProps(newNode, oldNode) {\n  for (let name in oldNode.props) {\n    if (!v.reservedWords[name] && name in newNode.props === false && typeof oldNode.props[name] !== functionstr) {\n      if (name in newNode.dom) {\n        newNode.dom[name] = UND;\n      } else {\n        newNode.dom.removeAttribute(name);\n      }\n    }\n  }\n}\n\nfunction moveDom(dom, $parent, newIndex) {\n  if (dom !== $parent.childNodes[newIndex]) {\n    $parent.childNodes[newIndex] ?\n      $parent.replaceChild(dom, $parent.childNodes[newIndex]) :\n      $parent.appendChild(dom);\n  }\n}\n\nfunction removeVnode(vnode) {\n  if (vnode && vnode.dom) {\n    lifecycleCall(vnode, onremove);\n    vnode.dom.parentNode && vnode.dom.parentNode.removeChild(vnode.dom);\n  }\n}\n\nfunction updateKeyedNode($parent, newNode, compareNode, newIndex) {\n  // Moved or updated\n  if (compareNode.dom) {\n    newNode.dom = compareNode.dom;\n    if (newNode.props[noop] || lifecycleCall(newNode, onbeforeupdate, compareNode) === false) {\n      newNode.children = compareNode.children;\n      moveDom(newNode.dom, $parent, newIndex);\n    } else {\n      removeProps(newNode, compareNode);\n      updateProps(newNode, compareNode);\n      moveDom(newNode.dom, $parent, newIndex);\n      lifecycleCall(newNode, v.isMounted ? onupdate : oncreate, compareNode);\n      patch(newNode, compareNode);\n    }\n  } else {\n    newNode.dom = createElement(newNode.name, newNode.isSVG);\n    updateProps(newNode, emptyNode);\n    moveDom(newNode.dom, $parent, newIndex);\n    lifecycleCall(newNode, oncreate);\n    patch(newNode, emptyNode);\n  }\n}\n\nlet vnodesToCleanup = [];\n\nv.onCleanup = callback => {\n  let parentVnode = v.current.parentVnode;\n  if (!parentVnode.onCleanup) {\n    parentVnode.onCleanup = [];\n  }\n\n  parentVnode.onCleanup.push(callback);\n\n  if (vnodesToCleanup.indexOf(parentVnode) === -1) {\n    vnodesToCleanup.push(parentVnode);\n  }\n};\n\nfunction cleanupVnodes() {\n  for (let l = vnodesToCleanup.length; l--;) {\n    for (let callback of vnodesToCleanup[l].onCleanup) {\n      callback();\n    }\n  }\n  vnodesToCleanup = [];\n}\n\nv.current = {\n  parentVnode: UND,\n  oldParentVnode: UND,\n  component: UND\n};\n\nlet isArray = Array.isArray;\n\n// eslint-disable-next-line complexity,sonarjs/cognitive-complexity\nfunction patch(parentNode, oldParentNode) {\n  let newTree = isArray(parentNode.children) ? parentNode.children : [parentNode.children];\n  let oldTree = oldParentNode.children;\n  v.current.parentVnode = parentNode;\n  v.current.oldParentVnode = oldParentNode;\n\n  // Flatten children\n  for (let i = 0; i < newTree.length; i++) {\n    let childVnode = newTree[i];\n\n    if (isArray(childVnode)) {\n      newTree.splice(i--, 1, ...childVnode);\n    } else if (childVnode instanceof Vnode) {\n      if (typeof childVnode.name !== 'string') {\n        v.current.component = childVnode;\n        let viewMethod = childVnode.name.view || childVnode.name;\n        newTree.splice(i--, 1, ...[viewMethod.call(childVnode.name, childVnode.props, ...childVnode.children)]);\n      } else {\n        childVnode.isSVG = parentNode.isSVG || childVnode.name === 'svg';\n      }\n    } else if (childVnode === null || childVnode === UND) {\n      newTree.splice(i--, 1);\n    }\n  }\n\n  if (newTree.length === 0) {\n    let i = oldTree.length;\n    while (i--) {\n      lifecycleCall(oldTree[i], onremove);\n    }\n    parentNode.dom.textContent = '';\n\n    // Is keyed list\n  } else if (oldTree.length && newTree[0] instanceof Vnode && newTree[0].props.key) {\n    let oldKeys = oldTree.map(vnode => vnode.props.key);\n    let newKeys = newTree.map(vnode => vnode.props.key);\n\n    for (let i = 0, l = newKeys.length; i < l; i++) {\n      let key = newKeys[i];\n      let newNode = newTree[i];\n\n      // Updated: Same key\n      if (key === oldKeys[i]) {\n        oldTree[i].processed = true;\n        updateKeyedNode(parentNode.dom, newNode, oldTree[i], i);\n      } else {\n        let oldIndex = oldKeys.indexOf(key);\n        let newIndex = i >= oldKeys.length ? UND : i;\n\n        // Moved: Key exists in old keys\n        if (oldIndex !== -1) {\n          oldTree[oldIndex].processed = true;\n          updateKeyedNode(parentNode.dom, newNode, oldTree[oldIndex], newIndex);\n          // Added: Key does not exists in old keys\n        } else {\n          updateKeyedNode(parentNode.dom, newNode, emptyNode, newIndex);\n        }\n      }\n    }\n\n    // Delete unprocessed old keys\n    let l = oldTree.length;\n\n    while (l--) {\n      !oldTree[l].processed && removeVnode(oldTree[l]);\n    }\n\n    // Not keyed list or first render so use the simple algorithm\n  } else {\n    let i = oldTree.length;\n    let l = newTree.length;\n\n    // Remove deleted nodes\n    while (i-- > l) {\n      removeVnode(oldTree[i]);\n    }\n\n    for (i = 0; i < l; i++) {\n      let newNode = newTree[i];\n      let oldNode = oldTree[i];\n      // Is vnode\n      if (newNode instanceof Vnode) {\n        if (!oldNode) {\n          newNode.dom = createElement(newNode.name, newNode.isSVG);\n          updateProps(newNode, emptyNode);\n          parentNode.dom.appendChild(newNode.dom);\n          lifecycleCall(newNode, oncreate);\n          patch(newNode, emptyNode);\n        } else {\n          if (newNode.name === oldNode.name) {\n            newNode.dom = oldNode.dom;\n            if (newNode.props[noop] || lifecycleCall(newNode, onbeforeupdate, oldNode) === false) {\n              newNode.children = oldNode.children;\n            } else {\n              removeProps(newNode, oldNode);\n              updateProps(newNode, oldNode);\n              lifecycleCall(newNode, v.isMounted ? onupdate : oncreate, oldNode);\n              patch(newNode, oldNode);\n            }\n          } else {\n            lifecycleCall(oldNode, onremove);\n            newNode.dom = createElement(newNode.name, newNode.isSVG);\n            updateProps(newNode, emptyNode);\n            parentNode.dom.replaceChild(newNode.dom, parentNode.dom.childNodes[i]);\n            lifecycleCall(newNode, oncreate);\n            patch(newNode, emptyNode);\n          }\n        }\n\n      } else {\n        let dom;\n\n        // If we are getting a TextVnode could be from the dom2Vnode method\n        let value = newNode instanceof TextVnode ? newNode.dom.nodeValue : String(newNode);\n\n        if (oldNode instanceof TextVnode) {\n          dom = oldNode.dom;\n          if (value !== dom.nodeValue) {\n            dom.nodeValue = value;\n          }\n        } else {\n          dom = document.createTextNode(value);\n          if (!oldNode) {\n            parentNode.dom.appendChild(dom);\n          } else {\n            lifecycleCall(oldNode, onremove);\n            parentNode.dom.replaceChild(dom, oldNode.dom);\n          }\n        }\n        newTree[i] = new TextVnode(dom);\n      }\n    }\n  }\n\n  parentNode.children = newTree;\n};\n\nv.update = (props, ...children) => {\n  if (mainNode) {\n    if (mountedComponent) {\n      cleanupVnodes();\n      oldMainNode = mainNode;\n      mainNode = new Vnode(mainNode.name, mainNode.props, v(mountedComponent, props, ...children));\n      mainNode.dom = oldMainNode.dom;\n      mainNode.isSVG = mainNode.name === 'svg';\n      patch(mainNode, oldMainNode);\n      v.isMounted = true;\n    }\n\n    return v.isNode && mainNode.dom.innerHTML;\n  }\n};\n\nv.mount = (container, component, props, ...children) => {\n  let mainContainer = v.isNode\n    ? createElement('div')\n    : typeof container === 'string'\n      ? document.querySelectorAll(container)[0]\n      : container;\n\n  mainNode = v.dom2vnode(mainContainer);\n  mountedComponent = component;\n\n  return v.update(props, ...children);\n};\n\nv.unmount = () => {\n  mountedComponent = () => '';\n  let result = v.update();\n  mountedComponent = UND;\n  v.isMounted = false;\n  return result;\n};\n\nv.directive = (directive, handler) => !v.reservedWords[directive] && (v.reservedWords[directive] = handler);\nv.directive('v-for', (set, vnode) => vnode.children = set.map(vnode.children[0]));\n\nlet hideDirective = (test) => (bool, vnode, oldnode) => {\n  let value = test ? bool : !bool;\n  if (value) {\n    let newdom = document.createTextNode('');\n    if (oldnode.dom && oldnode.dom.parentNode) {\n      lifecycleCall(oldnode, onremove);\n      oldnode.dom.parentNode.replaceChild(newdom, oldnode.dom);\n    }\n    vnode.name = '';\n    vnode.children = [];\n    vnode.props = {};\n    vnode.dom = newdom;\n  }\n};\n\nv.directive('v-if', hideDirective(false));\nv.directive('v-unless', hideDirective(true));\nv.directive('v-show', (bool, vnode) => vnode.dom.style.display = bool ? '' : 'none');\nv.directive('v-class', (classes, vnode) => {\n  for (let name in classes) {\n    vnode.dom.classList.toggle(name, classes[name]);\n  }\n});\n\n(v.isNode ? global : window).v = v;\n"],"names":[],"mappings":"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"}