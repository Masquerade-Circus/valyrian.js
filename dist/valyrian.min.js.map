{"version":3,"file":"valyrian.min.js","sources":["../lib/index.js","../lib/patch.js"],"sourcesContent":["'use strict';\nimport Patch from './patch';\n\nfunction v(tagOrComponent, props, vnode, children) {\n  if (typeof tagOrComponent === 'string') {\n    vnode = {\n      name: tagOrComponent,\n      props: props || {},\n      children: [],\n      dom: null,\n      isVnode: true,\n      el: true,\n      isSVG: tagOrComponent === 'svg'\n    };\n\n    v.utils.flat(arguments, 2, vnode.children);\n    return vnode;\n  }\n\n  if (!tagOrComponent.view && typeof tagOrComponent === 'function') {\n    tagOrComponent.view = tagOrComponent;\n  }\n\n  if (tagOrComponent.view) {\n    children = tagOrComponent.view.apply(tagOrComponent, v.utils.flat(arguments, 1, []));\n    return Array.isArray(children) ? children : [children];\n  }\n}\n\n// This could be extended to do a deep clone\n// This mutates the component\nv.addState = function (component, state) {\n  Object.assign(component, { view: component }, state);\n};\n\nv.utils = {\n  flat(args, start, arr, l, next) {\n    l = args.length;\n\n    for (; start < l; start++) {\n      next = args[start];\n      if (Array.isArray(next)) {\n        arr = v.utils.flat(next, 0, arr);\n      } else if (next !== undefined && next !== null) {\n        arr.push(next);\n      }\n    }\n\n    return arr;\n  },\n  dom2vnode($el, vnode, nt) {\n    nt = $el.nodeType;\n    if (nt === 3 || nt === 1) {\n      vnode = {\n        props: {},\n        children: [],\n        dom: $el,\n        isVnode: true,\n        el: true,\n        isSVG: false\n      };\n\n      if (nt === 3) {\n        vnode.nodeValue = $el.nodeValue;\n        vnode.el = false;\n        return vnode;\n      }\n\n      vnode.name = $el.nodeName.toLowerCase();\n      vnode.isSVG = vnode.name === 'svg';\n\n      vnode.dom.events = {};\n\n      Array.prototype.map.call($el.attributes, function (property) {\n        vnode.props[property.nodeName] = property.nodeValue;\n      });\n\n      Array.prototype.forEach.call($el.childNodes, function ($el) {\n        let childvnode = v.utils.dom2vnode($el);\n        if (childvnode) {\n          vnode.children.push(childvnode);\n        }\n      });\n\n      return vnode;\n    }\n  }\n};\n\nv.is = {\n  node: typeof window === 'undefined',\n  mounted: false,\n  updating: false\n};\nv.is.browser = !v.is.node;\n\n// NOTE: This does not work with undom for server side rendering\n// See: https://github.com/developit/undom/issues/7\nv.trust = function (htmlString) {\n  let div = document.createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  return Array.prototype.map.call(div.childNodes, (item) => v.utils.dom2vnode(item));\n};\n\nlet plugins = [];\nv.use = function (plugin, options) {\n  if (plugins.indexOf(plugin) === -1) {\n    plugin(v, options);\n    plugins.push(plugin);\n  }\n  return v;\n};\n\nv.use(Patch);\n\n(v.is.node ? global : window).v = v;\n","let plugin = function (v) {\n  let mountedComponent;\n  let oldTree;\n  let mainContainer;\n  let und;\n  let oncreate = 'create';\n  let onupdate = 'update';\n  let onremove = 'remove';\n  let svgstr = 'http://www.w3.org/2000/svg';\n\n\n  function lifecycleCall(vnode, methodName, oldNode, l) {\n    if (vnode.props[methodName]) {\n      vnode.props[methodName](vnode, oldNode);\n    }\n\n    if (methodName === onremove) {\n      l = vnode.children.length;\n      while (l--) {\n        if (vnode.children[l].el) {\n          lifecycleCall(vnode.children[l], onremove);\n        }\n      }\n      vnode.children = [];\n    }\n  }\n\n  function eventListener(e) {\n    if (e.currentTarget.events[e.type]) {\n      e.currentTarget.events[e.type](e);\n    }\n    v.update();\n  }\n\n  function createElement(newNode, isSVG) {\n    newNode.dom = isSVG ? document.createElementNS(svgstr, newNode.name) : document.createElement(newNode.name);\n    newNode.dom.events = {};\n  }\n\n  // eslint-disable-next-line complexity, sonarjs/cognitive-complexity\n  function patch($parent, newTree, oldTree, isSVG, newNode, oldNode, i, isNew, name, shortName) {\n    if (newTree.length === 0) {\n\n      while (oldTree.length) {\n        oldNode = oldTree.pop();\n        if (oldNode.el) {\n          lifecycleCall(oldNode, onremove);\n        }\n      }\n\n      $parent.textContent = '';\n    } else {\n      // Remove deleted nodes\n      while (oldTree.length > newTree.length) {\n        oldNode = oldTree.pop();\n        if (oldNode.el) {\n          lifecycleCall(oldNode, onremove);\n        }\n        $parent.removeChild(oldNode.dom);\n      }\n\n      for (i = 0; i < newTree.length; i++) {\n        newNode = newTree[i];\n        oldNode = oldTree[i];\n\n        if (newNode.el === und || !newNode.el) {\n          if (newNode.el === und) {\n            newTree[i] = newNode = {\n              props: {},\n              isVnode: true,\n              nodeValue: newNode,\n              children: [],\n              el: false\n            };\n          }\n\n          // Added\n          if (oldNode === und) {\n            newNode.dom = document.createTextNode(newNode.nodeValue);\n            $parent.appendChild(newNode.dom);\n            // Replaced element\n          } else if (oldNode.el) {\n            newNode.dom = document.createTextNode(newNode.nodeValue);\n            lifecycleCall(oldNode, onremove);\n            $parent.replaceChild(newNode.dom, oldNode.dom);\n            // Replaced text\n          } else {\n            newNode.dom = oldNode.dom;\n            if (newNode.nodeValue !== oldNode.nodeValue) {\n              newNode.dom.nodeValue = newNode.nodeValue;\n            }\n          }\n        } else {\n          isNew = !v.is.mounted;\n\n          isSVG = isSVG || newNode.isSVG;\n\n          // Added\n          if (oldNode === und) {\n            createElement(newNode, isSVG);\n            $parent.appendChild(newNode.dom);\n            oldNode = { children: [], props: {} };\n            isNew = true;\n            // Replaced\n          } else if (newNode.name !== oldNode.name) {\n            createElement(newNode, isSVG);\n\n            lifecycleCall(oldNode, onremove);\n            $parent.replaceChild(newNode.dom, oldNode.dom);\n            isNew = true;\n            // Updated\n          } else {\n            newNode.dom = oldNode.dom;\n\n            for (name in oldNode.props) {\n              if (newNode.props[name] === und) {\n                if (typeof oldNode.props[name] === 'function') {\n                  shortName = name.slice(2);\n                  newNode.dom.removeEventListener(shortName, eventListener);\n                } else if (v.is.browser && !isSVG && newNode.dom[name] !== und) {\n                  newNode.dom[name] = null;\n                } else {\n                  newNode.dom.removeAttribute(name);\n                }\n              }\n            }\n          }\n\n          // Update props\n          for (name in newNode.props) {\n            if (newNode.props[name] !== und) {\n              if (typeof newNode.props[name] === 'function') {\n                shortName = name.slice(2);\n                switch (shortName) {\n                  case oncreate:\n                  case onupdate:\n                  case onremove:\n                    break;\n                  default:\n                    if (!newNode.dom.events[shortName]) {\n                      newNode.dom.events[shortName] = newNode.props[name];\n                      newNode.dom.addEventListener(shortName, eventListener);\n                    }\n                    break;\n                }\n              } else if (\n                v.is.browser &&\n                !isSVG &&\n                newNode.dom[name] !== und &&\n                newNode.props[name] !== newNode.dom[name]\n              ) {\n                newNode.dom[name] = newNode.props[name];\n              } else if (newNode.props[name] !== oldNode.props[name]) {\n                newNode.dom.setAttribute(name, newNode.props[name]);\n              }\n            }\n          }\n\n          lifecycleCall(newNode, isNew ? oncreate : onupdate, oldNode);\n\n          patch(newNode.dom, newNode.children, oldNode.children, isSVG);\n        }\n      }\n    }\n\n    return newTree;\n  }\n\n  // If use undom this serializes the dom to string html\n  function serialize(el, outer = true, i) {\n    if (el.nodeType === 3) {\n      return el.textContent;\n    }\n\n    let name = el.nodeName.toLowerCase();\n    let str = '';\n    let attr = el.attributes;\n    let child = el.childNodes;\n\n    if (outer) {\n      str += `<${name}`;\n      i = attr.length;\n      while (i--) {\n        str += ` ${attr[i].name}=\"${attr[i].value}\"`;\n      }\n\n      str += '>';\n    }\n\n    for (i = 0; i < child.length; i++) {\n      str += serialize(child[i]);\n    }\n\n    str += outer ? `</${name}>` : '';\n    return str;\n  }\n\n  v.update = function () {\n    let args = v.utils.flat(arguments, 0, []);\n    if (v.is.node || !v.is.updating) {\n      v.is.updating = true;\n      args.unshift(mountedComponent);\n      oldTree = patch(mainContainer, v.apply(v, args), oldTree);\n      v.is.updating = false;\n    }\n\n    return mainContainer.innerHTML;\n  };\n\n  v.mount = function (container, component) {\n    let args = v.utils.flat(arguments, 2, []);\n    mainContainer = v.is.node\n      ? document.createElement('div')\n      : typeof container === 'string'\n        ? document.querySelectorAll(container)[0]\n        : container;\n\n    oldTree = v.utils.dom2vnode(mainContainer).children;\n\n    if (!component.view && typeof component === 'function') {\n      component.view = component;\n    }\n\n    if (component.view) {\n      mountedComponent = component;\n    }\n\n    v.is.mounted = true;\n\n    return v.update.apply(v, args);\n  };\n};\n\nexport default plugin;\n"],"names":["v","tagOrComponent","props","vnode","children","name","dom","isVnode","el","isSVG","utils","flat","arguments","view","apply","Array","isArray","addState","component","state","Object","assign","[object Object]","args","start","arr","l","next","length","push","$el","nt","nodeType","nodeValue","nodeName","toLowerCase","events","prototype","map","call","attributes","property","forEach","childNodes","childvnode","dom2vnode","is","node","window","mounted","updating","browser","trust","htmlString","div","document","createElement","innerHTML","trim","item","plugins","use","plugin","options","indexOf","mountedComponent","oldTree","mainContainer","und","oncreate","onupdate","onremove","svgstr","lifecycleCall","methodName","oldNode","eventListener","e","currentTarget","type","update","newNode","createElementNS","unshift","patch","$parent","newTree","i","isNew","shortName","pop","textContent","removeChild","appendChild","replaceChild","slice","removeEventListener","removeAttribute","addEventListener","setAttribute","createTextNode","mount","container","querySelectorAll","global"],"mappings":"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"}