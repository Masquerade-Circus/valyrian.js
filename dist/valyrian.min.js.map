{"version":3,"file":"valyrian.min.js","sources":["../lib/patch.js","../lib/index.js"],"sourcesContent":["export default function (v) {\r\n  let und;\r\n  let mountedComponent;\r\n  let oldTree;\r\n  let mainContainer;\r\n  let oncreate = 'oncreate';\r\n  let onupdate = 'onupdate';\r\n  let onremove = 'onremove';\r\n  let svgstr = 'http://www.w3.org/2000/svg';\r\n\r\n  let bindings = [];\r\n\r\n  function runBindings(i, l, item, values, changed, name, val) {\r\n    i = 0;\r\n    l = bindings.length;\r\n    for (; i < l; i++) {\r\n      item = bindings[i];\r\n      values = [];\r\n      changed = false;\r\n      for (name in item.b) {\r\n        val = item.b[name](item.v);\r\n        if (val !== item.p[name]) {\r\n          item.p[name] = val;\r\n          changed = true;\r\n        }\r\n        if (typeof val === 'boolean') {\r\n          if (val) {\r\n            values.push(name);\r\n          }\r\n        } else {\r\n          values.push(val);\r\n        }\r\n      }\r\n      if (changed) {\r\n        values.unshift(item.v.props[item.a]);\r\n        values = values.join(' ').trim();\r\n        if (item.v.dom[item.a] !== und && item.v.dom[item.a] !== values && !item.v.isSVG) {\r\n          item.v.dom[item.a] = values;\r\n        } else {\r\n          item.v.dom.setAttribute(item.a, values);\r\n        }\r\n      }\r\n    }\r\n    setTimeout(() => runBindings(), 1);\r\n  }\r\n\r\n  function lifecycleCall(vnode, methodName, oldNode, vnodeNodeChild) {\r\n    if (vnode.props[methodName]) {\r\n      vnode.props[methodName](vnode, oldNode);\r\n    }\r\n\r\n    if (methodName === onremove) {\r\n      while (vnode.children.length) {\r\n        vnodeNodeChild = vnode.children.pop();\r\n        if (vnodeNodeChild.el) {\r\n          lifecycleCall(vnodeNodeChild, onremove);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function eventListener(e) {\r\n    if (e.currentTarget.events[e.type]) {\r\n      e.currentTarget.events[e.type](e);\r\n      v.update();\r\n    }\r\n  }\r\n\r\n  function createElement(newNode, isSVG) {\r\n    newNode.dom = isSVG ? document.createElementNS(svgstr, newNode.name) : document.createElement(newNode.name);\r\n    newNode.dom.events = {};\r\n  }\r\n\r\n  // eslint-disable-next-line complexity, sonarjs/cognitive-complexity\r\n  function patch($parent, newTree, oldTree, isSVG, newNode, oldNode, i, isNew, name, shortName, prop) {\r\n    // Remove deleted nodes\r\n    while (oldTree.length > newTree.length) {\r\n      oldNode = oldTree.pop();\r\n      if (oldNode.el) {\r\n        lifecycleCall(oldNode, onremove);\r\n      }\r\n      $parent.removeChild(oldNode.dom);\r\n    }\r\n\r\n    for (i = 0; i < newTree.length; i++) {\r\n      newNode = newTree[i];\r\n      oldNode = oldTree[i];\r\n\r\n      if (!newNode.el) {\r\n        if (newNode.el === und) {\r\n          newTree[i] = newNode = {\r\n            props: {},\r\n            nodeValue: newNode,\r\n            children: [],\r\n            el: false\r\n          };\r\n        }\r\n\r\n        // Added\r\n        if (oldNode === und) {\r\n          newNode.dom = document.createTextNode(newNode.nodeValue);\r\n          $parent.appendChild(newNode.dom);\r\n          // Replaced element\r\n        } else if (oldNode.el) {\r\n          newNode.dom = document.createTextNode(newNode.nodeValue);\r\n          lifecycleCall(oldNode, onremove);\r\n          $parent.replaceChild(newNode.dom, oldNode.dom);\r\n          // Replaced text\r\n        } else {\r\n          newNode.dom = oldNode.dom;\r\n          if (newNode.nodeValue !== oldNode.nodeValue) {\r\n            newNode.dom.nodeValue = newNode.nodeValue;\r\n          }\r\n        }\r\n      } else {\r\n        isNew = !v.is.mounted;\r\n\r\n        isSVG = isSVG || newNode.isSVG;\r\n\r\n        // Added\r\n        if (oldNode === und) {\r\n          createElement(newNode, isSVG);\r\n          $parent.appendChild(newNode.dom);\r\n          oldNode = { children: [], props: {} };\r\n          isNew = true;\r\n          // Replaced\r\n        } else if (newNode.name !== oldNode.name) {\r\n          createElement(newNode, isSVG);\r\n          lifecycleCall(oldNode, onremove);\r\n          $parent.replaceChild(newNode.dom, oldNode.dom);\r\n          isNew = true;\r\n          // Updated\r\n        } else {\r\n          newNode.dom = oldNode.dom;\r\n\r\n          for (name in oldNode.props) {\r\n            if (newNode.props[name] === und && !(name[0] === 'v' && name[1] === '-')) {\r\n              if (typeof oldNode.props[name] === 'function') {\r\n                shortName = name.slice(2);\r\n                if (newNode.dom.events[shortName]) {\r\n                  delete newNode.dom.events[shortName];\r\n                  newNode.dom.removeEventListener(shortName, eventListener);\r\n                }\r\n              } else if (newNode.dom[name] !== und) {\r\n                newNode.dom[name] = null;\r\n              } else {\r\n                newNode.dom.removeAttribute(name);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        for (name in newNode.props) {\r\n          prop = newNode.props[name];\r\n          if (name[0] === 'v' && name[1] === '-') {\r\n            bindings.push({\r\n              v: newNode,\r\n              a: name.slice(2),\r\n              b: prop,\r\n              p: {}\r\n            });\r\n          } else if (typeof prop === 'function') {\r\n            shortName = name.slice(2);\r\n            switch (name) {\r\n              case oncreate:\r\n              case onupdate:\r\n              case onremove:\r\n                break;\r\n              default:\r\n                if (!newNode.dom.events[shortName]) {\r\n                  newNode.dom.events[shortName] = prop;\r\n                  newNode.dom.addEventListener(shortName, eventListener);\r\n                }\r\n                break;\r\n            }\r\n          } else if (newNode.dom[name] !== und && newNode.dom[name] !== prop && !isSVG) {\r\n            newNode.dom[name] = prop;\r\n          } else if (prop !== oldNode.props[name]) {\r\n            newNode.dom.setAttribute(name, prop);\r\n          }\r\n        }\r\n\r\n        lifecycleCall(newNode, isNew ? oncreate : onupdate, oldNode);\r\n\r\n        patch(newNode.dom, newNode.children, oldNode.children, isSVG);\r\n      }\r\n    }\r\n\r\n    return newTree;\r\n  }\r\n\r\n  // If use undom this serializes the dom to string html\r\n  function serialize(el, outer = true, i) {\r\n    if (el.nodeType === 3) {\r\n      return el.textContent;\r\n    }\r\n\r\n    let name = el.nodeName.toLowerCase();\r\n    let str = '';\r\n    let attr = el.attributes;\r\n    let child = el.childNodes;\r\n\r\n    if (outer) {\r\n      str += `<${name}`;\r\n      i = attr.length;\r\n      while (i--) {\r\n        str += ` ${attr[i].name}=\"${attr[i].value}\"`;\r\n      }\r\n\r\n      str += '>';\r\n    }\r\n\r\n    for (i = 0; i < child.length; i++) {\r\n      str += serialize(child[i]);\r\n    }\r\n\r\n    str += outer ? `</${name}>` : '';\r\n    return str;\r\n  }\r\n\r\n  v.update = function (args) {\r\n    bindings = [];\r\n    args = v.utils.flat(arguments, 0, []);\r\n    if (v.is.node || !v.is.updating) {\r\n      v.is.updating = true;\r\n      args.unshift(mountedComponent);\r\n      oldTree = patch(mainContainer, v.apply(v, args), oldTree);\r\n      v.is.updating = false;\r\n    }\r\n\r\n    if (v.is.node) {\r\n      return mainContainer.innerHTML;\r\n    }\r\n  };\r\n\r\n  v.mount = function (container, component) {\r\n    let args = v.utils.flat(arguments, 2, []);\r\n    mainContainer = v.is.node\r\n      ? document.createElement('div')\r\n      : typeof container === 'string'\r\n        ? document.querySelectorAll(container)[0]\r\n        : container;\r\n\r\n    oldTree = v.utils.dom2vnode(mainContainer).children;\r\n\r\n    if (!component.view && typeof component === 'function') {\r\n      component.view = component;\r\n    }\r\n\r\n    if (component.view) {\r\n      mountedComponent = component;\r\n    }\r\n\r\n    v.is.mounted = true;\r\n    runBindings();\r\n\r\n    return v.update.apply(v, args);\r\n  };\r\n}\r\n","'use strict';\r\n\r\nimport Patch from './patch';\r\n\r\nlet und;\r\nlet isArray = Array.isArray;\r\nlet forEach = Array.prototype.forEach;\r\n\r\nfunction v(tagOrComponent, props, vnode, children, i) {\r\n  if (typeof tagOrComponent === 'string') {\r\n    vnode = {\r\n      name: tagOrComponent,\r\n      props: props || {},\r\n      children: [],\r\n      el: true,\r\n      isSVG: tagOrComponent === 'svg'\r\n    };\r\n\r\n    v.utils.flat(arguments, 2, vnode.children);\r\n    return vnode;\r\n  }\r\n\r\n  if (!tagOrComponent.view && typeof tagOrComponent === 'function') {\r\n    tagOrComponent.view = tagOrComponent;\r\n  }\r\n\r\n  if (tagOrComponent.view) {\r\n    children = tagOrComponent.view.apply(tagOrComponent, v.utils.flat(arguments, 1, []));\r\n    return isArray(children) ? children : [children];\r\n  }\r\n}\r\n\r\n// This could be extended to do a deep clone\r\n// This mutates the component\r\nv.addState = function (component, state) {\r\n  Object.assign(component, { view: component }, state);\r\n};\r\n\r\nv.utils = {\r\n  flat(args, start, arr, l, next) {\r\n    l = args.length;\r\n\r\n    for (; start < l; start++) {\r\n      next = args[start];\r\n      if (isArray(next)) {\r\n        arr = v.utils.flat(next, 0, arr);\r\n      } else if (next !== und && next !== null) {\r\n        arr.push(next);\r\n      }\r\n    }\r\n\r\n    return arr;\r\n  },\r\n  dom2vnode($el, vnode, nt) {\r\n    nt = $el.nodeType;\r\n    if (nt === 3 || nt === 1) {\r\n      vnode = {\r\n        props: {},\r\n        children: [],\r\n        dom: $el,\r\n        el: true,\r\n        isSVG: false\r\n      };\r\n\r\n      if (nt === 3) {\r\n        vnode.nodeValue = $el.nodeValue;\r\n        vnode.el = false;\r\n        return vnode;\r\n      }\r\n\r\n      vnode.name = $el.nodeName.toLowerCase();\r\n      vnode.isSVG = vnode.name === 'svg';\r\n\r\n      vnode.dom.events = {};\r\n\r\n      forEach.call($el.attributes, property => vnode.props[property.nodeName] = property.nodeValue);\r\n\r\n      forEach.call($el.childNodes, ($el) => {\r\n        let childvnode = v.utils.dom2vnode($el);\r\n        if (childvnode) {\r\n          vnode.children.push(childvnode);\r\n        }\r\n      });\r\n\r\n      return vnode;\r\n    }\r\n  }\r\n};\r\n\r\nv.is = {\r\n  node: typeof window === 'undefined',\r\n  mounted: false,\r\n  updating: false\r\n};\r\nv.is.browser = !v.is.node;\r\n\r\n// NOTE: This does not work with undom for server side rendering\r\n// See: https://github.com/developit/undom/issues/7\r\nv.trust = function (htmlString) {\r\n  let div = document.createElement('div');\r\n  div.innerHTML = htmlString.trim();\r\n\r\n  return Array.prototype.map.call(div.childNodes, (item) => v.utils.dom2vnode(item));\r\n};\r\n\r\nlet plugins = [];\r\nv.use = function (plugin, options) {\r\n  if (plugins.indexOf(plugin) === -1) {\r\n    plugin(v, options);\r\n    plugins.push(plugin);\r\n  }\r\n  return v;\r\n};\r\n\r\nv.use(Patch);\r\n\r\n\r\n(v.is.node ? global : window).v = v;\r\n"],"names":["isArray","Array","forEach","prototype","v","tagOrComponent","props","vnode","children","i","name","el","isSVG","utils","flat","arguments","view","apply","addState","component","state","Object","assign","[object Object]","args","start","arr","l","next","length","push","$el","nt","nodeType","dom","nodeValue","nodeName","toLowerCase","events","call","attributes","property","childNodes","childvnode","dom2vnode","is","node","window","mounted","updating","browser","trust","htmlString","div","document","createElement","innerHTML","trim","map","item","plugins","use","plugin","options","indexOf","und","mountedComponent","oldTree","mainContainer","oncreate","onupdate","onremove","svgstr","bindings","lifecycleCall","methodName","oldNode","vnodeNodeChild","pop","eventListener","e","currentTarget","type","update","newNode","createElementNS","unshift","patch","$parent","newTree","isNew","shortName","prop","removeChild","appendChild","replaceChild","slice","removeEventListener","removeAttribute","a","b","p","addEventListener","setAttribute","createTextNode","mount","container","querySelectorAll","runBindings","values","changed","val","join","setTimeout","global"],"mappings":"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"}