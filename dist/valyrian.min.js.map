{"version":3,"file":"valyrian.min.js","sources":["../lib/patch.js","../lib/index.js"],"sourcesContent":["export default function (v) {\n  let und;\n  let mountedComponent;\n  let oldTree;\n  let mainContainer;\n  let oncreate = 'create';\n  let onupdate = 'update';\n  let onremove = 'remove';\n  let svgstr = 'http://www.w3.org/2000/svg';\n\n  function lifecycleCall(vnode, methodName, oldNode, l) {\n    if (vnode.props[methodName]) {\n      vnode.props[methodName](vnode, oldNode);\n    }\n\n    if (methodName === onremove) {\n      l = vnode.children.length;\n      while (l--) {\n        if (vnode.children[l].el) {\n          lifecycleCall(vnode.children[l], onremove);\n        }\n      }\n      vnode.children = [];\n    }\n  }\n\n  function eventListener(e) {\n    if (e.currentTarget.events[e.type]) {\n      e.currentTarget.events[e.type](e);\n      if (!e.defaultPrevented) {\n        v.update();\n      }\n    }\n  }\n\n  function createElement(newNode, isSVG) {\n    newNode.dom = isSVG ? document.createElementNS(svgstr, newNode.name) : document.createElement(newNode.name);\n    newNode.dom.events = {};\n  }\n\n  // eslint-disable-next-line complexity, sonarjs/cognitive-complexity\n  function patch($parent, newTree, oldTree, isSVG, newNode, oldNode, i, isNew, name, shortName, prop) {\n\n    // Remove deleted nodes\n    while (oldTree.length > newTree.length) {\n      oldNode = oldTree.pop();\n      if (oldNode.el) {\n        lifecycleCall(oldNode, onremove);\n      }\n      $parent.removeChild(oldNode.dom);\n    }\n\n    for (i = 0; i < newTree.length; i++) {\n      newNode = newTree[i];\n      oldNode = oldTree[i];\n\n      if (!newNode.el) {\n        if (newNode.el === und) {\n          newTree[i] = newNode = {\n            props: {},\n            nodeValue: newNode,\n            children: [],\n            el: false\n          };\n        }\n\n        // Added\n        if (oldNode === und) {\n          newNode.dom = document.createTextNode(newNode.nodeValue);\n          $parent.appendChild(newNode.dom);\n          // Replaced element\n        } else if (oldNode.el) {\n          newNode.dom = document.createTextNode(newNode.nodeValue);\n          lifecycleCall(oldNode, onremove);\n          $parent.replaceChild(newNode.dom, oldNode.dom);\n          // Replaced text\n        } else {\n          newNode.dom = oldNode.dom;\n          if (newNode.nodeValue !== oldNode.nodeValue) {\n            newNode.dom.nodeValue = newNode.nodeValue;\n          }\n        }\n      } else {\n        isNew = !v.is.mounted;\n\n        isSVG = isSVG || newNode.isSVG;\n\n        // Added\n        if (oldNode === und) {\n          createElement(newNode, isSVG);\n          $parent.appendChild(newNode.dom);\n          oldNode = { children: [], props: {} };\n          isNew = true;\n          // Replaced\n        } else if (newNode.name !== oldNode.name) {\n          createElement(newNode, isSVG);\n          lifecycleCall(oldNode, onremove);\n          $parent.replaceChild(newNode.dom, oldNode.dom);\n          isNew = true;\n          // Updated\n        } else {\n          newNode.dom = oldNode.dom;\n\n          for (name in oldNode.props) {\n            if (newNode.props[name] === und) {\n              if (typeof oldNode.props[name] === 'function') {\n                shortName = name.slice(2);\n                newNode.dom.removeEventListener(shortName, eventListener);\n              } else {\n                newNode.dom.removeAttribute(name);\n              }\n            }\n          }\n        }\n\n        for (name in newNode.props) {\n          prop = newNode.props[name];\n          if (typeof prop === 'function') {\n            shortName = name.slice(2);\n            switch (shortName) {\n              case oncreate:\n              case onupdate:\n              case onremove:\n                break;\n              default:\n                if (!newNode.dom.events[shortName]) {\n                  newNode.dom.events[shortName] = prop;\n                  newNode.dom.addEventListener(shortName, eventListener);\n                }\n                break;\n            }\n          } else if (prop !== oldNode.props[name]) {\n            newNode.dom.setAttribute(name, prop);\n          }\n        }\n\n        lifecycleCall(newNode, isNew ? oncreate : onupdate, oldNode);\n\n        patch(newNode.dom, newNode.children, oldNode.children, isSVG);\n      }\n    }\n\n\n    return newTree;\n  }\n\n  // If use undom this serializes the dom to string html\n  function serialize(el, outer = true, i) {\n    if (el.nodeType === 3) {\n      return el.textContent;\n    }\n\n    let name = el.nodeName.toLowerCase();\n    let str = '';\n    let attr = el.attributes;\n    let child = el.childNodes;\n\n    if (outer) {\n      str += `<${name}`;\n      i = attr.length;\n      while (i--) {\n        str += ` ${attr[i].name}=\"${attr[i].value}\"`;\n      }\n\n      str += '>';\n    }\n\n    for (i = 0; i < child.length; i++) {\n      str += serialize(child[i]);\n    }\n\n    str += outer ? `</${name}>` : '';\n    return str;\n  }\n\n  v.update = function () {\n    let args = v.utils.flat(arguments, 0, []);\n    if (v.is.node || !v.is.updating) {\n      v.is.updating = true;\n      args.unshift(mountedComponent);\n      oldTree = patch(mainContainer, v.apply(v, args), oldTree);\n      v.is.updating = false;\n    }\n\n    if (v.is.node) {\n      return mainContainer.innerHTML;\n    }\n  };\n\n  let runObserversInterval;\n  v.mount = function (container, component) {\n    let args = v.utils.flat(arguments, 2, []);\n    mainContainer = v.is.node\n      ? document.createElement('div')\n      : typeof container === 'string'\n        ? document.querySelectorAll(container)[0]\n        : container;\n\n    oldTree = v.utils.dom2vnode(mainContainer).children;\n\n    if (!component.view && typeof component === 'function') {\n      component.view = component;\n    }\n\n    if (component.view) {\n      mountedComponent = component;\n    }\n\n    v.is.mounted = true;\n\n    return v.update.apply(v, args);\n  };\n};\n","'use strict';\n\nimport Patch from './patch';\n\nlet und;\nlet isArray = Array.isArray;\nlet forEach = Array.prototype.forEach;\n\nfunction v(tagOrComponent, props, vnode, children, i) {\n  if (typeof tagOrComponent === 'string') {\n    vnode = {\n      name: tagOrComponent,\n      props: props || {},\n      children: [],\n      el: true,\n      isSVG: tagOrComponent === 'svg'\n    };\n\n    v.utils.flat(arguments, 2, vnode.children);\n    return vnode;\n  }\n\n  if (!tagOrComponent.view && typeof tagOrComponent === 'function') {\n    tagOrComponent.view = tagOrComponent;\n  }\n\n  if (tagOrComponent.view) {\n    children = tagOrComponent.view.apply(tagOrComponent, v.utils.flat(arguments, 1, []));\n    return isArray(children) ? children : [children];\n  }\n}\n\n// This could be extended to do a deep clone\n// This mutates the component\nv.addState = function (component, state) {\n  Object.assign(component, { view: component }, state);\n};\n\nv.utils = {\n  flat(args, start, arr, l, next) {\n    l = args.length;\n\n    for (; start < l; start++) {\n      next = args[start];\n      if (isArray(next)) {\n        arr = v.utils.flat(next, 0, arr);\n      } else if (next !== und && next !== null) {\n        arr.push(next);\n      }\n    }\n\n    return arr;\n  },\n  dom2vnode($el, vnode, nt) {\n    nt = $el.nodeType;\n    if (nt === 3 || nt === 1) {\n      vnode = {\n        props: {},\n        children: [],\n        dom: $el,\n        el: true,\n        isSVG: false\n      };\n\n      if (nt === 3) {\n        vnode.nodeValue = $el.nodeValue;\n        vnode.el = false;\n        return vnode;\n      }\n\n      vnode.name = $el.nodeName.toLowerCase();\n      vnode.isSVG = vnode.name === 'svg';\n\n      vnode.dom.events = {};\n\n      forEach.call($el.attributes, property => vnode.props[property.nodeName] = property.nodeValue);\n\n      forEach.call($el.childNodes, ($el) => {\n        let childvnode = v.utils.dom2vnode($el);\n        if (childvnode) {\n          vnode.children.push(childvnode);\n        }\n      });\n\n      return vnode;\n    }\n  }\n};\n\nv.is = {\n  node: typeof window === 'undefined',\n  mounted: false,\n  updating: false\n};\nv.is.browser = !v.is.node;\n\n// NOTE: This does not work with undom for server side rendering\n// See: https://github.com/developit/undom/issues/7\nv.trust = function (htmlString) {\n  let div = document.createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  return Array.prototype.map.call(div.childNodes, (item) => v.utils.dom2vnode(item));\n};\n\nlet plugins = [];\nv.use = function (plugin, options) {\n  if (plugins.indexOf(plugin) === -1) {\n    plugin(v, options);\n    plugins.push(plugin);\n  }\n  return v;\n};\n\nv.use(Patch);\n\n\n(v.is.node ? global : window).v = v;\n"],"names":["isArray","Array","forEach","prototype","v","tagOrComponent","props","vnode","children","i","name","el","isSVG","utils","flat","arguments","view","apply","addState","component","state","Object","assign","[object Object]","args","start","arr","l","next","length","push","$el","nt","nodeType","dom","nodeValue","nodeName","toLowerCase","events","call","attributes","property","childNodes","childvnode","dom2vnode","is","node","window","mounted","updating","browser","trust","htmlString","div","document","createElement","innerHTML","trim","map","item","plugins","use","plugin","options","indexOf","und","mountedComponent","oldTree","mainContainer","oncreate","onupdate","onremove","svgstr","lifecycleCall","methodName","oldNode","eventListener","e","currentTarget","type","defaultPrevented","update","newNode","createElementNS","unshift","patch","$parent","newTree","isNew","shortName","prop","pop","removeChild","appendChild","replaceChild","slice","removeEventListener","removeAttribute","addEventListener","setAttribute","createTextNode","mount","container","querySelectorAll","global"],"mappings":"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"}