{"version":3,"file":"valyrian.min.js","sources":["../lib/index.js"],"sourcesContent":["let UND = void 0;\nlet oncreate = 'v-create';\nlet onupdate = 'v-update';\nlet onremove = 'v-remove';\nlet onbeforeupdate = 'v-beforeupdate';\nlet functionstr = 'function';\nlet list = 'v-list';\nlet noop = 'v-noop';\nlet mainNode;\nlet oldMainNode;\nlet mountedComponent;\n\nfunction Vnode(name, props, children) {\n  this.props = props || {};\n  this.children = children;\n  this.name = name;\n};\n\nfunction TextVnode(dom) {\n  this.dom = dom;\n}\nTextVnode.prototype = {\n  props: {},\n  children: []\n};\n\nlet emptyNode = new TextVnode();\n\nfunction createElement(tag, isSVG) {\n  return isSVG ?\n    document.createElementNS('http://www.w3.org/2000/svg', tag) :\n    document.createElement(tag);\n}\n\nfunction v(tagOrComponent, props, ...children) {\n  return new Vnode(tagOrComponent, props, children);\n};\n\nv.isNode = typeof window === 'undefined';\n\n// Hydrates the current dom before mount\nv.dom2vnode = function (dom) {\n  if (dom.nodeType === 3) {\n    return new TextVnode(dom);\n  }\n\n  if (dom.nodeType === 1) {\n    let props = {};\n    [].forEach.call(dom.attributes, (prop) => props[prop.nodeName] = prop.nodeValue);\n\n    let vnode = new Vnode(\n      dom.nodeName,\n      props,\n      []\n    );\n    vnode.dom = dom;\n\n    for (let i = 0, l = dom.childNodes.length; i < l; i++) {\n      let childVnode = v.dom2vnode(dom.childNodes[i]);\n      childVnode && vnode.children.push(childVnode);\n    }\n    return vnode;\n  }\n};\n\nv.trust = (htmlString) => {\n  let div = createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  return [].map.call(div.childNodes, (item) => v.dom2vnode(item));\n};\n\n// Plugin system\nlet plugins = new Map();\nv.usePlugin = (plugin, options) => !plugins.has(plugin) && plugins.set(plugin, true) && plugin(v, options);\n\nv.reservedWords = {\n  key: true,\n  [list]: true,\n  [noop]: true,\n  [oncreate]: true,\n  [onbeforeupdate]: true,\n  [onupdate]: true,\n  [onremove]: true\n};\n\nlet attachedListeners = {};\nfunction eventListener(e) {\n  let dom = e.target;\n  let name = `__on${e.type}`;\n  while (dom) {\n    if (dom[name]) {\n      dom[name](e);\n      if (!e.defaultPrevented) {\n        v.update();\n      }\n      return;\n    }\n    dom = dom.parentNode;\n  }\n};\n\nfunction lifecycleCall(vnode, methodName, oldNode) {\n  if (methodName === onremove) {\n    vnode.cleanUp && cleanupVnode(vnode);\n    for (let i = 0, l = vnode.children.length; i < l; i++) {\n      lifecycleCall(vnode.children[i], onremove);\n    }\n  }\n\n  if (vnode.props[methodName]) {\n    return vnode.props[methodName](vnode, oldNode);\n  }\n}\n\nv.updateProperty = (name, newNode, oldNode) => {\n  let value = newNode.props[name];\n  if (v.reservedWords[name]) {\n    if (typeof v.reservedWords[name] === functionstr) {\n      v.reservedWords[name](value, newNode, oldNode);\n    }\n  } else if (typeof value === functionstr) {\n    name = `__${name}`;\n    if (!attachedListeners[name]) {\n      document.addEventListener(name.slice(4), eventListener);\n      attachedListeners[name] = true;\n    };\n    newNode.dom[name] = value;\n  } else if (name in newNode.dom && !newNode.isSVG) {\n    if (newNode.dom[name] !== value) {\n      newNode.dom[name] = value;\n    }\n  } else if (value !== oldNode.props[name]) {\n    newNode.dom.setAttribute(name, value);\n  }\n};\n\nfunction updateProps(newNode, oldNode) {\n  for (let name in newNode.props) {\n    v.updateProperty(name, newNode, oldNode);\n  }\n}\n\nfunction createNode(newNode) {\n  newNode.dom = createElement(newNode.name, newNode.isSVG);\n  updateProps(newNode, emptyNode);\n  lifecycleCall(newNode, oncreate);\n  patch(newNode, emptyNode);\n}\n\nfunction updateNode(newNode, oldNode) {\n  newNode.dom = oldNode.dom;\n  if (newNode.props[noop] || lifecycleCall(newNode, onbeforeupdate, oldNode) === false) {\n    newNode.children = oldNode.children;\n  } else {\n    for (let name in oldNode.props) {\n      if (!v.reservedWords[name] && name in newNode.props === false && typeof oldNode.props[name] !== functionstr) {\n        if (name in newNode.dom) {\n          newNode.dom[name] = UND;\n        } else {\n          newNode.dom.removeAttribute(name);\n        }\n      }\n    }\n    updateProps(newNode, oldNode);\n    lifecycleCall(newNode, v.isMounted ? onupdate : oncreate, oldNode);\n    patch(newNode, oldNode);\n  }\n}\n\nfunction updateKeyedNode($parent, newNode, compareNode, newIndex) {\n  // Moved or updated\n  compareNode.dom ?\n    updateNode(newNode, compareNode) :\n    createNode(newNode);\n\n  if (newNode.dom !== $parent.childNodes[newIndex]) {\n    $parent.childNodes[newIndex] ?\n      $parent.replaceChild(newNode.dom, $parent.childNodes[newIndex]) :\n      $parent.appendChild(newNode.dom);\n  }\n}\n\nv.onCleanup = function (callback) {\n  let parentVnode = v.current.parentVnode;\n  if (!parentVnode.cleanUp) {\n    parentVnode.onCleanup = [];\n    parentVnode.cleanUp = true;\n  }\n  parentVnode.onCleanup.push(callback);\n};\n\nfunction cleanupVnode(vnode) {\n  for (let callback of vnode.onCleanup) {\n    callback();\n  }\n}\n\nv.current = {\n  parentVnode: UND,\n  oldParentVnode: UND,\n  component: UND\n};\n\nlet isArray = Array.isArray;\n\n// eslint-disable-next-line complexity,sonarjs/cognitive-complexity\nfunction patch(parentNode, oldParentNode) {\n  let newTree = isArray(parentNode.children) ? parentNode.children : [parentNode.children];\n  let oldTree = oldParentNode.children;\n  v.current.parentVnode = parentNode;\n  v.current.oldParentVnode = oldParentNode;\n\n  // Flatten children\n  for (let i = 0; i < newTree.length; i++) {\n    let childVnode = newTree[i];\n\n    if (isArray(childVnode)) {\n      newTree.splice(i--, 1, ...childVnode);\n    } else if (childVnode instanceof Vnode) {\n      if (typeof childVnode.name !== 'string') {\n        v.current.component = childVnode;\n        let viewMethod = childVnode.name.view || childVnode.name;\n        newTree.splice(i--, 1, ...[viewMethod.call(childVnode.name, childVnode.props, ...childVnode.children)]);\n      } else {\n        childVnode.isSVG = parentNode.isSVG || childVnode.name === 'svg';\n        childVnode.cleanUp && cleanupVnode(childVnode);\n      }\n    }\n  }\n\n  // Is keyed list\n  if (oldTree.length && parentNode.props[list]) {\n    let oldKeys = oldTree.map(vnode => vnode.props.key);\n    let newKeys = newTree.map(vnode => vnode.props.key);\n\n    for (let i = 0, l = newKeys.length; i < l; i++) {\n      let key = newKeys[i];\n      let newNode = newTree[i];\n\n      // Updated: Same key\n      if (key === oldKeys[i]) {\n        oldTree[i].processed = true;\n        updateKeyedNode(parentNode.dom, newNode, oldTree[i], i);\n      } else {\n        let oldIndex = oldKeys.indexOf(key);\n        let newIndex = i >= oldKeys.length ? UND : i;\n\n        // Moved: Key exists in old keys\n        if (oldIndex !== -1) {\n          oldTree[oldIndex].processed = true;\n          updateKeyedNode(parentNode.dom, newNode, oldTree[oldIndex], newIndex);\n          // Added: Key does not exists in old keys\n        } else {\n          updateKeyedNode(parentNode.dom, newNode, emptyNode, newIndex);\n        }\n      }\n    }\n\n    // Delete unprocessed old keys\n    let l = oldTree.length;\n\n    while (l--) {\n      if (!oldTree[l].processed) {\n        lifecycleCall(oldTree[l], onremove);\n        oldTree[l].dom.parentNode && parentNode.dom.removeChild(oldTree[l].dom);\n      }\n    }\n\n    // Not keyed list or first render so use the simple algorithm\n  } else {\n    let i = oldTree.length;\n    let l = newTree.length;\n\n    // Remove deleted nodes\n    while (i-- > l) {\n      lifecycleCall(oldTree[i], onremove);\n      parentNode.dom.removeChild(oldTree[i].dom);\n    }\n\n    for (i = 0; i < l; i++) {\n      let newNode = newTree[i];\n      let oldNode = oldTree[i];\n      // Is vnode\n      if (newNode instanceof Vnode) {\n        if (!oldNode) {\n          createNode(newNode);\n          parentNode.dom.appendChild(newNode.dom);\n        } else {\n          if (newNode.name === oldNode.name) {\n            updateNode(newNode, oldNode);\n          } else {\n            createNode(newNode);\n            lifecycleCall(oldNode, onremove);\n            parentNode.dom.replaceChild(newNode.dom, oldNode.dom);\n          }\n        }\n\n      } else if (oldNode instanceof TextVnode) {\n        newNode = String(newNode);\n        if (newNode !== oldNode.dom.nodeValue) {\n          oldNode.dom.nodeValue = newNode;\n        }\n        newTree[i] = oldNode;\n      } else {\n        let dom = document.createTextNode(newNode);\n        if (!oldNode) {\n          parentNode.dom.appendChild(dom);\n        } else {\n          lifecycleCall(oldNode, onremove);\n          parentNode.dom.replaceChild(dom, oldNode.dom);\n        }\n\n        newTree[i] = new TextVnode(dom);\n      }\n    }\n  }\n\n  parentNode.children = newTree;\n};\n\nv.update = (props, ...children) => {\n  if (mainNode) {\n    if (mountedComponent) {\n      oldMainNode = mainNode;\n      mainNode = new Vnode(mainNode.name, mainNode.props, v(mountedComponent, props, ...children));\n      mainNode.dom = oldMainNode.dom;\n      mainNode.isSVG = mainNode.name === 'svg';\n      oldMainNode.cleanUp && cleanupVnode(oldMainNode);\n      patch(mainNode, oldMainNode);\n      v.isMounted = true;\n    }\n\n    return v.isNode && mainNode.dom.innerHTML;\n  }\n};\n\nv.mount = (container, component, props, ...children) => {\n  let mainContainer = v.isNode\n    ? createElement('div')\n    : typeof container === 'string'\n      ? document.querySelectorAll(container)[0]\n      : container;\n\n  mainNode = v.dom2vnode(mainContainer);\n  mountedComponent = component;\n\n  return v.update(props, ...children);\n};\n\nv.unmount = () => {\n  mountedComponent = () => '';\n  let result = v.update();\n  mountedComponent = UND;\n  v.isMounted = false;\n  return result;\n};\n\nv.directive = (directive, handler) => !v.reservedWords[directive] && (v.reservedWords[directive] = handler);\nv.directive('v-for', (set, vnode) => vnode.children = set.map(vnode.children[0]));\n\nlet hideDirective = (test) => (bool, vnode, oldnode) => {\n  if (bool === test) {\n    let newdom = document.createTextNode('');\n    if (oldnode.dom && oldnode.dom.parentNode) {\n      lifecycleCall(oldnode, onremove);\n      oldnode.dom.parentNode.replaceChild(newdom, oldnode.dom);\n    }\n    vnode.name = '';\n    vnode.children = [];\n    vnode.props = {};\n    vnode.dom = newdom;\n  }\n};\n\nv.directive('v-if', hideDirective(false));\nv.directive('v-unless', hideDirective(true));\nv.directive('v-show', (bool, vnode) => vnode.dom.style.display = bool ? '' : 'none');\n\n(v.isNode ? global : window).v = v;\n"],"names":["mainNode","oldMainNode","mountedComponent","UND","Vnode","name","props","children","this","TextVnode","dom","prototype","emptyNode","createElement","tag","isSVG","document","createElementNS","v","tagOrComponent","isNode","window","dom2vnode","nodeType","forEach","call","attributes","prop","nodeName","nodeValue","vnode","i","l","childNodes","length","childVnode","push","trust","htmlString","div","innerHTML","trim","map","item","plugins","Map","usePlugin","plugin","options","has","set","reservedWords","key","v-list","v-noop","v-create","v-beforeupdate","v-update","v-remove","attachedListeners","eventListener","e","target","type","defaultPrevented","update","parentNode","lifecycleCall","methodName","oldNode","cleanUp","cleanupVnode","updateProps","newNode","updateProperty","createNode","patch","updateNode","removeAttribute","isMounted","updateKeyedNode","$parent","compareNode","newIndex","replaceChild","appendChild","callback","onCleanup","value","addEventListener","slice","setAttribute","parentVnode","current","oldParentVnode","component","isArray","Array","oldParentNode","newTree","oldTree","splice","viewMethod","view","oldKeys","newKeys","processed","oldIndex","indexOf","removeChild","String","createTextNode","mount","container","mainContainer","querySelectorAll","unmount","result","directive","handler","hideDirective","test","bool","oldnode","newdom","style","display","global"],"mappings":"yBAAA,IAQIA,EACAC,EACAC,EAVAC,OAAM,EAYV,SAASC,EAAMC,EAAMC,EAAOC,GAC1BC,KAAKF,MAAQA,GAAS,GACtBE,KAAKD,SAAWA,EAChBC,KAAKH,KAAOA,EAGd,SAASI,EAAUC,GACjBF,KAAKE,IAAMA,EAEbD,EAAUE,UAAY,CACpBL,MAAO,GACPC,SAAU,IAGZ,IAAIK,EAAY,IAAIH,EAEpB,SAASI,EAAcC,EAAKC,GAC1B,OAAOA,EACLC,SAASC,gBAAgB,6BAA8BH,GACvDE,SAASH,cAAcC,GAG3B,SAASI,EAAEC,EAAgBb,KAAUC,GACnC,OAAO,IAAIH,EAAMe,EAAgBb,EAAOC,GAG1CW,EAAEE,OAA2B,oBAAXC,OAGlBH,EAAEI,UAAY,SAAUZ,GACtB,GAAqB,IAAjBA,EAAIa,SACN,OAAO,IAAId,EAAUC,GAGvB,GAAqB,IAAjBA,EAAIa,SAAgB,CACtB,IAAIjB,EAAQ,GACZ,GAAGkB,QAAQC,KAAKf,EAAIgB,WAAaC,GAASrB,EAAMqB,EAAKC,UAAYD,EAAKE,WAEtE,IAAIC,EAAQ,IAAI1B,EACdM,EAAIkB,SACJtB,EACA,IAEFwB,EAAMpB,IAAMA,EAEZ,IAAK,IAAIqB,EAAI,EAAGC,EAAItB,EAAIuB,WAAWC,OAAQH,EAAIC,EAAGD,IAAK,CACrD,IAAII,EAAajB,EAAEI,UAAUZ,EAAIuB,WAAWF,IAC5CI,GAAcL,EAAMvB,SAAS6B,KAAKD,GAEpC,OAAOL,IAIXZ,EAAEmB,MAASC,IACT,IAAIC,EAAM1B,EAAc,OAGxB,OAFA0B,EAAIC,UAAYF,EAAWG,OAEpB,GAAGC,IAAIjB,KAAKc,EAAIN,WAAaU,GAASzB,EAAEI,UAAUqB,KAI3D,IAAIC,EAAU,IAAIC,IAClB3B,EAAE4B,UAAY,CAACC,EAAQC,KAAaJ,EAAQK,IAAIF,IAAWH,EAAQM,IAAIH,GAAQ,IAASA,EAAO7B,EAAG8B,GAElG9B,EAAEiC,cAAgB,CAChBC,KAAK,EACLC,UAAQ,EACRC,UAAQ,EACRC,YAAY,EACZC,kBAAkB,EAClBC,YAAY,EACZC,YAAY,GAGd,IAAIC,EAAoB,GACxB,SAASC,EAAcC,GACrB,IAAInD,EAAMmD,EAAEC,OACRzD,EAAO,OAAOwD,EAAEE,OACpB,KAAOrD,GAAK,CACV,GAAIA,EAAIL,GAKN,OAJAK,EAAIL,GAAMwD,QACLA,EAAEG,kBACL9C,EAAE+C,UAINvD,EAAMA,EAAIwD,YAId,SAASC,EAAcrC,EAAOsC,EAAYC,GACxC,GApGa,aAoGTD,EAAyB,CAC3BtC,EAAMwC,SAAWC,EAAazC,GAC9B,IAAK,IAAIC,EAAI,EAAGC,EAAIF,EAAMvB,SAAS2B,OAAQH,EAAIC,EAAGD,IAChDoC,EAAcrC,EAAMvB,SAASwB,GAvGpB,YA2Gb,GAAID,EAAMxB,MAAM8D,GACd,OAAOtC,EAAMxB,MAAM8D,GAAYtC,EAAOuC,GA0B1C,SAASG,EAAYC,EAASJ,GAC5B,IAAK,IAAIhE,KAAQoE,EAAQnE,MACvBY,EAAEwD,eAAerE,EAAMoE,EAASJ,GAIpC,SAASM,EAAWF,GAClBA,EAAQ/D,IAAMG,EAAc4D,EAAQpE,KAAMoE,EAAQ1D,OAClDyD,EAAYC,EAAS7D,GACrBuD,EAAcM,EAjJD,YAkJbG,EAAMH,EAAS7D,GAGjB,SAASiE,EAAWJ,EAASJ,GAE3B,GADAI,EAAQ/D,IAAM2D,EAAQ3D,IAClB+D,EAAQnE,MAjJH,YAiJsE,IAApD6D,EAAcM,EApJtB,iBAoJ+CJ,GAChEI,EAAQlE,SAAW8D,EAAQ9D,aACtB,CACL,IAAK,IAAIF,KAAQgE,EAAQ/D,MAClBY,EAAEiC,cAAc9C,IAASA,KAAQoE,EAAQnE,QAAU,GAvJ5C,mBAuJ4D+D,EAAQ/D,MAAMD,KAChFA,KAAQoE,EAAQ/D,IAClB+D,EAAQ/D,IAAIL,GAAQF,EAEpBsE,EAAQ/D,IAAIoE,gBAAgBzE,IAIlCmE,EAAYC,EAASJ,GACrBF,EAAcM,EAASvD,EAAE6D,UAnKd,WADA,WAoK+CV,GAC1DO,EAAMH,EAASJ,IAInB,SAASW,EAAgBC,EAASR,EAASS,EAAaC,GAEtDD,EAAYxE,IACVmE,EAAWJ,EAASS,GACpBP,EAAWF,GAETA,EAAQ/D,MAAQuE,EAAQhD,WAAWkD,KACrCF,EAAQhD,WAAWkD,GACjBF,EAAQG,aAAaX,EAAQ/D,IAAKuE,EAAQhD,WAAWkD,IACrDF,EAAQI,YAAYZ,EAAQ/D,MAalC,SAAS6D,EAAazC,GACpB,IAAK,IAAIwD,KAAYxD,EAAMyD,UACzBD,IA/EJpE,EAAEwD,eAAiB,CAACrE,EAAMoE,EAASJ,KACjC,IAAImB,EAAQf,EAAQnE,MAAMD,GACtBa,EAAEiC,cAAc9C,GAhHJ,mBAiHHa,EAAEiC,cAAc9C,IACzBa,EAAEiC,cAAc9C,GAAMmF,EAAOf,EAASJ,GAlH1B,mBAoHEmB,GAEX7B,EADLtD,EAAO,KAAKA,OAEVW,SAASyE,iBAAiBpF,EAAKqF,MAAM,GAAI9B,GACzCD,EAAkBtD,IAAQ,GAE5BoE,EAAQ/D,IAAIL,GAAQmF,GACXnF,KAAQoE,EAAQ/D,MAAQ+D,EAAQ1D,MACrC0D,EAAQ/D,IAAIL,KAAUmF,IACxBf,EAAQ/D,IAAIL,GAAQmF,GAEbA,IAAUnB,EAAQ/D,MAAMD,IACjCoE,EAAQ/D,IAAIiF,aAAatF,EAAMmF,IAkDnCtE,EAAEqE,UAAY,SAAUD,GACtB,IAAIM,EAAc1E,EAAE2E,QAAQD,YACvBA,EAAYtB,UACfsB,EAAYL,UAAY,GACxBK,EAAYtB,SAAU,GAExBsB,EAAYL,UAAUnD,KAAKkD,IAS7BpE,EAAE2E,QAAU,CACVD,YAAazF,EACb2F,eAAgB3F,EAChB4F,UAAW5F,GAGb,IAAI6F,EAAUC,MAAMD,QAGpB,SAASpB,EAAMV,EAAYgC,GACzB,IAAIC,EAAUH,EAAQ9B,EAAW3D,UAAY2D,EAAW3D,SAAW,CAAC2D,EAAW3D,UAC3E6F,EAAUF,EAAc3F,SAC5BW,EAAE2E,QAAQD,YAAc1B,EACxBhD,EAAE2E,QAAQC,eAAiBI,EAG3B,IAAK,IAAInE,EAAI,EAAGA,EAAIoE,EAAQjE,OAAQH,IAAK,CACvC,IAAII,EAAagE,EAAQpE,GAEzB,GAAIiE,EAAQ7D,GACVgE,EAAQE,OAAOtE,IAAK,KAAMI,QACrB,GAAIA,aAAsB/B,EAC/B,GAA+B,iBAApB+B,EAAW9B,KAAmB,CACvCa,EAAE2E,QAAQE,UAAY5D,EACtB,IAAImE,EAAanE,EAAW9B,KAAKkG,MAAQpE,EAAW9B,KACpD8F,EAAQE,OAAOtE,IAAK,EAAOuE,EAAW7E,KAAKU,EAAW9B,KAAM8B,EAAW7B,SAAU6B,EAAW5B,gBAE5F4B,EAAWpB,MAAQmD,EAAWnD,OAA6B,QAApBoB,EAAW9B,KAClD8B,EAAWmC,SAAWC,EAAapC,GAMzC,GAAIiE,EAAQlE,QAAUgC,EAAW5D,MAlOxB,UAkOqC,CAC5C,IAAIkG,EAAUJ,EAAQ1D,IAAIZ,GAASA,EAAMxB,MAAM8C,KAC3CqD,EAAUN,EAAQzD,IAAIZ,GAASA,EAAMxB,MAAM8C,KAE/C,IAAK,IAAIrB,EAAI,EAAGC,EAAIyE,EAAQvE,OAAQH,EAAIC,EAAGD,IAAK,CAC9C,IAAIqB,EAAMqD,EAAQ1E,GACd0C,EAAU0B,EAAQpE,GAGtB,GAAIqB,IAAQoD,EAAQzE,GAClBqE,EAAQrE,GAAG2E,WAAY,EACvB1B,EAAgBd,EAAWxD,IAAK+D,EAAS2B,EAAQrE,GAAIA,OAChD,CACL,IAAI4E,EAAWH,EAAQI,QAAQxD,GAC3B+B,EAAWpD,GAAKyE,EAAQtE,OAAS/B,EAAM4B,GAGzB,IAAd4E,GACFP,EAAQO,GAAUD,WAAY,EAC9B1B,EAAgBd,EAAWxD,IAAK+D,EAAS2B,EAAQO,GAAWxB,IAG5DH,EAAgBd,EAAWxD,IAAK+D,EAAS7D,EAAWuE,IAM1D,IAAInD,EAAIoE,EAAQlE,OAEhB,KAAOF,KACAoE,EAAQpE,GAAG0E,YACdvC,EAAciC,EAAQpE,GArQf,YAsQPoE,EAAQpE,GAAGtB,IAAIwD,YAAcA,EAAWxD,IAAImG,YAAYT,EAAQpE,GAAGtB,UAKlE,CACL,IAAIqB,EAAIqE,EAAQlE,OACZF,EAAImE,EAAQjE,OAGhB,KAAOH,KAAMC,GACXmC,EAAciC,EAAQrE,GAjRb,YAkRTmC,EAAWxD,IAAImG,YAAYT,EAAQrE,GAAGrB,KAGxC,IAAKqB,EAAI,EAAGA,EAAIC,EAAGD,IAAK,CACtB,IAAI0C,EAAU0B,EAAQpE,GAClBsC,EAAU+B,EAAQrE,GAEtB,GAAI0C,aAAmBrE,EAChBiE,EAICI,EAAQpE,OAASgE,EAAQhE,KAC3BwE,EAAWJ,EAASJ,IAEpBM,EAAWF,GACXN,EAAcE,EAlSX,YAmSHH,EAAWxD,IAAI0E,aAAaX,EAAQ/D,IAAK2D,EAAQ3D,OARnDiE,EAAWF,GACXP,EAAWxD,IAAI2E,YAAYZ,EAAQ/D,WAWhC,GAAI2D,aAAmB5D,EAC5BgE,EAAUqC,OAAOrC,GACbA,IAAYJ,EAAQ3D,IAAImB,YAC1BwC,EAAQ3D,IAAImB,UAAY4C,GAE1B0B,EAAQpE,GAAKsC,MACR,CACL,IAAI3D,EAAMM,SAAS+F,eAAetC,GAC7BJ,GAGHF,EAAcE,EAlTT,YAmTLH,EAAWxD,IAAI0E,aAAa1E,EAAK2D,EAAQ3D,MAHzCwD,EAAWxD,IAAI2E,YAAY3E,GAM7ByF,EAAQpE,GAAK,IAAItB,EAAUC,KAKjCwD,EAAW3D,SAAW4F,EAGxBjF,EAAE+C,OAAS,CAAC3D,KAAUC,KACpB,GAAIP,EAWF,OAVIE,IACFD,EAAcD,EACdA,EAAW,IAAII,EAAMJ,EAASK,KAAML,EAASM,MAAOY,EAAEhB,EAAkBI,KAAUC,IAClFP,EAASU,IAAMT,EAAYS,IAC3BV,EAASe,MAA0B,QAAlBf,EAASK,KAC1BJ,EAAYqE,SAAWC,EAAatE,GACpC2E,EAAM5E,EAAUC,GAChBiB,EAAE6D,WAAY,GAGT7D,EAAEE,QAAUpB,EAASU,IAAI8B,WAIpCtB,EAAE8F,MAAQ,CAACC,EAAWlB,EAAWzF,KAAUC,KACzC,IAAI2G,EAAgBhG,EAAEE,OAClBP,EAAc,OACO,iBAAdoG,EACLjG,SAASmG,iBAAiBF,GAAW,GACrCA,EAKN,OAHAjH,EAAWkB,EAAEI,UAAU4F,GACvBhH,EAAmB6F,EAEZ7E,EAAE+C,OAAO3D,KAAUC,IAG5BW,EAAEkG,QAAU,KACVlH,EAAmB,IAAM,GACzB,IAAImH,EAASnG,EAAE+C,SAGf,OAFA/D,EAAmBC,EACnBe,EAAE6D,WAAY,EACPsC,GAGTnG,EAAEoG,UAAY,CAACA,EAAWC,KAAarG,EAAEiC,cAAcmE,KAAepG,EAAEiC,cAAcmE,GAAaC,GACnGrG,EAAEoG,UAAU,QAAS,CAACpE,EAAKpB,IAAUA,EAAMvB,SAAW2C,EAAIR,IAAIZ,EAAMvB,SAAS,KAE7E,IAAIiH,EAAiBC,GAAS,CAACC,EAAM5F,EAAO6F,KAC1C,GAAID,IAASD,EAAM,CACjB,IAAIG,EAAS5G,SAAS+F,eAAe,IACjCY,EAAQjH,KAAOiH,EAAQjH,IAAIwD,aAC7BC,EAAcwD,EA1WL,YA2WTA,EAAQjH,IAAIwD,WAAWkB,aAAawC,EAAQD,EAAQjH,MAEtDoB,EAAMzB,KAAO,GACbyB,EAAMvB,SAAW,GACjBuB,EAAMxB,MAAQ,GACdwB,EAAMpB,IAAMkH,IAIhB1G,EAAEoG,UAAU,OAAQE,GAAc,IAClCtG,EAAEoG,UAAU,WAAYE,GAAc,IACtCtG,EAAEoG,UAAU,SAAU,CAACI,EAAM5F,IAAUA,EAAMpB,IAAImH,MAAMC,QAAUJ,EAAO,GAAK,SAE5ExG,EAAEE,OAAS2G,OAAS1G,QAAQH,EAAIA"}