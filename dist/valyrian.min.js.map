{"version":3,"file":"valyrian.min.js","sources":["../lib/index.js"],"sourcesContent":["let und;\nlet oncreate = 'oncreate';\nlet onupdate = 'onupdate';\nlet onremove = 'onremove';\nlet onbeforeupdate = 'onbeforeupdate';\nlet update;\nlet oldTree;\nlet mainContainer;\nlet mountedComponent;\nlet FALSE = false;\nlet TRUE = true;\nlet emptyObject = Object.create(null);\nlet emptyArray = [];\nlet keyString = 'key';\n\nfunction Vnode(name, props, children) {\n  this.props = props || emptyObject;\n  this.children = children;\n  this.isSVG = name === 'svg';\n  this.name = name;\n};\n\nfunction TextVnode() {}\nTextVnode.prototype = {\n  props: emptyObject,\n  children: emptyArray\n};\n\nlet emptyNode = new TextVnode();\n\nfunction createElement(tag, isSVG) {\n  return isSVG ?\n    document.createElementNS('http://www.w3.org/2000/svg', tag) :\n    document.createElement(tag);\n}\n\n// Hydrates the current dom before mount\nfunction dom2vnode($el) {\n  let nt = $el.nodeType;\n  if (nt === 3) {\n    let vnode = new TextVnode();\n    vnode.dom = $el;\n    return vnode;\n  }\n\n  if (nt === 1) {\n    let name = $el.nodeName.toLowerCase();\n    let vnode = new Vnode(\n      name,\n      {},\n      []\n    );\n    vnode.dom = $el;\n\n    for (let l = $el.attributes.length; l--;) {\n      let property = $el.attributes[l];\n      vnode.props[property.nodeName] = property.nodeValue;\n    }\n\n    for (let l = $el.childNodes.length; l--;) {\n      let childVnode = dom2vnode($el.childNodes[l]);\n      if (childVnode) {\n        vnode.children.push(childVnode);\n      }\n    }\n\n    return vnode;\n  }\n};\n\nfunction v(tagOrComponent, props, ...children) {\n  if (typeof tagOrComponent === 'string') {\n    return new Vnode(tagOrComponent, props, children);\n  }\n\n  if ('view' in tagOrComponent === FALSE) {\n    tagOrComponent.view = tagOrComponent;\n  }\n\n  return tagOrComponent.view(props, ...children);\n};\n\nv.isNode = typeof window === 'undefined';\n\n// This could be extended to do a deep clone\n// This mutates the component\nv.addState = (component, state) => Object.assign(component, {view: component}, state);\n\n// NOTE: This does not work with undom for server side rendering\n// See: https://github.com/developit/undom/issues/7\nv.trust = (htmlString) => {\n  let div = createElement('div', FALSE);\n  div.innerHTML = htmlString.trim();\n\n  return emptyArray.map.call(div.childNodes, (item) => dom2vnode(item));\n};\n\n// Plugin system\nlet plugins = new Map();\nv.use = (plugin, options) => !plugins.has(plugin) && plugins.set(plugin, plugin(v, options));\n\nlet attachedListeners = {};\nfunction eventListener(e) {\n  let dom = e.target;\n  let name = `__on${e.type}`;\n  while (dom) {\n    if (name in dom) {\n      dom[name](e);\n      update();\n      return;\n    }\n    dom = dom.parentNode;\n  }\n};\n\nfunction lifecycleCall(vnode, methodName, oldNode) {\n  if (vnode instanceof Vnode) {\n    if (methodName === onremove) {\n      for (let i = 0, l = vnode.children.length; i < l; i++) {\n        lifecycleCall(vnode.children[i], onremove);\n      }\n    }\n\n    if (methodName in vnode.props) {\n      return vnode.props[methodName](vnode, oldNode);\n    }\n  }\n}\n\nfunction updateProps(newNode, oldNode, isSVG) {\n  let dom = newNode.dom;\n  for (let name in newNode.props) {\n    if (name !== keyString) {\n      let prop = newNode.props[name];\n      if (typeof prop === 'function') {\n        switch (name) {\n          case oncreate:\n          case onupdate:\n          case onremove:\n          case onbeforeupdate:\n            break;\n          default:\n            name = `__${name}`;\n            if (name in attachedListeners === FALSE) {\n              document.addEventListener(name.slice(4), eventListener);\n              attachedListeners[name] = TRUE;\n            };\n            dom[name] = prop;\n            break;\n        }\n      } else if (name in dom && dom[name] !== prop && !isSVG) {\n        dom[name] = prop;\n      } else if (prop !== oldNode.props[name]) {\n        dom.setAttribute(name, prop);\n      }\n    }\n  }\n}\n\nfunction addNode($parent, newNode, isSVG, index) {\n  isSVG || newNode.isSVG;\n  newNode.dom = createElement(newNode.name, isSVG);\n  updateProps(newNode, emptyNode, isSVG);\n  index === und ?\n    $parent.appendChild(newNode.dom) :\n    $parent.insertBefore(newNode.dom, $parent.children[index] || null);\n\n  lifecycleCall(newNode, oncreate);\n  newNode.children = patch(newNode.dom, newNode.children, emptyArray, isSVG);\n}\n\nfunction updateNode(newNode, oldNode, isSVG) {\n  isSVG = isSVG || newNode.isSVG;\n  newNode.dom = oldNode.dom;\n  if (lifecycleCall(newNode, onbeforeupdate, oldNode) === FALSE) {\n    newNode.children = oldNode.children;\n  } else {\n    for (let name in oldNode.props) {\n      if (name in newNode.props === FALSE && typeof oldNode.props[name] !== 'function') {\n        if (name in newNode.dom) {\n          newNode.dom[name] = null;\n        } else {\n          newNode.dom.removeAttribute(name);\n        }\n      }\n    }\n    updateProps(newNode, oldNode, isSVG);\n    lifecycleCall(newNode, !v.isMounted ? oncreate : onupdate, oldNode);\n    newNode.children = patch(newNode.dom, newNode.children, oldNode.children, isSVG);\n  }\n}\n\nfunction removeNode($parent, oldNode) {\n  lifecycleCall(oldNode, onremove);\n  $parent.removeChild(oldNode.dom);\n}\n\nfunction getKeys(list) {\n  let keys = [];\n  for (let i = 0, l = list.length; i < l; i++) {\n    keys.push(list[i].props.key);\n  }\n  return keys;\n}\n\n// eslint-disable-next-line complexity,sonarjs/cognitive-complexity\nfunction patch($parent, newTree, oldTree, isSVG) {\n  if (Array.isArray(newTree) === FALSE) {\n    newTree = [newTree];\n  }\n\n  // New tree is empty so just remove all old nodes\n  if (newTree.length === 0) {\n    for (let i = oldTree.length; i--;) {\n      lifecycleCall(oldTree[i], onremove);\n    }\n    $parent.textContent = '';\n  } else {\n\n    // Flatten children\n    for (let i = 0; i < newTree.length; i++) {\n      if (Array.isArray(newTree[i])) {\n        newTree.splice(i, 1, ...newTree[i]);\n        i--;\n        continue;\n      }\n    }\n\n    // Is all new so just add them to parent node\n    if (oldTree.length === 0) {\n      for (let i = 0, l = newTree.length; i < l; i++) {\n        let newNode = newTree[i];\n        if (newNode instanceof Vnode) {\n          addNode($parent, newNode, isSVG);\n        } else {\n          let dom = document.createTextNode(newNode);\n          $parent.appendChild(dom);\n\n          newTree[i] = new TextVnode();\n          newTree[i].dom = dom;\n        }\n      }\n\n    // Is keyed list\n    } else if (newTree[0] instanceof Vnode && keyString in newTree[0].props) {\n      let oldKeys = getKeys(oldTree);\n      let newKeys = getKeys(newTree);\n      let oldLength = oldTree.length;\n      let newLength = newTree.length;\n      let newOldTree = [...oldTree];\n\n      // record the move of the last element.\n      let indexDeltas = new Array(oldLength).fill(0);\n      for (let newIndex = 0; newIndex < newLength; newIndex++) {\n        let key = newKeys[newIndex];\n        let physicalIndex = oldKeys.indexOf(key);\n        if (physicalIndex === -1) {\n          // Added\n          let newNode = newTree[newIndex];\n          newOldTree.splice(newIndex, 0, newNode);\n          addNode($parent, newNode, isSVG, newIndex);\n\n          // Positions of all unprocessed elements should take this delta.\n          indexDeltas[oldLength - 1]++;\n        } else {\n          let oldIndex = physicalIndex;\n\n          for (let i = oldLength - 1; i >= physicalIndex; i--) {\n            oldIndex += indexDeltas[i];\n          }\n\n          // Updated\n          if (newIndex === oldIndex) {\n            updateNode(newTree[newIndex], newOldTree[newIndex], isSVG);\n            continue;\n          }\n\n          // Moved\n          let oldNode = newOldTree.splice(oldIndex, 1)[0];\n          newOldTree.splice(newIndex, 0, oldNode);\n          updateNode(newTree[newIndex], oldNode, isSVG);\n          $parent.insertBefore(newTree[newIndex].dom, $parent.children[newIndex]);\n\n          // It is impossible to move element from front to back.\n          indexDeltas[physicalIndex]++;\n        }\n      }\n\n      // Removed\n      for (let i = 0, l = oldKeys.length; i < l; i++) {\n        if (newKeys.indexOf(oldKeys[i]) === -1) {\n          removeNode($parent, newOldTree.splice(newLength, 1)[0]);\n        }\n      }\n\n    // Not keyed list so use the simple algorithm\n    } else {\n      if (oldTree.length > newTree.length) {\n        // Remove deleted nodes\n        for (let i = oldTree.length, l = newTree.length; i-- && i >= l;) {\n          removeNode($parent, oldTree[i]);\n        }\n      }\n\n      for (let i = 0, l = newTree.length; i < l; i++) {\n        let newNode = newTree[i];\n        let oldNode = oldTree[i];\n\n        if (newNode instanceof Vnode) {\n          // Added\n          if (oldNode === und) {\n            addNode($parent, newNode, isSVG);\n            // Updated\n          } else if (newNode.name === oldNode.name) {\n            updateNode(newNode, oldNode, isSVG);\n            // Replaced\n          } else {\n            isSVG = isSVG || newNode.isSVG;\n            newNode.dom = createElement(newNode.name, isSVG);\n            lifecycleCall(oldNode, onremove);\n            updateProps(newNode, emptyNode, isSVG);\n            $parent.replaceChild(newNode.dom, oldNode.dom);\n            lifecycleCall(newNode, oncreate);\n            newNode.children = patch(newNode.dom, newNode.children, emptyArray, isSVG);\n          }\n\n        } else {\n          let dom;\n\n          // Added\n          if (oldNode === und) {\n            dom = document.createTextNode(newNode);\n            $parent.appendChild(dom);\n\n            // Replaced text\n          } else if (oldNode instanceof TextVnode) {\n            dom = oldNode.dom;\n            if (newNode !== dom.nodeValue) {\n              dom.nodeValue = newNode;\n            }\n            // Replaced element\n          } else {\n            dom = document.createTextNode(newNode);\n            lifecycleCall(oldNode, onremove);\n            $parent.replaceChild(dom, oldNode.dom);\n          }\n\n          newTree[i] = new TextVnode();\n          newTree[i].dom = dom;\n        }\n      }\n    }\n  }\n\n  return newTree;\n};\n\nv.update = update = (props, ...children) => {\n  oldTree = patch(mainContainer, v(mountedComponent, props, children), oldTree);\n\n  v.isMounted = TRUE;\n\n  return v.isNode && mainContainer.innerHTML;\n};\n\nv.mount = (container, component, props, ...children) => {\n  mainContainer = v.isNode\n    ? createElement('div')\n    : typeof container === 'string'\n      ? document.querySelectorAll(container)[0]\n      : container;\n\n  oldTree = dom2vnode(mainContainer).children;\n\n  mountedComponent = component;\n\n  return update(props, children);\n};\n\n(v.isNode ? global : window).v = v;\n"],"names":[],"mappings":"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"}