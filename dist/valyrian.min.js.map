//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"sources":["../lib/index.ts"],"names":["p","name","props","children","dom","onCleanup","isSVG","processed","constructor","a","u","c","this","x","nodeValue","M","component","S","window","global","b","d","document","createElementNS","createElement","U","forEach","call","attributes","nodeName","toLowerCase","y","childNodes","length","nodeType","push","N","F","innerHTML","trim","map","v","H","e","o","t","fragment","isMounted","isNode","reservedWords","trust","parentVnode","oldParentVnode","current","Map","usePlugin","has","set","indexOf","g","L","T","w","$","target","type","defaultPrevented","update","parentNode","G","O","addEventListener","slice","removeAttribute","setAttribute","E","P","updateProperty","V","onremove","D","l","C","i","n","splice","Array","isArray","view","String","textContent","r","key","m","Math","max","s","h","A","onbeforeupdate","onupdate","oncreate","appendChild","replaceChild","removeChild","createTextNode","f","k","unMount","mount","querySelectorAll","directive","R","style","display","classList","toggle","newInstance"],"mappings":"MAoDA,IAAAA,EAAA,MACEC,KACAC,MACAC,SACAC,IACAC,UACAC,MACAC,UAEAC,YAAYC,EAAcC,EAAcC,GACtCC,KAAKV,MAAQQ,EACbE,KAAKT,SAAWQ,EAChBC,KAAKX,KAAOQ,IAShBI,EAAA,MACET,IACAU,UAEAN,YAAYC,GACVG,KAAKE,UAAYL,IAUrBM,EAAA,MACEC,UACAd,MACAC,SAEAK,YAAYC,EAA8BC,EAAcC,GACtDC,KAAKV,MAAQQ,EACbE,KAAKT,SAAWQ,EAChBC,KAAKI,UAAYP,IAuBjBQ,EAA2B,oBAAXC,QAA4C,oBAAXC,OAGrD,SAAAC,EAAuBC,EAAiBZ,GAAiB,GACvD,OAAOA,EAAQa,SAASC,gBAAgB,6BAA8BF,GAAWC,SAASE,cAAcH,GAI1G,SAAAI,EAAoBJ,GAClB,IAAIZ,EAAe,GACnB,GAAGiB,QAAQC,KAAKN,EAAIO,WAAajB,GAAgBF,EAAME,EAAKkB,UAAYlB,EAAKG,WAE7E,IAAIJ,EAAe,IAAIV,EAAMqB,EAAIQ,SAASC,cAAerB,EAAO,IAChEC,EAAMN,IAAMiB,EAEZ,IAAA,IAASV,EAAI,EAAGoB,EAAIV,EAAIW,WAAWC,OAAQtB,EAAIoB,EAAGpB,IAChD,GAAmC,IAA/BU,EAAIW,WAAWrB,GAAGuB,SACpBxB,EAAMP,SAASgC,KAAKV,EAAWJ,EAAIW,WAAWrB,UAAA,GACN,IAA/BU,EAAIW,WAAWrB,GAAGuB,SAAgB,CAC3C,IAAIE,EAAY,IAAIvB,EAAUQ,EAAIW,WAAWrB,GAAGG,WAAa,IAC7DsB,EAAUhC,IAAMiB,EAAIW,WAAWrB,GAC/BD,EAAMP,SAASgC,KAAKC,GAGxB,OAAO1B,EAGT,IAAM2B,EAAShB,IACb,IAAIZ,EAAMW,EAAc,OACxB,OAAAX,EAAI6B,UAAYjB,EAAWkB,OAEpB,GAAGC,IAAIb,KAAKlB,EAAIuB,WAAatB,GAASe,EAAWf,MA6ZxDO,EAASE,OAASD,QAAuCuB,EAzZ3D,SAAAC,IACE,IAAMrB,EAAc,CAACsB,EAAgBC,KAAUC,IACf,iBAAnBF,EACF,IAAI3C,EAAM2C,EAAgBC,GAAS,GAAIC,GAEvC,IAAI9B,EAAe4B,EAAgBC,GAAS,GAAIC,GAI3DxB,EAAEyB,SAAW,CAACH,EAAcC,IACnBA,EAGTvB,EAAE0B,WAAY,EACd1B,EAAE2B,OAAS/B,EACX,IAAMR,EAAgB,CAAC,MAAO,OAAQ,SAAU,WAAY,WAAY,WAAY,kBACpFY,EAAE4B,cAAgBxC,EAClBY,EAAE6B,MAAQb,EAEV,IAAM3B,EAAmB,CACvByC,iBAAa,EACbC,oBAAgB,EAChBpC,eAAW,GAEbK,EAAEgC,QAAU3C,EAEZ,IAAMC,EAAU,IAAI2C,IAEpBjC,EAAEkC,UAAY,CAACZ,EAAgBC,EAA+B,MAAQjC,EAAQ6C,IAAIb,IAAWhC,EAAQ8C,IAAId,GAAQ,IAASA,EAAOtB,EAAeuB,GAEhJ,IAAIb,EAA2B,GAE/BV,EAAEhB,UAAasC,IACb,IAAIC,EAAcvB,EAAEgC,QAAQF,YACvBP,EAAYvC,YACfuC,EAAYvC,UAAY,IAG1BuC,EAAYvC,UAAU8B,KAAKQ,IAEkB,IAAzCZ,EAAgB2B,QAAQd,IAC1Bb,EAAgBI,KAAKS,IAIzB,IASIe,EAAmC,KACnCC,EAAoC,IAAM,GAC1CC,EAAsCD,EAEpCE,EAA8B,GACpC,SAAAC,EAAuBpB,GACrB,IAAIC,EAAMD,EAAEqB,OACRnB,EAAO,OAAOF,EAAEsB,OACpB,KAAOrB,GAAK,CACV,GAAIA,EAAIC,GAKN,OAJCD,EAAIC,GAA+BF,EAAGC,QAClCD,EAAEuB,kBACL7C,EAAE8C,UAINvB,EAAMA,EAAIwB,YAId,SAAAC,EAAwB1B,EAAcC,EAAuCC,GAC3E,IAAoC,IAAhCpC,EAAciD,QAAQf,IACxB,GAAIA,KAAQ2B,EACV,OAAOA,EAAW3B,GAAMC,EAAS1C,MAAMyC,GAAOC,EAAUC,OAEjB,mBAAzBD,EAAS1C,MAAMyC,SACG,IAA9BC,EAASxC,IAAI,KAAKuC,OAA6D,IAApCmB,EAAkBJ,QAAQf,KACtEgB,EAA6BY,iBAAiB5B,EAAK6B,MAAM,GAAIT,GAC9DD,EAAkB3B,KAAKQ,IAEzBC,EAASxC,IAAI,KAAKuC,KAAUC,EAAS1C,MAAMyC,IAClCA,KAAQC,EAASxC,MAAQwC,EAAStC,MAEvCsC,EAASxC,IAAIuC,IAASC,EAAS1C,MAAMyC,KACvCC,EAASxC,IAAIuC,GAAQC,EAAS1C,MAAMyC,UAEhB,IAAbE,GAA0BD,EAAS1C,MAAMyC,KAAUE,EAAS3C,MAAMyC,OAC9C,IAAzBC,EAAS1C,MAAMyC,GACjBC,EAASxC,IAAIqE,gBAAgB9B,GAE7BC,EAASxC,IAAIsE,aAAa/B,EAAMC,EAAS1C,MAAMyC,KAOrD,SAAAgC,EAA0BhC,EAAuCC,GAC/D,IAAA,IAASC,KAAQF,EAASzC,MACxB,IAAiD,IAA7CmE,EAAexB,EAAMF,EAAUC,GACjC,OAKN,SAAAgC,EAA0BjC,EAAuCC,GAC/D,IAAA,IAASC,KAAQD,EAAS1C,OACY,IAAhCO,EAAciD,QAAQb,MAAgBA,KAAQF,EAASzC,QAAmD,mBAAzB0C,EAAS1C,MAAM2C,KAC9FA,KAAQF,EAASvC,IACnBuC,EAASvC,IAAIyC,GAAQ,KAErBF,EAASvC,IAAIqE,gBAAgB5B,IAjBrCxB,EAAEwD,eAAiBR,EAuBnB,IAAMS,EAAcnC,IAClB,IAAA,IAASC,EAAI,EAAGC,EAAIF,EAAMxC,SAAS8B,OAAQW,EAAIC,EAAGD,IAChDD,EAAMxC,SAASyC,aAAc5C,GAAS8E,EAAWnC,EAAMxC,SAASyC,IAGlED,EAAMzC,MAAM6E,UAAYpC,EAAMzC,MAAM6E,SAASpC,IAG/C,SAAAqC,EAAerC,EAA6CC,GAC1D,IAAIC,EAAUD,GAAgBzC,UAAY,GACtC8E,EAAUtC,EAAexC,SACzB+E,EAAgBrC,EAAQZ,OAE5BvB,EAAQyC,YAAcR,EACtBjC,EAAQ0C,eAAiBR,EAGzB,IAAA,IAASuC,EAAI,EAAGA,EAAIF,EAAQhD,OAAQkD,IAAK,CACvC,IAAIC,EAAaH,EAAQE,GAErBC,aAAsBpF,EACxBoF,EAAW9E,MAAQqC,EAAerC,OAA6B,QAApB8E,EAAWnF,KAC9B,MAAfmF,EACTH,EAAQI,OAAOF,IAAK,GACXG,MAAMC,QAAQH,GACvBH,EAAQI,OAAOF,IAAK,KAAMC,GACjBA,aAAsBrE,GAC/BM,EAAEgC,QAAQrC,UAAYoE,EACtBH,EAAQI,OACNF,IACA,EAEE,SAAUC,EAAWpE,UACjBoE,EAAWpE,UAAUwE,KAAK7D,KAAKyD,EAAWpE,UAAWoE,EAAWlF,MAAOkF,EAAWjF,UACjFiF,EAAWpE,UAAwBW,KAAKyD,EAAWpE,UAAWoE,EAAWlF,MAAOkF,EAAWjF,YAIhGgF,EAAI,GAAKF,EAAQE,EAAI,GAAGrE,WAC1BmE,EAAQE,EAAI,GAAGrE,WAAasE,EAC5BH,EAAQI,OAAOF,IAAK,IACXC,aAAsBvE,IAC/BoE,EAAQE,GAAK,IAAItE,EAAU4E,OAAOL,KAKxC,IAAI3C,EAAgBwC,EAAQhD,OAG5B,GAAsB,IAAlBQ,GACF,GAAIyC,EAAgB,EAAG,CACrB,IAAA,IAASC,EAAID,EAAeC,KAC1BtC,EAAQsC,aAAcnF,GAAS8E,EAAWjC,EAAQsC,IAGpDxC,EAAevC,IAAIsF,YAAc,SAAA,GAG1BR,GAAiBD,EAAQ,aAAcjF,GAAS,QAASiF,EAAQ,GAAG/E,MAAO,CAEpF,IAAIiF,EAGJ,GAAItC,EAAQ,aAAc7C,GAAmB,QAAS6C,EAAQ,GAAG3C,MAQ/DiF,EAAetC,EAAQL,IAAKmD,GAAUA,EAAMzF,MAAM0F,SAR8B,CAChF,IAAA,IAASD,EAAIT,EAAeS,KAC1B9C,EAAQ8C,aAAc3F,GAAS8E,EAAWjC,EAAQ8C,IAGpDhD,EAAevC,IAAIsF,YAAc,GACjCP,EAAe,GAMjB,IAAIC,EAAeH,EAAQzC,IAAKmD,GAAUA,EAAMzF,MAAM0F,KAChDC,EAAgBC,KAAKC,IAAItD,EAAe0C,EAAalD,QAG3D,IAAA,IAAS0D,EAAI,EAAGA,EAAIE,EAAeF,IACjC,GAAIA,EAAIlD,EAAe,CACrB,IAAIuD,EAAaf,EAAQU,GACrBM,EAAgBd,EAAaQ,KAAOP,EAAaO,GAAK9C,EAAQ8C,GAAK9C,EAAQsC,EAAazB,QAAQsC,EAAW9F,MAAM0F,MACjHM,GAAc,EAEdD,GACFD,EAAW5F,IAAM6F,EAAc7F,IAC/B6F,EAAc1F,WAAY,EACtB,WAAYyF,EAAW9F,OAAU8F,EAAW9F,MAAMiG,iBAAiF,IAA/DH,EAAW9F,MAAMiG,eAAeH,EAAYC,IAElHD,EAAW7F,SAAW8F,EAAc9F,SACpC+F,GAAc,IAEdtB,EAAiBoB,EAA2CC,GAC5DtB,EAAiBqB,EAA2CC,GACxD5E,EAAE0B,UACJiD,EAAW9F,MAAMkG,UAAYJ,EAAW9F,MAAMkG,SAASJ,EAAYC,GAEnED,EAAW9F,MAAMmG,UAAYL,EAAW9F,MAAMmG,SAASL,MAI3DA,EAAW5F,IAAMgB,EAAc4E,EAAW/F,KAAM+F,EAAW1F,OAC3DqE,EAAiBqB,GACjBA,EAAW9F,MAAMmG,UAAYL,EAAW9F,MAAMmG,SAASL,SAGhB,IAArCrD,EAAevC,IAAI4B,WAAW2D,GAChChD,EAAevC,IAAIkG,YAAYN,EAAW5F,KACjCuC,EAAevC,IAAI4B,WAAW2D,KAAOK,EAAW5F,MACzDyC,EAAQ8C,aAAc3F,IAAU6C,EAAQ8C,GAAGpF,YAA4D,IAA/C6E,EAAa1B,QAAQb,EAAQ8C,GAAGzF,MAAM0F,MAAed,EAAWjC,EAAQ8C,IAChIhD,EAAevC,IAAImG,aAAaP,EAAW5F,IAAKuC,EAAevC,IAAI4B,WAAW2D,KAGhFO,GAAelB,EAAMgB,EAA2CC,QAE3DpD,EAAQ8C,GAAGpF,YACdsC,EAAQ8C,aAAc3F,GAAS8E,EAAWjC,EAAQ8C,IAClD9C,EAAQ8C,GAAGvF,IAAIgE,YAAczB,EAAevC,IAAIoG,YAAY3D,EAAQ8C,GAAGvF,UAIxE,CACL,IAAA,IAAS+E,EAAI,EAAGA,EAAI1C,EAAe0C,IAAK,CACtC,IAAIC,EAAaH,EAAQE,GACrBU,EAAgBhD,EAAQsC,GAG5B,QAAsB,IAAlBU,EACET,aAAsBpF,GACxBoF,EAAWhF,IAAMgB,EAAcgE,EAAWnF,KAAMmF,EAAW9E,OAC3DqE,EAAiBS,GACjBA,EAAWlF,MAAMmG,UAAYjB,EAAWlF,MAAMmG,SAASjB,GACvDJ,EAAMI,IAENA,EAAWhF,IAAMkB,SAASmF,eAAerB,EAAWtE,WAEtD6B,EAAevC,IAAIkG,YAAYlB,EAAWhF,UAAA,GAGtCgF,aAAsBpF,EACxB,GAAIoF,EAAWnF,OAAS4F,EAAc5F,KAAM,CAG1C,GAFAmF,EAAWhF,IAAMyF,EAAczF,IAE3B,WAAYgF,EAAWlF,OAAUkF,EAAWlF,MAAMiG,iBAAiF,IAA/Df,EAAWlF,MAAMiG,eAAef,EAAYS,GAA2B,CAE7IT,EAAWjF,SAAW0F,EAAc1F,SACpC,SAGFyE,EAAiBQ,EAA2CS,GAC5DlB,EAAiBS,EAA2CS,GACxDxE,EAAE0B,UACJqC,EAAWlF,MAAMkG,UAAYhB,EAAWlF,MAAMkG,SAAShB,EAAYS,GAEnET,EAAWlF,MAAMmG,UAAYjB,EAAWlF,MAAMmG,SAASjB,GAEzDJ,EAAMI,EAA2CS,QAEjDT,EAAWhF,IAAMgB,EAAcgE,EAAWnF,KAAMmF,EAAW9E,OAC3DqE,EAAiBS,GACjBA,EAAWlF,MAAMmG,UAAYjB,EAAWlF,MAAMmG,SAASjB,GACvDS,aAAyB7F,GAAS8E,EAAWe,GAC7ClD,EAAevC,IAAImG,aAAanB,EAAWhF,IAAKyF,EAAczF,KAC9D4E,EAAMI,QAGJS,aAAyB7F,GAC3BoF,EAAWhF,IAAMkB,SAASmF,eAAerB,EAAWtE,WACpDgE,EAAWe,GACXlD,EAAevC,IAAImG,aAAanB,EAAWhF,IAAKyF,EAAczF,OAE9DgF,EAAWhF,IAAMyF,EAAczF,IAE3BgF,EAAWtE,WAAasE,EAAWhF,IAAIU,YACzCsE,EAAWhF,IAAIU,UAAYsE,EAAWtE,YAQhD,IAAA,IAASqE,EAAID,EAAgB,EAAGC,GAAK1C,IAAiB0C,EACpDtC,EAAQsC,aAAcnF,GAAS8E,EAAWjC,EAAQsC,IAClDtC,EAAQsC,GAAG/E,IAAIgE,YAAczB,EAAevC,IAAIoG,YAAY3D,EAAQsC,GAAG/E,KAI3EuC,EAAexC,SAAW8E,EAG5B,IAAIyB,EAA0B,KAC1BC,EAA6B,KAEjCtF,EAAEuF,QAAU,KACV/C,EAAmBD,EACnB,IAAIjB,EAAStB,EAAE8C,SACf,OAAA9C,EAAE0B,WAAY,EACdY,EAAgB,KACThB,GAGTtB,EAAE8C,OAAS,CAACxB,KAAUC,KACpB,GAAI8D,IAzRc,MAClB,IAAA,IAAS/D,EAAIZ,EAAgBE,OAAQU,KACnC,IAAA,IAASC,KAAYb,EAAgBY,GAAGtC,UACtCuC,IAGJb,EAAkB,IAoRhBK,GACAuE,EAAeD,EACfA,EAAY,IAAI1G,EAAM0G,EAAUzG,KAAMyG,EAAUxG,MAAO,CAACmB,EAAEwC,EAAkBlB,KAAUC,KACtF8D,EAAUtG,IAAMuG,EAAavG,IAC7BsG,EAAUpG,MAAQqG,EAAarG,MAC/B0E,EAAM0B,EAAoCC,GAC1CtF,EAAE0B,WAAY,EACV1B,EAAE2B,QACJ,OAAQ0D,EAAUtG,IAAoBkC,WAK5CjB,EAAEwF,MAAQ,CAAClE,EAAWC,EAAWC,KAAUoC,KACrC5D,EAAE0B,WACJ1B,EAAEuF,UAIFjD,EADE1C,EACmC,iBAAd0B,EAAyBvB,EAAcuB,EAAyB,QAAdA,GAAuBA,EAE3D,iBAAdA,EAA0BrB,SAASwF,iBAAiBnE,GAAW,GAAoBA,EAGtF,OAAlBgB,IACF+C,EAAYjF,EAAWkC,GACvB+C,EAAUpG,MAA2B,QAAnBoG,EAAUzG,KAC5B0G,EAAeD,EACf7C,EAAmBjB,GAGdvB,EAAE8C,OAAOtB,KAAUoC,IAG5B,IAAIX,EAAwC,GAE5CjD,EAAE0F,UAAY,CAACpE,EAAcC,KAC3B,IAAIC,EAAW,KAAKF,KACoB,IAApClC,EAAciD,QAAQb,KACxBpC,EAAc0B,KAAKU,GACnByB,EAAWzB,GAAYD,IAI3B,IAAIoE,EAAiBrE,GAAkB,CAACC,EAAeC,EAAcoC,KAEnE,GADYtC,EAAOC,GAAQA,EAChB,CACT,IAAIH,EAASnB,SAASmF,eAAe,IACrC,OAAIxB,GAAWA,EAAQ7E,KAAO6E,EAAQ7E,IAAIgE,aACxCa,aAAmBjF,GAAS8E,EAAWG,GACvCA,EAAQ7E,IAAIgE,WAAWmC,aAAa9D,EAAQwC,EAAQ7E,MAEtDyC,EAAM5C,KAAO,QACb4C,EAAM1C,SAAW,GACjB0C,EAAM3C,MAAQ,GACd2C,EAAMzC,IAAMqC,GACL,IAIX,OAAApB,EAAE0F,UAAU,KAAMC,GAAc,IAChC3F,EAAE0F,UAAU,SAAUC,GAAc,IACpC3F,EAAE0F,UAAU,MAAO,CAACpE,EAAgBC,KAClCA,EAAMzC,SAAWwC,EAAIH,IAAII,EAAMzC,SAAS,MAE1CkB,EAAE0F,UAAU,OAAQ,CAACpE,EAAeC,KACjCA,EAAMxC,IAAuC6G,MAAMC,QAAUvE,EAAO,GAAK,SAE5EtB,EAAE0F,UAAU,QAAS,CAACpE,EAAmCC,KACvD,IAAA,IAASC,KAAQF,EACdC,EAAMxC,IAAmB+G,UAAUC,OAAOvE,EAAMF,EAAQE,MAG7DxB,EAAE0F,UAAU,OAAQ,CAACpE,EAAcC,KACjCA,EAAMzC,SAAW,CAACkC,EAAMM,MAG1BtB,EAAEgG,YAAc3E,EAETrB,EAGsDqB","sourcesContent":["/* eslint-disable complexity */\n/* eslint-disable sonarjs/cognitive-complexity */\n/* eslint-disable no-use-before-define */\n/* eslint-disable no-unused-vars */\n\ntype VnodeOrUnknown = VnodeComponent | Vnode | TextVnode | any;\n\ntype DomAttribute = { nodeName: string; nodeValue: string };\n\ntype DomElement = (HTMLElement | SVGElement) & Record<string, any>;\n\ntype Props = {\n  key?: string | number;\n  data?: string;\n  oncreate?: { (vnode: Vnode): never };\n  onupdate?: { (vnode: Vnode, oldVnode: Vnode | TextVnode): never };\n  onremove?: { (oldVnode: Vnode): never };\n  onbeforeupdate?: { (vnode: Vnode, oldVnode: Vnode | TextVnode): undefined | boolean };\n} & Record<string, any>;\n\ntype Component = (props?: Record<string, any> | null, children?: VnodeOrUnknown) => VnodeOrUnknown | VnodeOrUnknown[];\n\ntype ValyrianComponent =\n  | Component\n  | (Record<string, any> & {\n      view: Component;\n    });\n\ntype Current = { parentVnode?: Vnode; oldParentVnode?: Vnode; component?: VnodeComponent };\n\ninterface Plugin {\n  (v: Valyrian, options?: Record<string, any>): never;\n}\n\ninterface Directive {\n  (value: any, vnode: Vnode, oldVnode?: Vnode | TextVnode): void | boolean;\n}\n\ninterface ValyrianEventHandler {\n  (a: Event, dom: DomElement): void;\n}\n\ninterface Vnode {\n  name: string;\n  props: Props;\n  children: VnodeOrUnknown[];\n  dom?: DomElement;\n  onCleanup?: FunctionConstructor[];\n  isSVG?: boolean;\n  processed?: boolean;\n}\n\nclass Vnode implements Vnode {\n  name: string;\n  props: Props;\n  children: VnodeOrUnknown[];\n  dom?: DomElement;\n  onCleanup?: FunctionConstructor[];\n  isSVG?: boolean;\n  processed?: boolean;\n\n  constructor(name: string, props: Props, children: VnodeOrUnknown) {\n    this.props = props;\n    this.children = children;\n    this.name = name;\n  }\n}\n\ninterface TextVnode {\n  dom?: Text;\n  nodeValue: string;\n}\n\nclass TextVnode implements TextVnode {\n  dom?: Text;\n  nodeValue: string;\n\n  constructor(nodeValue: string) {\n    this.nodeValue = nodeValue;\n  }\n}\n\ninterface VnodeComponent {\n  component: ValyrianComponent;\n  props: Props;\n  children: VnodeOrUnknown[];\n}\n\nclass VnodeComponent implements VnodeComponent {\n  component: ValyrianComponent;\n  props: Props;\n  children: VnodeOrUnknown[];\n\n  constructor(component: ValyrianComponent, props: Props, children: VnodeOrUnknown[]) {\n    this.props = props;\n    this.children = children;\n    this.component = component;\n  }\n}\n\ninterface Valyrian {\n  (tagOrComponent: string | ValyrianComponent, props?: Props | null, children?: VnodeOrUnknown): Vnode | VnodeComponent;\n  fragment: (props: Props, children: VnodeOrUnknown[]) => VnodeOrUnknown[];\n  isMounted: boolean;\n  isNode: boolean;\n  reservedWords: string[];\n  current: Current;\n  trust: (htmlString: string) => Vnode[];\n  usePlugin: (plugin: Plugin, options: Record<string, any>) => void;\n  onCleanup: (callback: typeof Function) => void;\n  updateProperty: (name: string, newVnode: Vnode & { dom: DomElement }, oldNode: Vnode & { dom: DomElement }) => void;\n  update: (props?: Props | null, ...children: VnodeOrUnknown) => string | void;\n  mount: (container: string | DomElement, component: ValyrianComponent, props?: Props | null, ...children: VnodeOrUnknown[]) => string | void;\n  unMount: () => string | boolean | void;\n  directive: (directive: string, handler: Directive) => void;\n  newInstance: () => Valyrian;\n  [x: string]: any;\n}\n\nlet isNode = typeof window === \"undefined\" || typeof global !== \"undefined\";\n\n// Create Node element\nfunction createElement(tagName: string, isSVG: boolean = false): DomElement {\n  return isSVG ? document.createElementNS(\"http://www.w3.org/2000/svg\", tagName) : document.createElement(tagName);\n}\n\n// Transforms a DOM node to a VNode\nfunction domToVnode(dom: DomElement): Vnode {\n  let props: Props = {};\n  [].forEach.call(dom.attributes, (prop: Attr) => (props[prop.nodeName] = prop.nodeValue));\n\n  let vnode: Vnode = new Vnode(dom.nodeName.toLowerCase(), props, []);\n  vnode.dom = dom;\n\n  for (let i = 0, l = dom.childNodes.length; i < l; i++) {\n    if (dom.childNodes[i].nodeType === 1) {\n      vnode.children.push(domToVnode(dom.childNodes[i] as DomElement));\n    } else if (dom.childNodes[i].nodeType === 3) {\n      let textVnode = new TextVnode(dom.childNodes[i].nodeValue || \"\");\n      textVnode.dom = dom.childNodes[i] as unknown as Text;\n      vnode.children.push(textVnode);\n    }\n  }\n  return vnode;\n}\n\nconst trust = (htmlString: string) => {\n  let div = createElement(\"div\");\n  div.innerHTML = htmlString.trim();\n\n  return [].map.call(div.childNodes, (item) => domToVnode(item)) as Vnode[];\n};\n\n// eslint-disable-next-line max-lines-per-function\nfunction valyrian(): Valyrian {\n  const v: Valyrian = (tagOrComponent, props, ...children) => {\n    if (typeof tagOrComponent === \"string\") {\n      return new Vnode(tagOrComponent, props || {}, children);\n    } else {\n      return new VnodeComponent(tagOrComponent, props || {}, children);\n    }\n  };\n\n  v.fragment = (props: Props, vnodes: VnodeOrUnknown[]) => {\n    return vnodes;\n  };\n\n  v.isMounted = false;\n  v.isNode = isNode;\n  const reservedWords = [\"key\", \"data\", \"v-once\", \"oncreate\", \"onupdate\", \"onremove\", \"onbeforeupdate\"];\n  v.reservedWords = reservedWords;\n  v.trust = trust;\n\n  const current: Current = {\n    parentVnode: undefined,\n    oldParentVnode: undefined,\n    component: undefined\n  };\n  v.current = current;\n\n  const plugins = new Map();\n\n  v.usePlugin = (plugin: Plugin, options: Record<string, any> = {}) => !plugins.has(plugin) && plugins.set(plugin, true) && plugin(v as Valyrian, options);\n\n  let vnodesToCleanup: Vnode[] = [];\n\n  v.onCleanup = (callback: FunctionConstructor) => {\n    let parentVnode = v.current.parentVnode as Vnode;\n    if (!parentVnode.onCleanup) {\n      parentVnode.onCleanup = [] as FunctionConstructor[];\n    }\n\n    parentVnode.onCleanup.push(callback);\n\n    if (vnodesToCleanup.indexOf(parentVnode) === -1) {\n      vnodesToCleanup.push(parentVnode);\n    }\n  };\n\n  let cleanupVnodes = () => {\n    for (let l = vnodesToCleanup.length; l--; ) {\n      for (let callback of vnodesToCleanup[l].onCleanup as FunctionConstructor[]) {\n        callback();\n      }\n    }\n    vnodesToCleanup = [];\n  };\n\n  let mainContainer: DomElement | null = null;\n  let emptyComponent: ValyrianComponent = () => \"\";\n  let mountedComponent: ValyrianComponent = emptyComponent;\n\n  const attachedListeners: string[] = [];\n  function eventListener(e: Event) {\n    let dom = e.target as DomElement;\n    let name = `v-on${e.type}`;\n    while (dom) {\n      if (dom[name]) {\n        (dom[name] as ValyrianEventHandler)(e, dom);\n        if (!e.defaultPrevented) {\n          v.update();\n        }\n        return;\n      }\n      dom = dom.parentNode as DomElement;\n    }\n  }\n\n  function updateProperty(prop: string, newVnode: Vnode & { dom: DomElement }, oldVnode?: Vnode): void | boolean {\n    if (reservedWords.indexOf(prop) !== -1) {\n      if (prop in directives) {\n        return directives[prop](newVnode.props[prop], newVnode, oldVnode);\n      }\n    } else if (typeof newVnode.props[prop] === \"function\") {\n      if (newVnode.dom[`v-${prop}`] === undefined && attachedListeners.indexOf(prop) === -1) {\n        (mainContainer as DomElement).addEventListener(prop.slice(2), eventListener);\n        attachedListeners.push(prop);\n      }\n      newVnode.dom[`v-${prop}`] = newVnode.props[prop];\n    } else if (prop in newVnode.dom && !newVnode.isSVG) {\n      // eslint-disable-next-line eqeqeq\n      if (newVnode.dom[prop] != newVnode.props[prop]) {\n        newVnode.dom[prop] = newVnode.props[prop];\n      }\n    } else if (oldVnode === undefined || newVnode.props[prop] !== oldVnode.props[prop]) {\n      if (newVnode.props[prop] === false) {\n        newVnode.dom.removeAttribute(prop);\n      } else {\n        newVnode.dom.setAttribute(prop, newVnode.props[prop]);\n      }\n    }\n  }\n  v.updateProperty = updateProperty;\n\n  // Update a Vnode.dom HTMLElement with new Vnode props that are different from old Vnode props\n  function updateProperties(newVnode: Vnode & { dom: DomElement }, oldVnode?: Vnode): void {\n    for (let prop in newVnode.props) {\n      if (updateProperty(prop, newVnode, oldVnode) === false) {\n        return;\n      }\n    }\n  }\n\n  function removeProperties(newVnode: Vnode & { dom: DomElement }, oldVnode: Vnode) {\n    for (let name in oldVnode.props) {\n      if (reservedWords.indexOf(name) === -1 && name in newVnode.props === false && typeof oldVnode.props[name] !== \"function\") {\n        if (name in newVnode.dom) {\n          newVnode.dom[name] = null;\n        } else {\n          newVnode.dom.removeAttribute(name);\n        }\n      }\n    }\n  }\n\n  const callRemove = (vnode: Vnode) => {\n    for (let i = 0, l = vnode.children.length; i < l; i++) {\n      vnode.children[i] instanceof Vnode && callRemove(vnode.children[i]);\n    }\n\n    vnode.props.onremove && vnode.props.onremove(vnode);\n  };\n  // Patch a DOM node with a new VNode tree\n  function patch(newParentVnode: Vnode & { dom: DomElement }, oldParentVnode?: Vnode & { dom: DomElement }): void {\n    let oldTree = oldParentVnode?.children || [];\n    let newTree = newParentVnode.children;\n    let oldTreeLength = oldTree.length;\n\n    current.parentVnode = newParentVnode;\n    current.oldParentVnode = oldParentVnode;\n\n    // Flat newTree\n    for (let i = 0; i < newTree.length; i++) {\n      let childVnode = newTree[i];\n\n      if (childVnode instanceof Vnode) {\n        childVnode.isSVG = newParentVnode.isSVG || childVnode.name === \"svg\";\n      } else if (childVnode === null || childVnode === undefined) {\n        newTree.splice(i--, 1);\n      } else if (Array.isArray(childVnode)) {\n        newTree.splice(i--, 1, ...childVnode);\n      } else if (childVnode instanceof VnodeComponent) {\n        v.current.component = childVnode;\n        newTree.splice(\n          i--,\n          1,\n          ...[\n            \"view\" in childVnode.component\n              ? childVnode.component.view.call(childVnode.component, childVnode.props, childVnode.children)\n              : (childVnode.component as Component).call(childVnode.component, childVnode.props, childVnode.children)\n          ]\n        );\n      } else {\n        if (i > 0 && newTree[i - 1].nodeValue) {\n          newTree[i - 1].nodeValue += childVnode;\n          newTree.splice(i--, 1);\n        } else if (childVnode instanceof TextVnode === false) {\n          newTree[i] = new TextVnode(String(childVnode));\n        }\n      }\n    }\n\n    let newTreeLength = newTree.length;\n\n    // if newTree is empty, remove it\n    if (newTreeLength === 0) {\n      if (oldTreeLength > 0) {\n        for (let i = oldTreeLength; i--; ) {\n          oldTree[i] instanceof Vnode && callRemove(oldTree[i]);\n        }\n        // Fast node remove by setting textContent\n        newParentVnode.dom.textContent = \"\";\n      }\n      // If the tree is keyed list and is not first render\n    } else if (oldTreeLength && newTree[0] instanceof Vnode && \"key\" in newTree[0].props) {\n      // 1. Mutate the old key list to match the new key list\n      let oldKeyedList;\n\n      // if the oldTree does not have a keyed list fast remove all nodes\n      if (oldTree[0] instanceof Vnode === false || \"key\" in oldTree[0].props === false) {\n        for (let i = oldTreeLength; i--; ) {\n          oldTree[i] instanceof Vnode && callRemove(oldTree[i]);\n        }\n        // Fast node remove by setting textContent\n        newParentVnode.dom.textContent = \"\";\n        oldKeyedList = [];\n      } else {\n        oldKeyedList = oldTree.map((vnode) => vnode.props.key);\n      }\n\n      // 2. Obtain the max length of both lists\n      let newKeyedList = newTree.map((vnode) => vnode.props.key);\n      const maxListLength = Math.max(newTreeLength, oldKeyedList.length);\n\n      // 3. Cycle over all the elements of the list until the max length\n      for (let i = 0; i < maxListLength; i++) {\n        if (i < newTreeLength) {\n          let childVnode = newTree[i];\n          let oldChildVnode = oldKeyedList[i] === newKeyedList[i] ? oldTree[i] : oldTree[oldKeyedList.indexOf(childVnode.props.key)];\n          let shouldPatch = true;\n\n          if (oldChildVnode) {\n            childVnode.dom = oldChildVnode.dom;\n            oldChildVnode.processed = true;\n            if (\"v-once\" in childVnode.props || (childVnode.props.onbeforeupdate && childVnode.props.onbeforeupdate(childVnode, oldChildVnode) === false)) {\n              // skip this patch\n              childVnode.children = oldChildVnode.children;\n              shouldPatch = false;\n            } else {\n              removeProperties(childVnode as Vnode & { dom: DomElement }, oldChildVnode);\n              updateProperties(childVnode as Vnode & { dom: DomElement }, oldChildVnode);\n              if (v.isMounted) {\n                childVnode.props.onupdate && childVnode.props.onupdate(childVnode, oldChildVnode);\n              } else {\n                childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n              }\n            }\n          } else {\n            childVnode.dom = createElement(childVnode.name, childVnode.isSVG);\n            updateProperties(childVnode as Vnode & { dom: DomElement });\n            childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n          }\n\n          if (newParentVnode.dom.childNodes[i] === undefined) {\n            newParentVnode.dom.appendChild(childVnode.dom);\n          } else if (newParentVnode.dom.childNodes[i] !== childVnode.dom) {\n            oldTree[i] instanceof Vnode && !oldTree[i].processed && newKeyedList.indexOf(oldTree[i].props.key) === -1 && callRemove(oldTree[i]);\n            newParentVnode.dom.replaceChild(childVnode.dom, newParentVnode.dom.childNodes[i]);\n          }\n\n          shouldPatch && patch(childVnode as Vnode & { dom: DomElement }, oldChildVnode);\n        } else {\n          if (!oldTree[i].processed) {\n            oldTree[i] instanceof Vnode && callRemove(oldTree[i]);\n            oldTree[i].dom.parentNode && newParentVnode.dom.removeChild(oldTree[i].dom);\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < newTreeLength; i++) {\n        let childVnode = newTree[i];\n        let oldChildVnode = oldTree[i];\n\n        // if oldChildVnode is undefined, it's a new node, append it\n        if (oldChildVnode === undefined) {\n          if (childVnode instanceof Vnode) {\n            childVnode.dom = createElement(childVnode.name, childVnode.isSVG);\n            updateProperties(childVnode as Vnode & { dom: DomElement });\n            childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n            patch(childVnode as Vnode & { dom: DomElement });\n          } else {\n            childVnode.dom = document.createTextNode(childVnode.nodeValue);\n          }\n          newParentVnode.dom.appendChild(childVnode.dom);\n        } else {\n          // if childVnode is Vnode, replace it with its DOM node\n          if (childVnode instanceof Vnode) {\n            if (childVnode.name === oldChildVnode.name) {\n              childVnode.dom = oldChildVnode.dom;\n\n              if (\"v-once\" in childVnode.props || (childVnode.props.onbeforeupdate && childVnode.props.onbeforeupdate(childVnode, oldChildVnode) === false)) {\n                // skip this patch\n                childVnode.children = oldChildVnode.children;\n                continue;\n              }\n\n              removeProperties(childVnode as Vnode & { dom: DomElement }, oldChildVnode);\n              updateProperties(childVnode as Vnode & { dom: DomElement }, oldChildVnode);\n              if (v.isMounted) {\n                childVnode.props.onupdate && childVnode.props.onupdate(childVnode, oldChildVnode);\n              } else {\n                childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n              }\n              patch(childVnode as Vnode & { dom: DomElement }, oldChildVnode);\n            } else {\n              childVnode.dom = createElement(childVnode.name, childVnode.isSVG);\n              updateProperties(childVnode as Vnode & { dom: DomElement });\n              childVnode.props.oncreate && childVnode.props.oncreate(childVnode);\n              oldChildVnode instanceof Vnode && callRemove(oldChildVnode);\n              newParentVnode.dom.replaceChild(childVnode.dom, oldChildVnode.dom);\n              patch(childVnode as Vnode & { dom: DomElement });\n            }\n          } else {\n            if (oldChildVnode instanceof Vnode) {\n              childVnode.dom = document.createTextNode(childVnode.nodeValue);\n              callRemove(oldChildVnode);\n              newParentVnode.dom.replaceChild(childVnode.dom, oldChildVnode.dom as DomElement);\n            } else {\n              childVnode.dom = oldChildVnode.dom;\n              // eslint-disable-next-line eqeqeq\n              if (childVnode.nodeValue != childVnode.dom.nodeValue) {\n                childVnode.dom.nodeValue = childVnode.nodeValue;\n              }\n            }\n          }\n        }\n      }\n\n      // For remaining old children: remove from DOM, garbage collect\n      for (let i = oldTreeLength - 1; i >= newTreeLength; --i) {\n        oldTree[i] instanceof Vnode && callRemove(oldTree[i]);\n        oldTree[i].dom.parentNode && newParentVnode.dom.removeChild(oldTree[i].dom);\n      }\n    }\n\n    newParentVnode.children = newTree;\n  }\n\n  let mainVnode: Vnode | null = null;\n  let oldMainVnode: Vnode | null = null;\n\n  v.unMount = () => {\n    mountedComponent = emptyComponent;\n    let result = v.update();\n    v.isMounted = false;\n    mainContainer = null;\n    return result;\n  };\n\n  v.update = (props, ...children) => {\n    if (mainVnode) {\n      cleanupVnodes();\n      oldMainVnode = mainVnode;\n      mainVnode = new Vnode(mainVnode.name, mainVnode.props, [v(mountedComponent, props, ...children)]);\n      mainVnode.dom = oldMainVnode.dom;\n      mainVnode.isSVG = oldMainVnode.isSVG;\n      patch(mainVnode as Vnode & { dom: Node }, oldMainVnode as Vnode & { dom: Node });\n      v.isMounted = true;\n      if (v.isNode) {\n        return (mainVnode.dom as HTMLElement).innerHTML;\n      }\n    }\n  };\n\n  v.mount = (container, component, props, ...children) => {\n    if (v.isMounted) {\n      v.unMount();\n    }\n\n    if (isNode) {\n      mainContainer = typeof container === \"string\" ? createElement(container, container === \"svg\") : container;\n    } else {\n      mainContainer = typeof container === \"string\" ? (document.querySelectorAll(container)[0] as DomElement) : container;\n    }\n\n    if (mainContainer !== null) {\n      mainVnode = domToVnode(mainContainer);\n      mainVnode.isSVG = mainVnode.name === \"svg\";\n      oldMainVnode = mainVnode;\n      mountedComponent = component;\n    }\n\n    return v.update(props, ...children);\n  };\n\n  let directives: Record<string, Directive> = {};\n\n  v.directive = (name: string, directive: Directive) => {\n    let fullName = `v-${name}`;\n    if (reservedWords.indexOf(fullName) === -1) {\n      reservedWords.push(fullName);\n      directives[fullName] = directive;\n    }\n  };\n\n  let hideDirective = (test: boolean) => (bool: boolean, vnode: Vnode, oldnode?: Vnode | TextVnode) => {\n    let value = test ? bool : !bool;\n    if (value) {\n      let newdom = document.createTextNode(\"\");\n      if (oldnode && oldnode.dom && oldnode.dom.parentNode) {\n        oldnode instanceof Vnode && callRemove(oldnode);\n        oldnode.dom.parentNode.replaceChild(newdom, oldnode.dom);\n      }\n      vnode.name = \"#text\";\n      vnode.children = [];\n      vnode.props = {};\n      vnode.dom = newdom as unknown as DomElement;\n      return false;\n    }\n  };\n\n  v.directive(\"if\", hideDirective(false));\n  v.directive(\"unless\", hideDirective(true));\n  v.directive(\"for\", (set: unknown[], vnode: Vnode) => {\n    vnode.children = set.map(vnode.children[0] as (value: unknown) => Function);\n  });\n  v.directive(\"show\", (bool: boolean, vnode: Vnode) => {\n    (vnode.dom as { style: { display: string } }).style.display = bool ? \"\" : \"none\";\n  });\n  v.directive(\"class\", (classes: { [x: string]: boolean }, vnode: Vnode) => {\n    for (let name in classes) {\n      (vnode.dom as DomElement).classList.toggle(name, classes[name]);\n    }\n  });\n  v.directive(\"html\", (html: string, vnode: Vnode) => {\n    vnode.children = [trust(html)];\n  });\n\n  v.newInstance = valyrian;\n\n  return v;\n}\n\n((isNode ? global : window) as unknown as { v: Valyrian }).v = valyrian();\n"]}