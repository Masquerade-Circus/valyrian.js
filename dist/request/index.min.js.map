//# sourceMappingURL=data:application/json;charset=utf-8;base64,{"version":3,"names":["index_exports","__export","request","__EXPORTS__","import_valyrian","require","import_utils","serialize","obj","prefix","params","URLSearchParams","Object","keys","forEach","prop","key","append","toString","defaultOptions","allowedMethods","Requester","baseUrl","options","url","replace","trim","urls","base","node","api","opts","async","method","data","innerOptions","toUpperCase","headers","resolveWithFullResponse","Accept","acceptType","contentType","includes","Error","join","finalUrl","urlWithoutSlash","u","test","isNodeJs","URL","parseUrl","error","isJson","search","body","JSON","stringify","entries","reduce","fd","value","FormData","serializeFormData","response","fetch","ok","err","status","statusText","text","json","console","warn","blob","arrayBuffer","new","setOption","set","getOptions","get","assign","acc"],"sources":["../../lib/request/index.ts"],"sourcesContent":["import { isNodeJs } from \"valyrian.js\";\nimport { get, set } from \"valyrian.js/utils\";\n\ninterface UrlOptions {\n  base?: string; // Used to prefix the url for scoped requests.\n  node?: string | null; // Used to redirect local requests to node server for server side rendering.\n  api?: string | null; // Used to redirect api requests to node server for server side rendering.\n}\n\ninterface RequestOptions {\n  allowedMethods?: string[];\n  urls?: UrlOptions;\n  [key: string | number | symbol]: any;\n}\n\ninterface RequestOptionsWithUrls extends RequestOptions {\n  urls: UrlOptions;\n  allowedMethods: string[];\n}\n\ninterface SendOptions extends RequestOptionsWithUrls, RequestInit {\n  allowedMethods: string[];\n  method: string;\n  headers: Record<string, string>;\n  resolveWithFullResponse?: boolean;\n}\n\nexport interface RequestInterface {\n  // eslint-disable-next-line no-unused-vars\n  (method: string, url: string, data?: Record<string, any> | null, options?: Partial<SendOptions>): any | Response;\n  // eslint-disable-next-line no-unused-vars\n  new: (baseUrl: string, options?: RequestOptions) => RequestInterface;\n  // eslint-disable-next-line no-unused-vars\n  setOptions: (key: string, value: any) => void;\n  // eslint-disable-next-line no-unused-vars\n  getOptions: (key?: string) => RequestOptions | void;\n  // eslint-disable-next-line no-unused-vars\n  get: (url: string, data?: Record<string, any> | null, options?: Record<string, any>) => any | Response;\n  // eslint-disable-next-line no-unused-vars\n  post: (url: string, data?: Record<string, any> | null, options?: Record<string, any>) => any | Response;\n  // eslint-disable-next-line no-unused-vars\n  put: (url: string, data?: Record<string, any> | null, options?: Record<string, any>) => any | Response;\n  // eslint-disable-next-line no-unused-vars\n  patch: (url: string, data?: Record<string, any> | null, options?: Record<string, any>) => any | Response;\n  // eslint-disable-next-line no-unused-vars\n  delete: (url: string, data?: Record<string, any> | null, options?: Record<string, any>) => any | Response;\n  // eslint-disable-next-line no-unused-vars\n  head: (url: string, data?: Record<string, any> | null, options?: Record<string, any>) => any | Response;\n  // eslint-disable-next-line no-unused-vars\n  options: (url: string, data?: Record<string, any> | null, options?: Record<string, any>) => any | Response;\n  [key: string | number | symbol]: any;\n}\n\n// This method is used to serialize an object into a query string.\nfunction serialize(obj: Record<string, any>, prefix: string = \"\"): URLSearchParams {\n  const params = new URLSearchParams();\n\n  Object.keys(obj).forEach((prop: string) => {\n    const key = prefix ? `${prefix}[${prop}]` : prop;\n    if (typeof obj[prop] === \"object\") {\n      params.append(key, serialize(obj[prop], key).toString());\n    } else {\n      params.append(key, obj[prop]);\n    }\n  });\n\n  return params;\n}\n\nfunction serializeFormData(data: Record<string, any>): FormData {\n  return Object.entries(data).reduce((fd, [key, value]) => {\n    fd.append(key, value);\n    return fd;\n  }, new FormData());\n}\n\nfunction parseUrl(url: string, options: RequestOptionsWithUrls) {\n  const urlWithoutSlash = url.replace(/\\/+$/, \"\").trim();\n  const u = /^https?/gi.test(urlWithoutSlash) ? urlWithoutSlash : `${options.urls.base}${urlWithoutSlash}`;\n\n  if (isNodeJs && typeof options.urls.node === \"string\") {\n    if (typeof options.urls.api === \"string\") {\n      return new URL(u.replace(options.urls.api, options.urls.node));\n    }\n\n    if (!/^https?/gi.test(u)) {\n      return new URL(u, options.urls.node);\n    }\n  }\n\n  if (/^https?/gi.test(u)) {\n    return new URL(u);\n  }\n\n  return new URL(u, options.urls.base);\n}\n\nconst defaultOptions: RequestOptions = { allowedMethods: [\"get\", \"post\", \"put\", \"patch\", \"delete\", \"head\", \"options\"] };\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction Requester(baseUrl = \"\", options: RequestOptions = defaultOptions) {\n  const url = baseUrl.replace(/\\/$/gi, \"\").trim();\n  if (!options.urls) {\n    options.urls = {\n      base: \"\",\n      node: null,\n      api: null\n    };\n  }\n\n  if (!options.allowedMethods) {\n    options.allowedMethods = defaultOptions.allowedMethods;\n  }\n\n  const opts: RequestOptionsWithUrls = {\n    ...(options as RequestOptionsWithUrls),\n    urls: {\n      node: options.urls.node || null,\n      api: options.urls.api || null,\n      base: options.urls.base ? options.urls.base + url : url\n    }\n  };\n\n  // eslint-disable-next-line complexity\n  const request = async function request(\n    method: string,\n    url: string,\n    data?: Record<string, any> | null,\n    options: Record<string, any> = {}\n  ) {\n    const innerOptions: SendOptions = {\n      method: method.toUpperCase(),\n      headers: {},\n      resolveWithFullResponse: false,\n      ...opts,\n      ...options\n    } as SendOptions;\n\n    innerOptions.headers = { ...innerOptions.headers, ...opts.headers, ...options.headers };\n\n    if (!innerOptions.headers.Accept) {\n      innerOptions.headers.Accept = \"application/json\";\n    }\n\n    const acceptType = innerOptions.headers.Accept;\n    const contentType = innerOptions.headers[\"Content-Type\"] || innerOptions.headers[\"content-type\"] || \"\";\n\n    if (!innerOptions.allowedMethods.includes(method)) {\n      throw new Error(`Method ${method} not allowed. Allowed methods: ${innerOptions.allowedMethods.join(\", \")}`);\n    }\n\n    let finalUrl: URL;\n    try {\n      finalUrl = parseUrl(url, opts);\n    } catch (error) {\n      throw new Error(`Failed to parse URL: ${url}`);\n    }\n\n    if (data) {\n      const isJson = /json/gi.test(contentType);\n\n      if (innerOptions.method === \"GET\" && typeof data === \"object\") {\n        finalUrl.search = serialize(data).toString();\n      } else if (innerOptions.method !== \"GET\") {\n        innerOptions.body = isJson ? JSON.stringify(data) : serializeFormData(data);\n      }\n    }\n\n    const response = await fetch(finalUrl.toString(), innerOptions);\n    let body = null;\n    if (!response.ok) {\n      const err = new Error(`${response.status}: ${response.statusText}`) as Error & { response?: any; body?: any };\n      err.response = response;\n      if (/text/gi.test(acceptType)) {\n        err.body = await response.text();\n      }\n\n      if (/json/gi.test(acceptType)) {\n        try {\n          err.body = await response.json();\n        } catch (error) {\n          err.body = null;\n          // eslint-disable-next-line no-console\n          console.warn(\"Failed to parse JSON response:\", error);\n        }\n      }\n\n      throw err;\n    }\n\n    if (innerOptions.resolveWithFullResponse) {\n      return response;\n    }\n\n    if (/text/gi.test(acceptType)) {\n      body = await response.text();\n    } else if (/json/gi.test(acceptType)) {\n      try {\n        body = await response.json();\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.warn(\"Failed to parse JSON response:\", error);\n        body = null;\n      }\n    } else if (/blob/gi.test(acceptType)) {\n      body = await response.blob();\n    } else if (/arraybuffer/gi.test(acceptType)) {\n      body = await response.arrayBuffer();\n    } else {\n      body = response;\n    }\n\n    return body || response;\n  } as unknown as RequestInterface;\n\n  request.new = (baseUrl: string, options?: RequestOptions) => Requester(baseUrl, { ...opts, ...(options || {}) });\n\n  request.setOption = (key: string, value: any) => {\n    set(opts, key, value);\n    return opts;\n  };\n\n  request.getOptions = (key?: string) => {\n    if (key) {\n      return get(opts, key);\n    }\n\n    return opts;\n  };\n\n  Object.assign(\n    request,\n    opts.allowedMethods.reduce((acc: Record<string, any>, method) => {\n      acc[method] = (url: string, data?: Record<string, any> | null, options?: Record<string, any>) =>\n        request(method, url, data, options);\n      return acc;\n    }, {})\n  );\n\n  return request;\n}\n\nexport const request = Requester();\n"],"mappings":"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"}